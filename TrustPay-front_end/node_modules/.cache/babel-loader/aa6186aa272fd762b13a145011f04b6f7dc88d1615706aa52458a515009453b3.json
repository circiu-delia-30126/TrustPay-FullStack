{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UTCN\\\\OneDrive\\\\Documents\\\\PROIECT_II_REPOnou\\\\OriginTrustPay\\\\TrustPay_corect\\\\TrustPay-front_end\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Dashboard.css';\nimport logo from './logo1.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard({\n  user,\n  onLogout\n}) {\n  _s();\n  const [accounts, setAccounts] = useState([]);\n  const [transactions, setTransactions] = useState({});\n  const [currentTab, setCurrentTab] = useState(null);\n  const [showTransferForm, setShowTransferForm] = useState(false);\n  const [fromAccountId, setFromAccountId] = useState(null);\n  const [toAccountId, setToAccountId] = useState('');\n  const [transferAmount, setTransferAmount] = useState('');\n  const [transferCurrency, setTransferCurrency] = useState('RON');\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n  const [transferType, setTransferType] = useState(null);\n  const [toUserName, setToUserName] = useState('');\n  const [amount, setAmount] = useState('');\n  const [currency, setCurrency] = useState('RON');\n  const [fromUserName, setFromUserName] = useState(user.userName);\n  // Nou state pentru notificarea de confirmare a transferului\n  const [showNotification, setShowNotification] = useState(false);\n  const [notificationMessage, setNotificationMessage] = useState('');\n  // Nou state pentru a controla afișarea istoricului de tranzacții\n  const [showTransactionHistory, setShowTransactionHistory] = useState({});\n  const [loadingTransactions, setLoadingTransactions] = useState({});\n  const fetchAccounts = async () => {\n    try {\n      const response = await fetch(`https://localhost:7157/api/Accounts/user/${user.userId}`);\n      const data = await response.json();\n      if (Array.isArray(data) && data.length > 0) {\n        setAccounts(data);\n        setCurrentTab(data[0].accountType);\n      } else {\n        setAccounts([]);\n      }\n    } catch (error) {\n      console.error('Error fetching accounts:', error);\n    }\n  };\n  useEffect(() => {\n    fetchAccounts();\n  }, [user.userId]);\n\n  // Funcție pentru afișarea notificării de confirmare\n  const showConfirmationNotification = message => {\n    setNotificationMessage(message);\n    setShowNotification(true);\n    setTimeout(() => {\n      setShowNotification(false);\n    }, 5000);\n  };\n  const transferFunds = async () => {\n    const parsedAmount = parseFloat(transferAmount);\n    if (!parsedAmount || parsedAmount <= 0) {\n      setMessageType('error');\n      setMessage(\"Suma introdusă nu este validă.\");\n      return;\n    }\n    if (fromAccountId === toAccountId) {\n      setMessageType('error');\n      setMessage(\"Nu poți transfera către același cont.\");\n      return;\n    }\n    try {\n      const response = await fetch('https://localhost:7157/api/Transactions/transfer', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          fromAccountId,\n          toAccountId,\n          amount: parsedAmount,\n          currency: transferCurrency,\n          transactionType: \"Transfer\"\n        })\n      });\n      if (response.ok) {\n        setMessageType('success');\n        setMessage(\"Transfer realizat cu succes!\");\n        // Afișăm notificarea de confirmare\n        showConfirmationNotification(\"Transfer realizat cu succes!\");\n        await fetchAccounts();\n        setShowTransferForm(false);\n        setTransferAmount('');\n        setTransferCurrency('RON');\n\n        // Actualizăm tranzacțiile pentru contul sursă după un transfer reușit\n        if (showTransactionHistory[fromAccountId]) {\n          fetchTransactions(fromAccountId);\n        }\n      } else {\n        const errorData = await response.json();\n        setMessageType('error');\n        setMessage(\"Eroare la transfer: \" + (errorData.message || \"necunoscută\"));\n      }\n    } catch (error) {\n      setMessageType('error');\n      setMessage(\"Eroare: \" + error.message);\n    }\n    setTimeout(() => {\n      setMessage('');\n      setMessageType('');\n    }, 5000);\n  };\n  const transferBetweenUsers = async () => {\n    const parsedAmount = parseFloat(amount);\n    if (!parsedAmount || parsedAmount <= 0) {\n      setMessageType('error');\n      setMessage(\"Suma introdusă nu este validă.\");\n      return;\n    }\n    if (fromUserName === toUserName) {\n      setMessageType('error');\n      setMessage(\"Nu poți transfera către același utilizator.\");\n      return;\n    }\n    try {\n      const response = await fetch('https://localhost:7157/api/Transactions/transfer-between-users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          FromUserName: fromUserName,\n          ToUserName: toUserName,\n          Amount: parsedAmount,\n          Currency: currency,\n          TransactionType: \"Transfer\"\n        })\n      });\n      if (response.ok) {\n        setMessageType('success');\n        setMessage(\"Transfer realizat cu succes!\");\n        // Afișăm notificarea de confirmare\n        showConfirmationNotification(\"Transfer către utilizator realizat cu succes!\");\n        await fetchAccounts();\n        setShowTransferForm(false);\n        setAmount('');\n        setCurrency('RON');\n        setToUserName('');\n\n        // Actualizăm tranzacțiile pentru toate conturile după un transfer între utilizatori\n        accounts.forEach(acc => {\n          if (showTransactionHistory[acc.accountId]) {\n            fetchTransactions(acc.accountId);\n          }\n        });\n      } else {\n        const errorData = await response.json();\n        setMessageType('error');\n        setMessage(\"Eroare la transfer: \" + (errorData.message || \"necunoscută\"));\n      }\n    } catch (error) {\n      setMessageType('error');\n      setMessage(\"Eroare: \" + error.message);\n    }\n    setTimeout(() => {\n      setMessage('');\n      setMessageType('');\n    }, 5000);\n  };\n  const fetchTransactions = async accountId => {\n    try {\n      setLoadingTransactions(prev => ({\n        ...prev,\n        [accountId]: true\n      }));\n      const response = await fetch(`https://localhost:7157/api/Transactions/account/${accountId}`);\n      if (!response.ok) {\n        throw new Error(\"Nu s-au putut prelua tranzacțiile.\");\n      }\n      const data = await response.json();\n      setTransactions(prev => ({\n        ...prev,\n        [accountId]: data\n      }));\n    } catch (error) {\n      console.error(\"Eroare la preluarea tranzacțiilor:\", error);\n      setMessageType(\"error\");\n      setMessage(\"Eroare la preluarea tranzacțiilor!\");\n      setTimeout(() => {\n        setMessage(\"\");\n        setMessageType(\"\");\n      }, 4000);\n    } finally {\n      setLoadingTransactions(prev => ({\n        ...prev,\n        [accountId]: false\n      }));\n    }\n  };\n  const toggleTransactionHistory = async accountId => {\n    const currentValue = showTransactionHistory[accountId] || false;\n    setShowTransactionHistory(prev => ({\n      ...prev,\n      [accountId]: !currentValue\n    }));\n    if (!currentValue && !transactions[accountId]) {\n      await fetchTransactions(accountId);\n    }\n  };\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleString('ro-RO', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    });\n  };\n  const accountTypes = [...new Set(accounts.map(acc => acc.accountType))];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left logo-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"TrustPay Logo\",\n          className: \"header-logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"logo-text\",\n          children: \"Trust Pay - Siguran\\u021Ba banilor t\\u0103i!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"username\",\n          children: [\"Salut, \", user.userName, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chrome-tabs-container\",\n      children: accountTypes.map(type => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentTab(type),\n        className: `chrome-tab ${currentTab === type ? 'chrome-tab-active' : ''}`,\n        children: type\n      }, type, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: accounts.filter(acc => acc.accountType === currentTab).map(acc => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account-tab\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"account-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"account-title\",\n            children: acc.accountType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"balance-label\",\n            children: \"Balan\\u021B\\u0103:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"account-balance\",\n            children: [acc.balance, \" \", acc.currency]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"account-actions-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"account-actions-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-button transfer-button\",\n              onClick: () => {\n                setFromAccountId(acc.accountId);\n                setShowTransferForm(true);\n                setTransferType('funds');\n              },\n              children: \"Mutare fonduri\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-button transfer-button\",\n              onClick: () => {\n                setFromAccountId(acc.accountId);\n                setShowTransferForm(true);\n                setTransferType('user');\n              },\n              children: \"Transfer c\\u0103tre alt utilizator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"account-actions-right\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `action-button history-button ${showTransactionHistory[acc.accountId] ? 'history-button-active' : ''}`,\n              onClick: () => toggleTransactionHistory(acc.accountId),\n              children: \"Istoric Tranzac\\u021Bii\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 15\n        }, this), showTransactionHistory[acc.accountId] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transaction-history-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"transaction-history-title\",\n            children: \"Istoric Tranzac\\u021Bii\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 19\n          }, this), loadingTransactions[acc.accountId] ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-transactions\",\n            children: \"\\xCEnc\\u0103rcare tranzac\\u021Bii...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 21\n          }, this) : transactions[acc.accountId] && transactions[acc.accountId].length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"transaction-list\",\n            children: transactions[acc.accountId].map((transaction, index) => {\n              const isIncoming = transaction.toAccountId === acc.accountId;\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"transaction-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: isIncoming ? `→ De la contul ${transaction.fromAccountId}` : `→ Către contul ${transaction.toAccountId}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"transaction-date\",\n                    children: formatDate(transaction.transactionDate)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `transaction-amount ${isIncoming ? 'incoming-transaction' : 'outgoing-transaction'}`,\n                  children: [isIncoming ? '+' : '-', transaction.amount, \" \", transaction.currency]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 29\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 27\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-transactions\",\n            children: \"Nu exist\\u0103 tranzac\\u021Bii pentru acest cont.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 17\n        }, this)]\n      }, acc.accountId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), showTransferForm && transferType === 'funds' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"modal-title\",\n          children: \"Mutare fonduri\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: [\"C\\u0103tre cont:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              value: toAccountId,\n              onChange: e => setToAccountId(e.target.value),\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Selecteaz\\u0103\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 19\n              }, this), accounts.filter(acc => acc.accountId !== fromAccountId).map(acc => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: acc.accountId,\n                children: [acc.accountType, \" (\", acc.currency, \")\"]\n              }, acc.accountId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: [\"Suma:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: transferAmount,\n              onChange: e => setTransferAmount(e.target.value),\n              placeholder: \"Introdu suma\",\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: [\"Valuta:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              value: transferCurrency,\n              onChange: e => setTransferCurrency(e.target.value),\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"RON\",\n                children: \"RON\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"EUR\",\n                children: \"EUR\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"USD\",\n                children: \"USD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button cancel-button\",\n            onClick: () => setShowTransferForm(false),\n            children: \"Anuleaz\\u0103\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button confirm-button\",\n            onClick: transferFunds,\n            children: \"Transfer\\u0103\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 13\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-container ${messageType}-message`,\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 9\n    }, this), showTransferForm && transferType === 'user' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"modal-title\",\n          children: \"Transfer c\\u0103tre alt utilizator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: [\"C\\u0103tre utilizator:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: toUserName,\n              onChange: e => setToUserName(e.target.value),\n              placeholder: \"Introdu numele utilizatorului\",\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: [\"Suma:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: amount,\n              onChange: e => setAmount(e.target.value),\n              placeholder: \"Introdu suma\",\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: [\"Valuta:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              value: currency,\n              onChange: e => setCurrency(e.target.value),\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"RON\",\n                children: \"RON\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"EUR\",\n                children: \"EUR\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"USD\",\n                children: \"USD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button cancel-button\",\n            onClick: () => setShowTransferForm(false),\n            children: \"Anuleaz\\u0103\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button confirm-button\",\n            onClick: transferBetweenUsers,\n            children: \"Transfer\\u0103\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 13\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-container ${messageType}-message`,\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 9\n    }, this), showNotification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification success-notification\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"notification-icon\",\n          children: \"\\u2713\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: notificationMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"CtZT8jt7PJjBjoGLJ9v+vljZ6QU=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","logo","jsxDEV","_jsxDEV","Dashboard","user","onLogout","_s","accounts","setAccounts","transactions","setTransactions","currentTab","setCurrentTab","showTransferForm","setShowTransferForm","fromAccountId","setFromAccountId","toAccountId","setToAccountId","transferAmount","setTransferAmount","transferCurrency","setTransferCurrency","message","setMessage","messageType","setMessageType","transferType","setTransferType","toUserName","setToUserName","amount","setAmount","currency","setCurrency","fromUserName","setFromUserName","userName","showNotification","setShowNotification","notificationMessage","setNotificationMessage","showTransactionHistory","setShowTransactionHistory","loadingTransactions","setLoadingTransactions","fetchAccounts","response","fetch","userId","data","json","Array","isArray","length","accountType","error","console","showConfirmationNotification","setTimeout","transferFunds","parsedAmount","parseFloat","method","headers","body","JSON","stringify","transactionType","ok","fetchTransactions","errorData","transferBetweenUsers","FromUserName","ToUserName","Amount","Currency","TransactionType","forEach","acc","accountId","prev","Error","toggleTransactionHistory","currentValue","formatDate","dateString","date","Date","toLocaleString","day","month","year","hour","minute","second","accountTypes","Set","map","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","filter","balance","transaction","index","isIncoming","transactionDate","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/UTCN/OneDrive/Documents/PROIECT_II_REPOnou/OriginTrustPay/TrustPay_corect/TrustPay-front_end/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './Dashboard.css';\r\nimport logo from './logo1.png';\r\n\r\nfunction Dashboard({ user, onLogout }) {\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [transactions, setTransactions] = useState({});\r\n  const [currentTab, setCurrentTab] = useState(null);\r\n  const [showTransferForm, setShowTransferForm] = useState(false);\r\n  const [fromAccountId, setFromAccountId] = useState(null);\r\n  const [toAccountId, setToAccountId] = useState('');\r\n  const [transferAmount, setTransferAmount] = useState('');\r\n  const [transferCurrency, setTransferCurrency] = useState('RON');\r\n  const [message, setMessage] = useState('');\r\n  const [messageType, setMessageType] = useState('');\r\n  const [transferType, setTransferType] = useState(null);\r\n  const [toUserName, setToUserName] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n  const [currency, setCurrency] = useState('RON');\r\n  const [fromUserName, setFromUserName] = useState(user.userName);\r\n  // Nou state pentru notificarea de confirmare a transferului\r\n  const [showNotification, setShowNotification] = useState(false);\r\n  const [notificationMessage, setNotificationMessage] = useState('');\r\n  // Nou state pentru a controla afișarea istoricului de tranzacții\r\n  const [showTransactionHistory, setShowTransactionHistory] = useState({});\r\n  const [loadingTransactions, setLoadingTransactions] = useState({});\r\n\r\n  const fetchAccounts = async () => {\r\n    try {\r\n      const response = await fetch(`https://localhost:7157/api/Accounts/user/${user.userId}`);\r\n      const data = await response.json();\r\n      if (Array.isArray(data) && data.length > 0) {\r\n        setAccounts(data);\r\n        setCurrentTab(data[0].accountType);\r\n      } else {\r\n        setAccounts([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching accounts:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAccounts();\r\n  }, [user.userId]);\r\n\r\n  // Funcție pentru afișarea notificării de confirmare\r\n  const showConfirmationNotification = (message) => {\r\n    setNotificationMessage(message);\r\n    setShowNotification(true);\r\n    setTimeout(() => {\r\n      setShowNotification(false);\r\n    }, 5000);\r\n  };\r\n\r\n  const transferFunds = async () => {\r\n    const parsedAmount = parseFloat(transferAmount);\r\n    if (!parsedAmount || parsedAmount <= 0) {\r\n      setMessageType('error');\r\n      setMessage(\"Suma introdusă nu este validă.\");\r\n      return;\r\n    }\r\n\r\n    if (fromAccountId === toAccountId) {\r\n      setMessageType('error');\r\n      setMessage(\"Nu poți transfera către același cont.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('https://localhost:7157/api/Transactions/transfer', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          fromAccountId,\r\n          toAccountId,\r\n          amount: parsedAmount,\r\n          currency: transferCurrency,\r\n          transactionType: \"Transfer\"\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setMessageType('success');\r\n        setMessage(\"Transfer realizat cu succes!\");\r\n        // Afișăm notificarea de confirmare\r\n        showConfirmationNotification(\"Transfer realizat cu succes!\");\r\n        await fetchAccounts();\r\n        setShowTransferForm(false);\r\n        setTransferAmount('');\r\n        setTransferCurrency('RON');\r\n        \r\n        // Actualizăm tranzacțiile pentru contul sursă după un transfer reușit\r\n        if (showTransactionHistory[fromAccountId]) {\r\n          fetchTransactions(fromAccountId);\r\n        }\r\n      } else {\r\n        const errorData = await response.json();\r\n        setMessageType('error');\r\n        setMessage(\"Eroare la transfer: \" + (errorData.message || \"necunoscută\"));\r\n      }\r\n    } catch (error) {\r\n      setMessageType('error');\r\n      setMessage(\"Eroare: \" + error.message);\r\n    }\r\n\r\n    setTimeout(() => {\r\n      setMessage('');\r\n      setMessageType('');\r\n    }, 5000);\r\n  };\r\n\r\n  const transferBetweenUsers = async () => {\r\n    const parsedAmount = parseFloat(amount);\r\n    if (!parsedAmount || parsedAmount <= 0) {\r\n      setMessageType('error');\r\n      setMessage(\"Suma introdusă nu este validă.\");\r\n      return;\r\n    }\r\n\r\n    if (fromUserName === toUserName) {\r\n      setMessageType('error');\r\n      setMessage(\"Nu poți transfera către același utilizator.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('https://localhost:7157/api/Transactions/transfer-between-users', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          FromUserName: fromUserName,\r\n          ToUserName: toUserName,\r\n          Amount: parsedAmount,\r\n          Currency: currency,\r\n          TransactionType: \"Transfer\"\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setMessageType('success');\r\n        setMessage(\"Transfer realizat cu succes!\");\r\n        // Afișăm notificarea de confirmare\r\n        showConfirmationNotification(\"Transfer către utilizator realizat cu succes!\");\r\n        await fetchAccounts();\r\n        setShowTransferForm(false);\r\n        setAmount('');\r\n        setCurrency('RON');\r\n        setToUserName('');\r\n        \r\n        // Actualizăm tranzacțiile pentru toate conturile după un transfer între utilizatori\r\n        accounts.forEach(acc => {\r\n          if (showTransactionHistory[acc.accountId]) {\r\n            fetchTransactions(acc.accountId);\r\n          }\r\n        });\r\n      } else {\r\n        const errorData = await response.json();\r\n        setMessageType('error');\r\n        setMessage(\"Eroare la transfer: \" + (errorData.message || \"necunoscută\"));\r\n      }\r\n    } catch (error) {\r\n      setMessageType('error');\r\n      setMessage(\"Eroare: \" + error.message);\r\n    }\r\n\r\n    setTimeout(() => {\r\n      setMessage('');\r\n      setMessageType('');\r\n    }, 5000);\r\n  };\r\n\r\n  const fetchTransactions = async (accountId) => {\r\n    try {\r\n      setLoadingTransactions(prev => ({ ...prev, [accountId]: true }));\r\n      \r\n      const response = await fetch(`https://localhost:7157/api/Transactions/account/${accountId}`);\r\n      if (!response.ok) {\r\n        throw new Error(\"Nu s-au putut prelua tranzacțiile.\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      setTransactions(prev => ({ ...prev, [accountId]: data }));\r\n    } catch (error) {\r\n      console.error(\"Eroare la preluarea tranzacțiilor:\", error);\r\n      setMessageType(\"error\");\r\n      setMessage(\"Eroare la preluarea tranzacțiilor!\");\r\n      setTimeout(() => {\r\n        setMessage(\"\");\r\n        setMessageType(\"\");\r\n      }, 4000);\r\n    } finally {\r\n      setLoadingTransactions(prev => ({ ...prev, [accountId]: false }));\r\n    }\r\n  };\r\n\r\n  const toggleTransactionHistory = async (accountId) => {\r\n    const currentValue = showTransactionHistory[accountId] || false;\r\n    setShowTransactionHistory(prev => ({ ...prev, [accountId]: !currentValue }));\r\n    \r\n    if (!currentValue && !transactions[accountId]) {\r\n      await fetchTransactions(accountId);\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleString('ro-RO', {\r\n      day: '2-digit',\r\n      month: '2-digit',\r\n      year: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n      second: '2-digit'\r\n    });\r\n  };\r\n\r\n  const accountTypes = [...new Set(accounts.map((acc) => acc.accountType))];\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <header className=\"header\">\r\n        <div className=\"header-left logo-container\">\r\n          <img src={logo} alt=\"TrustPay Logo\" className=\"header-logo\" />\r\n          <span className=\"logo-text\">Trust Pay - Siguranța banilor tăi!</span>\r\n        </div>\r\n        <div className=\"header-right\">\r\n          <span className=\"username\">Salut, {user.userName}!</span>\r\n          <button onClick={onLogout}>Logout</button>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"chrome-tabs-container\">\r\n        {accountTypes.map((type) => (\r\n          <button\r\n            key={type}\r\n            onClick={() => setCurrentTab(type)}\r\n            className={`chrome-tab ${currentTab === type ? 'chrome-tab-active' : ''}`}\r\n          >\r\n            {type}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"tab-content\">\r\n        {accounts\r\n          .filter((acc) => acc.accountType === currentTab)\r\n          .map((acc) => (\r\n            <div key={acc.accountId} className=\"account-tab\">\r\n              <div className=\"account-info\">\r\n                <h3 className=\"account-title\">{acc.accountType}</h3>\r\n                <div className=\"balance-label\">Balanță:</div>\r\n                <p className=\"account-balance\">{acc.balance} {acc.currency}</p>\r\n              </div>\r\n              <div className=\"account-actions-container\">\r\n                <div className=\"account-actions-left\">\r\n                  <button \r\n                    className=\"action-button transfer-button\"\r\n                    onClick={() => {\r\n                      setFromAccountId(acc.accountId);\r\n                      setShowTransferForm(true);\r\n                      setTransferType('funds');\r\n                    }}\r\n                  >\r\n                    Mutare fonduri\r\n                  </button>\r\n                  <button \r\n                    className=\"action-button transfer-button\"\r\n                    onClick={() => {\r\n                      setFromAccountId(acc.accountId);\r\n                      setShowTransferForm(true);\r\n                      setTransferType('user');\r\n                    }}\r\n                  >\r\n                    Transfer către alt utilizator\r\n                  </button>\r\n                </div>\r\n                <div className=\"account-actions-right\">\r\n                  <button \r\n                    className={`action-button history-button ${showTransactionHistory[acc.accountId] ? 'history-button-active' : ''}`}\r\n                    onClick={() => toggleTransactionHistory(acc.accountId)}\r\n                  >\r\n                    Istoric Tranzacții\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Secțiunea de istoric tranzacții */}\r\n              {showTransactionHistory[acc.accountId] && (\r\n                <div className=\"transaction-history-container\">\r\n                  <h4 className=\"transaction-history-title\">Istoric Tranzacții</h4>\r\n                  \r\n                  {loadingTransactions[acc.accountId] ? (\r\n                    <div className=\"loading-transactions\">\r\n                      Încărcare tranzacții...\r\n                    </div>\r\n                  ) : transactions[acc.accountId] && transactions[acc.accountId].length > 0 ? (\r\n                    <ul className=\"transaction-list\">\r\n                      {transactions[acc.accountId].map((transaction, index) => {\r\n                        const isIncoming = transaction.toAccountId === acc.accountId;\r\n                        return (\r\n                          <li key={index} className=\"transaction-item\">\r\n                            <div>\r\n                              <span>\r\n                                {isIncoming \r\n                                  ? `→ De la contul ${transaction.fromAccountId}` \r\n                                  : `→ Către contul ${transaction.toAccountId}`}\r\n                              </span>\r\n                              <div className=\"transaction-date\">\r\n                                {formatDate(transaction.transactionDate)}\r\n                              </div>\r\n                            </div>\r\n                            <span className={`transaction-amount ${isIncoming ? 'incoming-transaction' : 'outgoing-transaction'}`}>\r\n                              {isIncoming ? '+' : '-'}{transaction.amount} {transaction.currency}\r\n                            </span>\r\n                          </li>\r\n                        );\r\n                      })}\r\n                    </ul>\r\n                  ) : (\r\n                    <div className=\"no-transactions\">\r\n                      Nu există tranzacții pentru acest cont.\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n      </div>\r\n\r\n      {showTransferForm && transferType === 'funds' && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <h3 className=\"modal-title\">Mutare fonduri</h3>\r\n            \r\n            <div className=\"form-group\">\r\n              <label className=\"form-label\">\r\n                Către cont:\r\n                <select\r\n                  value={toAccountId}\r\n                  onChange={(e) => setToAccountId(e.target.value)}\r\n                  className=\"form-control\"\r\n                >\r\n                  <option value=\"\">Selectează</option>\r\n                  {accounts\r\n                    .filter((acc) => acc.accountId !== fromAccountId)\r\n                    .map((acc) => (\r\n                      <option key={acc.accountId} value={acc.accountId}>\r\n                        {acc.accountType} ({acc.currency})\r\n                      </option>\r\n                    ))}\r\n                </select>\r\n              </label>\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label className=\"form-label\">\r\n                Suma:\r\n                <input\r\n                  type=\"number\"\r\n                  value={transferAmount}\r\n                  onChange={(e) => setTransferAmount(e.target.value)}\r\n                  placeholder=\"Introdu suma\"\r\n                  className=\"form-control\"\r\n                />\r\n              </label>\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label className=\"form-label\">\r\n                Valuta:\r\n                <select\r\n                  value={transferCurrency}\r\n                  onChange={(e) => setTransferCurrency(e.target.value)}\r\n                  className=\"form-control\"\r\n                >\r\n                  <option value=\"RON\">RON</option>\r\n                  <option value=\"EUR\">EUR</option>\r\n                  <option value=\"USD\">USD</option>\r\n                </select>\r\n              </label>\r\n            </div>\r\n            \r\n            <div className=\"modal-actions\">\r\n              <button \r\n                className=\"button cancel-button\"\r\n                onClick={() => setShowTransferForm(false)}\r\n              >\r\n                Anulează\r\n              </button>\r\n              <button \r\n                className=\"button confirm-button\"\r\n                onClick={transferFunds}\r\n              >\r\n                Transferă\r\n              </button>\r\n            </div>\r\n\r\n            {message && (\r\n              <div className={`message-container ${messageType}-message`}>\r\n                {message}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {showTransferForm && transferType === 'user' && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <h3 className=\"modal-title\">Transfer către alt utilizator</h3>\r\n            \r\n            <div className=\"form-group\">\r\n              <label className=\"form-label\">\r\n                Către utilizator:\r\n                <input\r\n                  type=\"text\"\r\n                  value={toUserName}\r\n                  onChange={(e) => setToUserName(e.target.value)}\r\n                  placeholder=\"Introdu numele utilizatorului\"\r\n                  className=\"form-control\"\r\n                />\r\n              </label>\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label className=\"form-label\">\r\n                Suma:\r\n                <input\r\n                  type=\"number\"\r\n                  value={amount}\r\n                  onChange={(e) => setAmount(e.target.value)}\r\n                  placeholder=\"Introdu suma\"\r\n                  className=\"form-control\"\r\n                />\r\n              </label>\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label className=\"form-label\">\r\n                Valuta:\r\n                <select\r\n                  value={currency}\r\n                  onChange={(e) => setCurrency(e.target.value)}\r\n                  className=\"form-control\"\r\n                >\r\n                  <option value=\"RON\">RON</option>\r\n                  <option value=\"EUR\">EUR</option>\r\n                  <option value=\"USD\">USD</option>\r\n                </select>\r\n              </label>\r\n            </div>\r\n            \r\n            <div className=\"modal-actions\">\r\n              <button \r\n                className=\"button cancel-button\"\r\n                onClick={() => setShowTransferForm(false)}\r\n              >\r\n                Anulează\r\n              </button>\r\n              <button \r\n                className=\"button confirm-button\"\r\n                onClick={transferBetweenUsers}\r\n              >\r\n                Transferă\r\n              </button>\r\n            </div>\r\n\r\n            {message && (\r\n              <div className={`message-container ${messageType}-message`}>\r\n                {message}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Notificare de confirmare pentru transfer */}\r\n      {showNotification && (\r\n        <div className=\"notification success-notification\">\r\n          <div className=\"notification-content\">\r\n            <span className=\"notification-icon\">✓</span>\r\n            <span>{notificationMessage}</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}