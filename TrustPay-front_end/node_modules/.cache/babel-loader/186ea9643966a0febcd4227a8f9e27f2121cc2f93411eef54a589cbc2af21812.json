{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UTCN\\\\OneDrive\\\\Desktop\\\\TrustPay-main\\\\TrustPay_corect\\\\TrustPay-front_end\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport logo from './logo1.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard({\n  user,\n  onLogout\n}) {\n  _s();\n  const [accounts, setAccounts] = useState([]);\n  const [transactions, setTransactions] = useState({});\n  const [currentTab, setCurrentTab] = useState(null);\n  const [showAddFunds, setShowAddFunds] = useState(false);\n  const [showTransferForm, setShowTransferForm] = useState(false);\n  const [selectedAccountId, setSelectedAccountId] = useState(null);\n  const [fromAccountId, setFromAccountId] = useState(null);\n  const [toAccountId, setToAccountId] = useState('');\n  const [amount, setAmount] = useState('');\n  const [currency, setCurrency] = useState('RON');\n  const [transferAmount, setTransferAmount] = useState('');\n  const [transferCurrency, setTransferCurrency] = useState('RON');\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n  const fetchAccounts = async () => {\n    try {\n      const response = await fetch(`https://localhost:7157/api/Accounts/user/${user.userId}`);\n      const data = await response.json();\n      if (Array.isArray(data) && data.length > 0) {\n        setAccounts(data);\n        setCurrentTab(data[0].accountType);\n      } else {\n        setAccounts([]);\n      }\n    } catch (error) {\n      console.error('Error fetching accounts:', error);\n    }\n  };\n  useEffect(() => {\n    fetchAccounts();\n  }, [user.userId]);\n  const addFunds = async () => {\n    const parsedAmount = parseFloat(amount);\n    if (!parsedAmount || parsedAmount <= 0) {\n      setMessageType('error');\n      setMessage(\"Suma introdusă nu este validă.\");\n      return;\n    }\n    try {\n      const response = await fetch('https://localhost:7157/api/Transactions/addFunds', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          fromAccountId: selectedAccountId,\n          toAccountId: selectedAccountId,\n          amount: parsedAmount,\n          currency: currency,\n          transactionType: \"Deposit\"\n        })\n      });\n      if (response.ok) {\n        setMessageType('success');\n        setMessage('Fondurile au fost adăugate cu succes!');\n        await fetchAccounts();\n        setShowAddFunds(false);\n        setAmount('');\n        setCurrency('RON');\n      } else {\n        const errorData = await response.json();\n        setMessageType('error');\n        setMessage('Eroare la adăugare: ' + (errorData.message || 'necunoscută'));\n      }\n    } catch (error) {\n      setMessageType('error');\n      setMessage('Eroare: ' + error.message);\n    }\n    setTimeout(() => {\n      setMessage('');\n      setMessageType('');\n    }, 5000);\n  };\n  const transferFunds = async () => {\n    const parsedAmount = parseFloat(transferAmount);\n    if (!parsedAmount || parsedAmount <= 0) {\n      setMessageType('error');\n      setMessage(\"Suma introdusă nu este validă.\");\n      return;\n    }\n    if (fromAccountId === toAccountId) {\n      setMessageType('error');\n      setMessage(\"Nu poți transfera către același cont.\");\n      return;\n    }\n    try {\n      const response = await fetch('https://localhost:7157/api/Transactions/transfer', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          fromAccountId,\n          toAccountId,\n          amount: parsedAmount,\n          currency: transferCurrency,\n          transactionType: \"Transfer\"\n        })\n      });\n      if (response.ok) {\n        setMessageType('success');\n        setMessage(\"Transfer realizat cu succes!\");\n        await fetchAccounts();\n        setShowTransferForm(false);\n        setTransferAmount('');\n        setTransferCurrency('RON');\n      } else {\n        const errorData = await response.json();\n        setMessageType('error');\n        setMessage(\"Eroare la transfer: \" + (errorData.message || \"necunoscută\"));\n      }\n    } catch (error) {\n      setMessageType('error');\n      setMessage(\"Eroare: \" + error.message);\n    }\n    setTimeout(() => {\n      setMessage('');\n      setMessageType('');\n    }, 5000);\n  };\n  const fetchTransactions = async accountId => {\n    try {\n      const response = await fetch(`https://localhost:7157/api/Transactions/account/${accountId}`);\n      if (!response.ok) {\n        throw new Error(\"Nu s-au putut prelua tranzacțiile.\");\n      }\n      const data = await response.json();\n      setTransactions(prev => ({\n        ...prev,\n        [accountId]: data\n      }));\n    } catch (error) {\n      console.error(\"Eroare la preluarea tranzacțiilor:\", error);\n      setMessageType(\"error\");\n      setMessage(\"Eroare la preluarea tranzacțiilor.\");\n      setTimeout(() => {\n        setMessage(\"\");\n        setMessageType(\"\");\n      }, 4000);\n    }\n  };\n  const viewTransactions = async accountId => {\n    await fetchTransactions(accountId);\n    const trans = transactions[accountId] || [];\n    if (trans.length === 0) {\n      setMessageType(\"info\");\n      setMessage(\"Nicio tranzacție înregistrată.\");\n      return;\n    }\n    const formatted = trans.map(t => `→ De la contul ${t.fromAccountId} către ${t.toAccountId} — ${t.amount} ${t.currency} (${new Date(t.transactionDate).toLocaleString()})`);\n    alert(\"Istoric tranzacții:\\n\\n\" + formatted.join(\"\\n\"));\n  };\n  const accountTypes = [...new Set(accounts.map(acc => acc.accountType))];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"TrustPay Logo\",\n          className: \"header-logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"TrustPay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"username\",\n          children: [\"Salut, \", user.userName, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: accountTypes.map(type => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentTab(type),\n        className: currentTab === type ? 'active' : '',\n        children: type\n      }, type, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: accounts.filter(acc => acc.accountType === currentTab).map(acc => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account-tab\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: acc.accountType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Balan\\u021B\\u0103: \", acc.balance, \" \", acc.currency]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setSelectedAccountId(acc.accountId);\n            setShowAddFunds(true);\n          },\n          children: \"Adaug\\u0103 Bani\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setFromAccountId(acc.accountId);\n            setShowTransferForm(true);\n          },\n          children: \"Mutare fonduri\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => viewTransactions(acc.accountId),\n          children: \"Istoric Tranzac\\u021Bii\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }, this)]\n      }, acc.accountId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), showAddFunds && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-funds-form animated-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ad\\u0103ugare Fonduri\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Suma:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: amount,\n            onChange: e => setAmount(e.target.value),\n            placeholder: \"Introdu suma\",\n            className: \"input-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Valuta:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: currency,\n            onChange: e => setCurrency(e.target.value),\n            className: \"input-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"RON\",\n              children: \"RON\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"EUR\",\n              children: \"EUR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"USD\",\n              children: \"USD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-funds-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-add\",\n          onClick: addFunds,\n          children: \"Adaug\\u0103\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-cancel\",\n          onClick: () => setShowAddFunds(false),\n          children: \"Anuleaz\\u0103\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${messageType}`,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }, this), showTransferForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-funds-form animated-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Mutare fonduri\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"C\\u0103tre cont:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: toAccountId,\n            onChange: e => setToAccountId(e.target.value),\n            className: \"input-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecteaz\\u0103\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this), accounts.filter(acc => acc.accountId !== fromAccountId).map(acc => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: acc.accountId,\n              children: [acc.accountType, \" (\", acc.currency, \")\"]\n            }, acc.accountId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Suma:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: transferAmount,\n            onChange: e => setTransferAmount(e.target.value),\n            placeholder: \"Introdu suma\",\n            className: \"input-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Valuta:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: transferCurrency,\n            onChange: e => setTransferCurrency(e.target.value),\n            className: \"input-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"RON\",\n              children: \"RON\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"EUR\",\n              children: \"EUR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"USD\",\n              children: \"USD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-funds-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-add\",\n          onClick: transferFunds,\n          children: \"Transfer\\u0103\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-cancel\",\n          onClick: () => setShowTransferForm(false),\n          children: \"Anuleaz\\u0103\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${messageType}`,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"nGNqxtzVpVe1x0Xa1nPM3yGBcLA=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","logo","jsxDEV","_jsxDEV","Dashboard","user","onLogout","_s","accounts","setAccounts","transactions","setTransactions","currentTab","setCurrentTab","showAddFunds","setShowAddFunds","showTransferForm","setShowTransferForm","selectedAccountId","setSelectedAccountId","fromAccountId","setFromAccountId","toAccountId","setToAccountId","amount","setAmount","currency","setCurrency","transferAmount","setTransferAmount","transferCurrency","setTransferCurrency","message","setMessage","messageType","setMessageType","fetchAccounts","response","fetch","userId","data","json","Array","isArray","length","accountType","error","console","addFunds","parsedAmount","parseFloat","method","headers","body","JSON","stringify","transactionType","ok","errorData","setTimeout","transferFunds","fetchTransactions","accountId","Error","prev","viewTransactions","trans","formatted","map","t","Date","transactionDate","toLocaleString","alert","join","accountTypes","Set","acc","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","userName","onClick","type","filter","balance","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/UTCN/OneDrive/Desktop/TrustPay-main/TrustPay_corect/TrustPay-front_end/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport logo from './logo1.png';\n\nfunction Dashboard({ user, onLogout }) {\n  const [accounts, setAccounts] = useState([]);\n  const [transactions, setTransactions] = useState({});\n  const [currentTab, setCurrentTab] = useState(null);\n  const [showAddFunds, setShowAddFunds] = useState(false);\n  const [showTransferForm, setShowTransferForm] = useState(false);\n  const [selectedAccountId, setSelectedAccountId] = useState(null);\n  const [fromAccountId, setFromAccountId] = useState(null);\n  const [toAccountId, setToAccountId] = useState('');\n  const [amount, setAmount] = useState('');\n  const [currency, setCurrency] = useState('RON');\n  const [transferAmount, setTransferAmount] = useState('');\n  const [transferCurrency, setTransferCurrency] = useState('RON');\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n\n  const fetchAccounts = async () => {\n    try {\n      const response = await fetch(`https://localhost:7157/api/Accounts/user/${user.userId}`);\n      const data = await response.json();\n      if (Array.isArray(data) && data.length > 0) {\n        setAccounts(data);\n        setCurrentTab(data[0].accountType);\n      } else {\n        setAccounts([]);\n      }\n    } catch (error) {\n      console.error('Error fetching accounts:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchAccounts();\n  }, [user.userId]);\n\n  const addFunds = async () => {\n    const parsedAmount = parseFloat(amount);\n    if (!parsedAmount || parsedAmount <= 0) {\n      setMessageType('error');\n      setMessage(\"Suma introdusă nu este validă.\");\n      return;\n    }\n\n    try {\n      const response = await fetch('https://localhost:7157/api/Transactions/addFunds', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          fromAccountId: selectedAccountId,\n          toAccountId: selectedAccountId,\n          amount: parsedAmount,\n          currency: currency,\n          transactionType: \"Deposit\"\n        }),\n      });\n\n      if (response.ok) {\n        setMessageType('success');\n        setMessage('Fondurile au fost adăugate cu succes!');\n        await fetchAccounts();\n        setShowAddFunds(false);\n        setAmount('');\n        setCurrency('RON');\n      } else {\n        const errorData = await response.json();\n        setMessageType('error');\n        setMessage('Eroare la adăugare: ' + (errorData.message || 'necunoscută'));\n      }\n    } catch (error) {\n      setMessageType('error');\n      setMessage('Eroare: ' + error.message);\n    }\n\n    setTimeout(() => {\n      setMessage('');\n      setMessageType('');\n    }, 5000);\n  };\n\n  const transferFunds = async () => {\n    const parsedAmount = parseFloat(transferAmount);\n    if (!parsedAmount || parsedAmount <= 0) {\n      setMessageType('error');\n      setMessage(\"Suma introdusă nu este validă.\");\n      return;\n    }\n\n    if (fromAccountId === toAccountId) {\n      setMessageType('error');\n      setMessage(\"Nu poți transfera către același cont.\");\n      return;\n    }\n\n    try {\n      const response = await fetch('https://localhost:7157/api/Transactions/transfer', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          fromAccountId,\n          toAccountId,\n          amount: parsedAmount,\n          currency: transferCurrency,\n          transactionType: \"Transfer\"\n        }),\n      });\n\n      if (response.ok) {\n        setMessageType('success');\n        setMessage(\"Transfer realizat cu succes!\");\n        await fetchAccounts();\n        setShowTransferForm(false);\n        setTransferAmount('');\n        setTransferCurrency('RON');\n      } else {\n        const errorData = await response.json();\n        setMessageType('error');\n        setMessage(\"Eroare la transfer: \" + (errorData.message || \"necunoscută\"));\n      }\n    } catch (error) {\n      setMessageType('error');\n      setMessage(\"Eroare: \" + error.message);\n    }\n\n    setTimeout(() => {\n      setMessage('');\n      setMessageType('');\n    }, 5000);\n  };\n\n  const fetchTransactions = async (accountId) => {\n    try {\n      const response = await fetch(`https://localhost:7157/api/Transactions/account/${accountId}`);\n      if (!response.ok) {\n        throw new Error(\"Nu s-au putut prelua tranzacțiile.\");\n      }\n\n      const data = await response.json();\n      setTransactions((prev) => ({ ...prev, [accountId]: data }));\n    } catch (error) {\n      console.error(\"Eroare la preluarea tranzacțiilor:\", error);\n      setMessageType(\"error\");\n      setMessage(\"Eroare la preluarea tranzacțiilor.\");\n      setTimeout(() => {\n        setMessage(\"\");\n        setMessageType(\"\");\n      }, 4000);\n    }\n  };\n\n  const viewTransactions = async (accountId) => {\n    await fetchTransactions(accountId);\n    const trans = transactions[accountId] || [];\n\n    if (trans.length === 0) {\n      setMessageType(\"info\");\n      setMessage(\"Nicio tranzacție înregistrată.\");\n      return;\n    }\n\n    const formatted = trans.map((t) =>\n      `→ De la contul ${t.fromAccountId} către ${t.toAccountId} — ${t.amount} ${t.currency} (${new Date(t.transactionDate).toLocaleString()})`\n    );\n\n    alert(\"Istoric tranzacții:\\n\\n\" + formatted.join(\"\\n\"));\n  };\n\n  const accountTypes = [...new Set(accounts.map((acc) => acc.accountType))];\n\n  return (\n    <div className=\"app-container\">\n      <header className=\"header\">\n        <div className=\"header-left\">\n          <img src={logo} alt=\"TrustPay Logo\" className=\"header-logo\" />\n          <h1>TrustPay</h1>\n        </div>\n        <div className=\"header-right\">\n          <span className=\"username\">Salut, {user.userName}!</span>\n          <button onClick={onLogout}>Logout</button>\n        </div>\n      </header>\n\n      <div className=\"tabs\">\n        {accountTypes.map((type) => (\n          <button\n            key={type}\n            onClick={() => setCurrentTab(type)}\n            className={currentTab === type ? 'active' : ''}\n          >\n            {type}\n          </button>\n        ))}\n      </div>\n\n      <div className=\"tab-content\">\n        {accounts\n          .filter((acc) => acc.accountType === currentTab)\n          .map((acc) => (\n            <div key={acc.accountId} className=\"account-tab\">\n              <h3>{acc.accountType}</h3>\n              <p>Balanță: {acc.balance} {acc.currency}</p>\n              <button\n                onClick={() => {\n                  setSelectedAccountId(acc.accountId);\n                  setShowAddFunds(true);\n                }}\n              >\n                Adaugă Bani\n              </button>\n              <button onClick={() => {\n                setFromAccountId(acc.accountId);\n                setShowTransferForm(true);\n              }}>\n                Mutare fonduri\n              </button>\n              <button onClick={() => viewTransactions(acc.accountId)}>\n                Istoric Tranzacții\n              </button>\n            </div>\n          ))}\n      </div>\n\n      {showAddFunds && (\n        <div className=\"add-funds-form animated-form\">\n          <h3>Adăugare Fonduri</h3>\n          <div>\n            <label>\n              Suma:\n              <input\n                type=\"number\"\n                value={amount}\n                onChange={(e) => setAmount(e.target.value)}\n                placeholder=\"Introdu suma\"\n                className=\"input-field\"\n              />\n            </label>\n          </div>\n          <div>\n            <label>\n              Valuta:\n              <select\n                value={currency}\n                onChange={(e) => setCurrency(e.target.value)}\n                className=\"input-field\"\n              >\n                <option value=\"RON\">RON</option>\n                <option value=\"EUR\">EUR</option>\n                <option value=\"USD\">USD</option>\n              </select>\n            </label>\n          </div>\n          <div className=\"add-funds-buttons\">\n            <button className=\"btn-add\" onClick={addFunds}>Adaugă</button>\n            <button className=\"btn-cancel\" onClick={() => setShowAddFunds(false)}>Anulează</button>\n          </div>\n\n          {message && (\n            <div className={`message ${messageType}`}>\n              {message}\n            </div>\n          )}\n        </div>\n      )}\n\n      {showTransferForm && (\n        <div className=\"add-funds-form animated-form\">\n          <h3>Mutare fonduri</h3>\n          <div>\n            <label>\n              Către cont:\n              <select\n                value={toAccountId}\n                onChange={(e) => setToAccountId(e.target.value)}\n                className=\"input-field\"\n              >\n                <option value=\"\">Selectează</option>\n                {accounts\n                  .filter((acc) => acc.accountId !== fromAccountId)\n                  .map((acc) => (\n                    <option key={acc.accountId} value={acc.accountId}>\n                      {acc.accountType} ({acc.currency})\n                    </option>\n                  ))}\n              </select>\n            </label>\n          </div>\n          <div>\n            <label>\n              Suma:\n              <input\n                type=\"number\"\n                value={transferAmount}\n                onChange={(e) => setTransferAmount(e.target.value)}\n                placeholder=\"Introdu suma\"\n                className=\"input-field\"\n              />\n            </label>\n          </div>\n          <div>\n            <label>\n              Valuta:\n              <select\n                value={transferCurrency}\n                onChange={(e) => setTransferCurrency(e.target.value)}\n                className=\"input-field\"\n              >\n                <option value=\"RON\">RON</option>\n                <option value=\"EUR\">EUR</option>\n                <option value=\"USD\">USD</option>\n              </select>\n            </label>\n          </div>\n          <div className=\"add-funds-buttons\">\n            <button className=\"btn-add\" onClick={transferFunds}>Transferă</button>\n            <button className=\"btn-cancel\" onClick={() => setShowTransferForm(false)}>Anulează</button>\n          </div>\n\n          {message && (\n            <div className={`message ${messageType}`}>\n              {message}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}