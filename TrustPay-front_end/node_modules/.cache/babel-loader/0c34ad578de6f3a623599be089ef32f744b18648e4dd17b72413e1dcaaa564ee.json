{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UTCN\\\\OneDrive\\\\Desktop\\\\TrustPay-main\\\\TrustPay_corect\\\\TrustPay-front_end\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport logo from './logo1.png';\n\n// Stiluri inline pentru noul design\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  chromeTabsContainer: {\n    backgroundColor: '#f0f3f5',\n    padding: '0 20px',\n    borderBottom: '1px solid #e0e0e0',\n    display: 'flex',\n    overflowX: 'auto',\n    whiteSpace: 'nowrap',\n    marginBottom: '20px'\n  },\n  chromeTab: {\n    background: 'transparent',\n    border: 'none',\n    borderRadius: '8px 8px 0 0',\n    padding: '14px 28px',\n    margin: '0 6px',\n    fontSize: '16px',\n    fontWeight: 'bold',\n    cursor: 'pointer',\n    color: '#333'\n  },\n  activeTab: {\n    borderBottom: '3px solid #007bff',\n    color: '#007bff'\n  },\n  accountCard: {\n    backgroundColor: '#ffffff',\n    border: '1px solid #ddd',\n    borderRadius: '12px',\n    padding: '20px',\n    marginBottom: '20px',\n    boxShadow: '0 2px 4px rgba(0,0,0,0.05)'\n  },\n  actionButton: {\n    padding: '10px 16px',\n    margin: '6px 4px',\n    borderRadius: '6px',\n    border: 'none',\n    cursor: 'pointer',\n    backgroundColor: '#007bff',\n    color: 'white',\n    fontSize: '14px'\n  }\n};\nfunction Dashboard({\n  user,\n  onLogout\n}) {\n  _s();\n  const [accounts, setAccounts] = useState([]);\n  const [currentTab, setCurrentTab] = useState(null);\n  const [showTransferForm, setShowTransferForm] = useState(false);\n  const [fromAccountId, setFromAccountId] = useState(null);\n  const [toAccountId, setToAccountId] = useState('');\n  const [transferAmount, setTransferAmount] = useState('');\n  const [transferCurrency, setTransferCurrency] = useState('RON');\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n  const [toUserName, setToUserName] = useState('');\n  const [transferType, setTransferType] = useState(null);\n  const fetchAccounts = async () => {\n    try {\n      const response = await fetch(`https://localhost:7157/api/Accounts/user/${user.userId}`);\n      const data = await response.json();\n      if (Array.isArray(data) && data.length > 0) {\n        setAccounts(data);\n        setCurrentTab(data[0].accountType);\n      } else {\n        setAccounts([]);\n      }\n    } catch (error) {\n      console.error('Error fetching accounts:', error);\n    }\n  };\n  useEffect(() => {\n    fetchAccounts();\n  }, [user.userId]);\n  const transferFunds = async () => {\n    const parsedAmount = parseFloat(transferAmount);\n    if (!parsedAmount || parsedAmount <= 0) {\n      setMessageType('error');\n      setMessage(\"Suma introdusă nu este validă.\");\n      return;\n    }\n    if (fromAccountId === toAccountId) {\n      setMessageType('error');\n      setMessage(\"Nu poți transfera către același cont.\");\n      return;\n    }\n    try {\n      const response = await fetch('https://localhost:7157/api/Transactions/transfer', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          fromAccountId,\n          toAccountId,\n          amount: parsedAmount,\n          currency: transferCurrency,\n          transactionType: \"Transfer\"\n        })\n      });\n      if (response.ok) {\n        setMessageType('success');\n        setMessage(\"Transfer realizat cu succes!\");\n        await fetchAccounts();\n        setShowTransferForm(false);\n        setTransferAmount('');\n        setTransferCurrency('RON');\n      } else {\n        const errorData = await response.json();\n        setMessageType('error');\n        setMessage(\"Eroare la transfer: \" + (errorData.message || \"necunoscută\"));\n      }\n    } catch (error) {\n      setMessageType('error');\n      setMessage(\"Eroare: \" + error.message);\n    }\n    setTimeout(() => {\n      setMessage('');\n      setMessageType('');\n    }, 5000);\n  };\n  const transferBetweenUsers = async () => {\n    const parsedAmount = parseFloat(transferAmount);\n    if (!parsedAmount || parsedAmount <= 0) {\n      setMessageType('error');\n      setMessage(\"Suma introdusă nu este validă.\");\n      return;\n    }\n    if (user.userName === toUserName) {\n      setMessageType('error');\n      setMessage(\"Nu poți transfera către același utilizator.\");\n      return;\n    }\n    try {\n      const response = await fetch('https://localhost:7157/api/Transactions/transfer-between-users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          FromUserName: user.userName,\n          ToUserName: toUserName,\n          Amount: parsedAmount,\n          Currency: transferCurrency,\n          TransactionType: \"Transfer\"\n        })\n      });\n      if (response.ok) {\n        setMessageType('success');\n        setMessage(\"Transfer realizat cu succes!\");\n        await fetchAccounts();\n        setShowTransferForm(false);\n        setTransferAmount('');\n        setTransferCurrency('RON');\n        setToUserName('');\n      } else {\n        const errorData = await response.json();\n        setMessageType('error');\n        setMessage(\"Eroare la transfer: \" + (errorData.message || \"necunoscută\"));\n      }\n    } catch (error) {\n      setMessageType('error');\n      setMessage(\"Eroare: \" + error.message);\n    }\n    setTimeout(() => {\n      setMessage('');\n      setMessageType('');\n    }, 5000);\n  };\n  const accountTypes = [...new Set(accounts.map(acc => acc.accountType))];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"TrustPay Logo\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"username\",\n          children: [\"Salut, \", user.userName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.chromeTabsContainer,\n      children: accountTypes.map(type => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentTab(type),\n        style: {\n          ...styles.chromeTab,\n          ...(currentTab === type ? styles.activeTab : {})\n        },\n        children: type\n      }, type, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), accounts.filter(acc => acc.accountType === currentTab).map(acc => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.accountCard,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: acc.accountType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Balan\\u021B\\u0103:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 16\n        }, this), \" \", acc.balance, \" \", acc.currency]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles.actionButton,\n        onClick: () => {\n          setFromAccountId(acc.accountId);\n          setTransferType('funds');\n          setShowTransferForm(true);\n        },\n        children: \"Mutare fonduri\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles.actionButton,\n        onClick: () => {\n          setFromAccountId(acc.accountId);\n          setTransferType('user');\n          setShowTransferForm(true);\n        },\n        children: \"Transfer c\\u0103tre alt utilizator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }, this)]\n    }, acc.accountId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }, this)), showTransferForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transfer-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: transferType === 'funds' ? \"Mutare fonduri\" : \"Transfer către alt utilizator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this), transferType === 'funds' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"C\\u0103tre cont:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: toAccountId,\n            onChange: e => setToAccountId(e.target.value),\n            className: \"input-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecteaz\\u0103\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 19\n            }, this), accounts.filter(acc => acc.accountId !== fromAccountId).map(acc => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: acc.accountId,\n              children: [acc.accountType, \" (\", acc.currency, \")\"]\n            }, acc.accountId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 23\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"C\\u0103tre utilizator:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: toUserName,\n            onChange: e => setToUserName(e.target.value),\n            placeholder: \"Introdu numele utilizatorului\",\n            className: \"input-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Suma:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: transferAmount,\n            onChange: e => setTransferAmount(e.target.value),\n            className: \"input-field\",\n            placeholder: \"Introdu suma\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Valuta:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: transferCurrency,\n            onChange: e => setTransferCurrency(e.target.value),\n            className: \"input-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"RON\",\n              children: \"RON\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"EUR\",\n              children: \"EUR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"USD\",\n              children: \"USD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-add\",\n          onClick: transferType === 'funds' ? transferFunds : transferBetweenUsers,\n          children: \"Transfer\\u0103\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-cancel\",\n          onClick: () => setShowTransferForm(false),\n          children: \"Anuleaz\\u0103\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: messageType,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"tVmG3wlxS0wwZassB6LO9rUV4rI=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","logo","jsxDEV","_jsxDEV","styles","chromeTabsContainer","backgroundColor","padding","borderBottom","display","overflowX","whiteSpace","marginBottom","chromeTab","background","border","borderRadius","margin","fontSize","fontWeight","cursor","color","activeTab","accountCard","boxShadow","actionButton","Dashboard","user","onLogout","_s","accounts","setAccounts","currentTab","setCurrentTab","showTransferForm","setShowTransferForm","fromAccountId","setFromAccountId","toAccountId","setToAccountId","transferAmount","setTransferAmount","transferCurrency","setTransferCurrency","message","setMessage","messageType","setMessageType","toUserName","setToUserName","transferType","setTransferType","fetchAccounts","response","fetch","userId","data","json","Array","isArray","length","accountType","error","console","transferFunds","parsedAmount","parseFloat","method","headers","body","JSON","stringify","amount","currency","transactionType","ok","errorData","setTimeout","transferBetweenUsers","userName","FromUserName","ToUserName","Amount","Currency","TransactionType","accountTypes","Set","map","acc","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","type","filter","balance","accountId","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/UTCN/OneDrive/Desktop/TrustPay-main/TrustPay_corect/TrustPay-front_end/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport logo from './logo1.png';\n\n// Stiluri inline pentru noul design\nconst styles = {\n  chromeTabsContainer: {\n    backgroundColor: '#f0f3f5',\n    padding: '0 20px',\n    borderBottom: '1px solid #e0e0e0',\n    display: 'flex',\n    overflowX: 'auto',\n    whiteSpace: 'nowrap',\n    marginBottom: '20px'\n  },\n  chromeTab: {\n    background: 'transparent',\n    border: 'none',\n    borderRadius: '8px 8px 0 0',\n    padding: '14px 28px',\n    margin: '0 6px',\n    fontSize: '16px',\n    fontWeight: 'bold',\n    cursor: 'pointer',\n    color: '#333',\n  },\n  activeTab: {\n    borderBottom: '3px solid #007bff',\n    color: '#007bff'\n  },\n  accountCard: {\n    backgroundColor: '#ffffff',\n    border: '1px solid #ddd',\n    borderRadius: '12px',\n    padding: '20px',\n    marginBottom: '20px',\n    boxShadow: '0 2px 4px rgba(0,0,0,0.05)'\n  },\n  actionButton: {\n    padding: '10px 16px',\n    margin: '6px 4px',\n    borderRadius: '6px',\n    border: 'none',\n    cursor: 'pointer',\n    backgroundColor: '#007bff',\n    color: 'white',\n    fontSize: '14px'\n  }\n};\n\nfunction Dashboard({ user, onLogout }) {\n  const [accounts, setAccounts] = useState([]);\n  const [currentTab, setCurrentTab] = useState(null);\n  const [showTransferForm, setShowTransferForm] = useState(false);\n  const [fromAccountId, setFromAccountId] = useState(null);\n  const [toAccountId, setToAccountId] = useState('');\n  const [transferAmount, setTransferAmount] = useState('');\n  const [transferCurrency, setTransferCurrency] = useState('RON');\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n  const [toUserName, setToUserName] = useState('');\n  const [transferType, setTransferType] = useState(null);\n\n  const fetchAccounts = async () => {\n    try {\n      const response = await fetch(`https://localhost:7157/api/Accounts/user/${user.userId}`);\n      const data = await response.json();\n      if (Array.isArray(data) && data.length > 0) {\n        setAccounts(data);\n        setCurrentTab(data[0].accountType);\n      } else {\n        setAccounts([]);\n      }\n    } catch (error) {\n      console.error('Error fetching accounts:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchAccounts();\n  }, [user.userId]);\n\n  const transferFunds = async () => {\n    const parsedAmount = parseFloat(transferAmount);\n    if (!parsedAmount || parsedAmount <= 0) {\n      setMessageType('error');\n      setMessage(\"Suma introdusă nu este validă.\");\n      return;\n    }\n\n    if (fromAccountId === toAccountId) {\n      setMessageType('error');\n      setMessage(\"Nu poți transfera către același cont.\");\n      return;\n    }\n\n    try {\n      const response = await fetch('https://localhost:7157/api/Transactions/transfer', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          fromAccountId,\n          toAccountId,\n          amount: parsedAmount,\n          currency: transferCurrency,\n          transactionType: \"Transfer\"\n        }),\n      });\n\n      if (response.ok) {\n        setMessageType('success');\n        setMessage(\"Transfer realizat cu succes!\");\n        await fetchAccounts();\n        setShowTransferForm(false);\n        setTransferAmount('');\n        setTransferCurrency('RON');\n      } else {\n        const errorData = await response.json();\n        setMessageType('error');\n        setMessage(\"Eroare la transfer: \" + (errorData.message || \"necunoscută\"));\n      }\n    } catch (error) {\n      setMessageType('error');\n      setMessage(\"Eroare: \" + error.message);\n    }\n\n    setTimeout(() => {\n      setMessage('');\n      setMessageType('');\n    }, 5000);\n  };\n\n  const transferBetweenUsers = async () => {\n    const parsedAmount = parseFloat(transferAmount);\n    if (!parsedAmount || parsedAmount <= 0) {\n      setMessageType('error');\n      setMessage(\"Suma introdusă nu este validă.\");\n      return;\n    }\n\n    if (user.userName === toUserName) {\n      setMessageType('error');\n      setMessage(\"Nu poți transfera către același utilizator.\");\n      return;\n    }\n\n    try {\n      const response = await fetch('https://localhost:7157/api/Transactions/transfer-between-users', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          FromUserName: user.userName,\n          ToUserName: toUserName,\n          Amount: parsedAmount,\n          Currency: transferCurrency,\n          TransactionType: \"Transfer\"\n        }),\n      });\n\n      if (response.ok) {\n        setMessageType('success');\n        setMessage(\"Transfer realizat cu succes!\");\n        await fetchAccounts();\n        setShowTransferForm(false);\n        setTransferAmount('');\n        setTransferCurrency('RON');\n        setToUserName('');\n      } else {\n        const errorData = await response.json();\n        setMessageType('error');\n        setMessage(\"Eroare la transfer: \" + (errorData.message || \"necunoscută\"));\n      }\n    } catch (error) {\n      setMessageType('error');\n      setMessage(\"Eroare: \" + error.message);\n    }\n\n    setTimeout(() => {\n      setMessage('');\n      setMessageType('');\n    }, 5000);\n  };\n\n  const accountTypes = [...new Set(accounts.map((acc) => acc.accountType))];\n\n  return (\n    <div className=\"app-container\">\n      <header className=\"header\">\n        <img src={logo} alt=\"TrustPay Logo\" className=\"logo\" />\n        <div className=\"header-right\">\n          <span className=\"username\">Salut, {user.userName}</span>\n          <button onClick={onLogout}>Logout</button>\n        </div>\n      </header>\n\n      <div style={styles.chromeTabsContainer}>\n        {accountTypes.map((type) => (\n          <button\n            key={type}\n            onClick={() => setCurrentTab(type)}\n            style={{\n              ...styles.chromeTab,\n              ...(currentTab === type ? styles.activeTab : {})\n            }}\n          >\n            {type}\n          </button>\n        ))}\n      </div>\n\n      {accounts\n        .filter((acc) => acc.accountType === currentTab)\n        .map((acc) => (\n          <div key={acc.accountId} style={styles.accountCard}>\n            <h3>{acc.accountType}</h3>\n            <p><strong>Balanță:</strong> {acc.balance} {acc.currency}</p>\n\n            <button\n              style={styles.actionButton}\n              onClick={() => {\n                setFromAccountId(acc.accountId);\n                setTransferType('funds');\n                setShowTransferForm(true);\n              }}\n            >\n              Mutare fonduri\n            </button>\n            <button\n              style={styles.actionButton}\n              onClick={() => {\n                setFromAccountId(acc.accountId);\n                setTransferType('user');\n                setShowTransferForm(true);\n              }}\n            >\n              Transfer către alt utilizator\n            </button>\n          </div>\n        ))}\n\n      {showTransferForm && (\n        <div className=\"transfer-form\">\n          <h3>{transferType === 'funds' ? \"Mutare fonduri\" : \"Transfer către alt utilizator\"}</h3>\n\n          {transferType === 'funds' ? (\n            <div>\n              <label>\n                Către cont:\n                <select\n                  value={toAccountId}\n                  onChange={(e) => setToAccountId(e.target.value)}\n                  className=\"input-field\"\n                >\n                  <option value=\"\">Selectează</option>\n                  {accounts\n                    .filter((acc) => acc.accountId !== fromAccountId)\n                    .map((acc) => (\n                      <option key={acc.accountId} value={acc.accountId}>\n                        {acc.accountType} ({acc.currency})\n                      </option>\n                    ))}\n                </select>\n              </label>\n            </div>\n          ) : (\n            <div>\n              <label>\n                Către utilizator:\n                <input\n                  type=\"text\"\n                  value={toUserName}\n                  onChange={(e) => setToUserName(e.target.value)}\n                  placeholder=\"Introdu numele utilizatorului\"\n                  className=\"input-field\"\n                />\n              </label>\n            </div>\n          )}\n\n          <div>\n            <label>\n              Suma:\n              <input\n                type=\"number\"\n                value={transferAmount}\n                onChange={(e) => setTransferAmount(e.target.value)}\n                className=\"input-field\"\n                placeholder=\"Introdu suma\"\n              />\n            </label>\n          </div>\n          <div>\n            <label>\n              Valuta:\n              <select\n                value={transferCurrency}\n                onChange={(e) => setTransferCurrency(e.target.value)}\n                className=\"input-field\"\n              >\n                <option value=\"RON\">RON</option>\n                <option value=\"EUR\">EUR</option>\n                <option value=\"USD\">USD</option>\n              </select>\n            </label>\n          </div>\n\n          <div className=\"form-buttons\">\n            <button\n              className=\"btn-add\"\n              onClick={transferType === 'funds' ? transferFunds : transferBetweenUsers}\n            >\n              Transferă\n            </button>\n            <button className=\"btn-cancel\" onClick={() => setShowTransferForm(false)}>\n              Anulează\n            </button>\n          </div>\n\n          {message && (\n            <div className={messageType}>\n              {message}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}