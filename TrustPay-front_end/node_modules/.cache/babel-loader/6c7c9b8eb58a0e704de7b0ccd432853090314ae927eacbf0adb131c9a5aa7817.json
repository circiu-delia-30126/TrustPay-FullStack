{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrada\\\\Documents\\\\semestru 2\\\\proiect repository2\\\\TrustPay_Project\\\\TrustPay_corect\\\\TrustPay-front_end\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Dashboard.css';\nimport logo from './logo1.png';\nimport { useNavigate } from 'react-router-dom';\nimport Profile from './Profile';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Dashboard({\n  user,\n  onLogout\n}) {\n  _s();\n  const [accounts, setAccounts] = useState([]);\n  const [currentTab, setCurrentTab] = useState(null);\n  const [showTransferForm, setShowTransferForm] = useState(false);\n  const [fromAccountId, setFromAccountId] = useState(null);\n  const [toAccountId, setToAccountId] = useState(\"\");\n  const [transferAmount, setTransferAmount] = useState(\"\");\n  const [transferCurrency, setTransferCurrency] = useState(\"RON\");\n  const [message, setMessage] = useState(\"\");\n  const [messageType, setMessageType] = useState(\"\");\n  const [transferType, setTransferType] = useState(null);\n  const [toUserName, setToUserName] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [currency, setCurrency] = useState(\"RON\");\n  const [fromUserName] = useState(user.userName);\n  const [showNotification, setShowNotification] = useState(false);\n  const [notificationMessage, setNotificationMessage] = useState(\"\");\n  // Add state for the delete confirmation modal\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n  const [accountToDelete, setAccountToDelete] = useState(null);\n  const [deleteMessage, setDeleteMessage] = useState(\"\");\n  const [deleteMessageType, setDeleteMessageType] = useState(\"\");\n  const navigate = useNavigate();\n  const goToProfile = () => {\n    navigate('/profile');\n  };\n  const fetchAccounts = async () => {\n    try {\n      const response = await fetch(`https://localhost:7157/api/Accounts/user/${user.userId}`);\n      const data = await response.json();\n      if (Array.isArray(data) && data.length > 0) {\n        setAccounts(data);\n        setCurrentTab(data[0].accountType);\n      } else {\n        setAccounts([]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching accounts:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchAccounts();\n  }, [user.userId]);\n  const showConfirmationNotification = message => {\n    setNotificationMessage(message);\n    setShowNotification(true);\n    setTimeout(() => setShowNotification(false), 5000);\n  };\n  const transferFunds = async () => {\n    const parsedAmount = parseFloat(transferAmount);\n    if (!parsedAmount || parsedAmount <= 0) {\n      setMessageType(\"error\");\n      setMessage(\"Suma introdusă nu este validă.\");\n      return;\n    }\n    if (!toAccountId || toAccountId === \"\") {\n      setMessageType(\"error\");\n      setMessage(\"Te rugăm să selectezi un cont destinație.\");\n      return;\n    }\n    if (fromAccountId === toAccountId) {\n      setMessageType(\"error\");\n      setMessage(\"Nu poți transfera către același cont.\");\n      return;\n    }\n\n    // Verificare fonduri insuficiente\n    const fromAccount = accounts.find(acc => acc.accountId === fromAccountId);\n    if (fromAccount && parsedAmount > fromAccount.balance) {\n      setMessageType(\"error\");\n      setMessage(\"Fonduri insuficiente pentru această tranzacție.\");\n      setTimeout(() => {\n        setMessage(\"\");\n        setMessageType(\"\");\n      }, 5000);\n      return;\n    }\n    try {\n      const response = await fetch(\"https://localhost:7157/api/Transactions/transfer\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          fromAccountId,\n          toAccountId,\n          amount: parsedAmount,\n          currency: transferCurrency,\n          transactionType: \"Transfer\",\n          fromUserName,\n          toUserName\n        })\n      });\n      if (response.ok) {\n        setMessageType(\"success\");\n        setMessage(\"Transfer realizat cu succes!\");\n        showConfirmationNotification(\"Transfer realizat cu succes!\");\n        await fetchAccounts();\n        setShowTransferForm(false);\n        setTransferAmount(\"\");\n        setTransferCurrency(\"RON\");\n      } else {\n        const errorData = await response.json();\n        setMessageType(\"error\");\n        setMessage(\"Eroare la transfer: \" + (errorData.message || \"necunoscută\"));\n      }\n    } catch (error) {\n      setMessageType(\"error\");\n      setMessage(\"Eroare: \" + error.message);\n    }\n    setTimeout(() => {\n      setMessage(\"\");\n      setMessageType(\"\");\n    }, 5000);\n  };\n  const transferBetweenUsers = async () => {\n    const parsedAmount = parseFloat(amount);\n    if (!parsedAmount || parsedAmount <= 0) {\n      setMessageType(\"error\");\n      setMessage(\"Suma introdusă nu este validă.\");\n      return;\n    }\n    if (!toUserName || toUserName.trim() === \"\") {\n      setMessageType(\"error\");\n      setMessage(\"Te rugăm să introduci numele utilizatorului destinație.\");\n      return;\n    }\n    if (fromUserName === toUserName) {\n      setMessageType(\"error\");\n      setMessage(\"Nu poți transfera către același utilizator.\");\n      return;\n    }\n\n    // Verificare fonduri insuficiente pentru transferul către alt utilizator\n    const fromAccount = accounts.find(acc => acc.accountId === fromAccountId);\n    if (fromAccount && parsedAmount > fromAccount.balance) {\n      setMessageType(\"error\");\n      setMessage(\"Fonduri insuficiente pentru această tranzacție.\");\n      setTimeout(() => {\n        setMessage(\"\");\n        setMessageType(\"\");\n      }, 5000);\n      return;\n    }\n    try {\n      const response = await fetch(\"https://localhost:7157/api/Transactions/transfer-between-users\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          FromUserName: fromUserName,\n          ToUserName: toUserName,\n          Amount: parsedAmount,\n          Currency: currency,\n          TransactionType: \"Transfer\"\n        })\n      });\n      if (response.ok) {\n        setMessageType(\"success\");\n        setMessage(\"Transfer realizat cu succes!\");\n        showConfirmationNotification(\"Transfer către utilizator realizat cu succes!\");\n        await fetchAccounts();\n        setShowTransferForm(false);\n        setAmount(\"\");\n        setCurrency(\"RON\");\n        setToUserName(\"\");\n      } else {\n        const errorData = await response.json();\n        setMessageType(\"error\");\n        setMessage(\"Eroare la transfer: \" + (errorData.message || \"necunoscută\"));\n      }\n    } catch (error) {\n      setMessageType(\"error\");\n      setMessage(\"Eroare: \" + error.message);\n    }\n    setTimeout(() => {\n      setMessage(\"\");\n      setMessageType(\"\");\n    }, 5000);\n  };\n\n  // Updated formatNumber function for Dashboard.js\n  const formatNumber = number => {\n    // Handle undefined, null, or non-numeric values\n    if (number === undefined || number === null || isNaN(number)) {\n      return \"0\";\n    }\n\n    // Convert to number if it's a string\n    const num = typeof number === \"string\" ? parseFloat(number) : number;\n\n    // Check if it's an integer\n    return Number.isInteger(num) ? num.toString() : num.toFixed(2);\n  };\n\n  // Updated to use the custom confirmation dialog\n  const handleDeleteAccount = account => {\n    setAccountToDelete(account);\n    setShowDeleteConfirm(true);\n    setDeleteMessage(\"\");\n    setDeleteMessageType(\"\");\n  };\n\n  // Function to confirm account deletion - updated to allow deletion of accounts with 0 balance\n  const confirmDeleteAccount = async () => {\n    if (!accountToDelete) {\n      console.error(\"No account selected for deletion\");\n      return;\n    }\n\n    // Only check if balance is greater than 0 (allow deletion if balance is exactly 0)\n    if (accountToDelete.balance > 0) {\n      setDeleteMessageType(\"error\");\n      setDeleteMessage(`Nu poți șterge acest cont deoarece are un sold de ${accountToDelete.balance} ${accountToDelete.currency}.\\n` + `Te rugăm să transferi banii în alt cont înainte de a șterge acest cont.`);\n      return;\n    }\n    try {\n      const response = await fetch(`https://localhost:7157/api/Accounts/${accountToDelete.accountId}`, {\n        method: \"DELETE\"\n      });\n      if (response.ok) {\n        setDeleteMessageType(\"success\");\n        setDeleteMessage(\"Contul a fost șters cu succes.\");\n        showConfirmationNotification(\"Contul a fost șters cu succes!\");\n\n        // Close the modal immediately and refresh accounts\n        setShowDeleteConfirm(false);\n        setAccountToDelete(null);\n        await fetchAccounts();\n      } else {\n        const errorText = await response.text();\n        setDeleteMessageType(\"error\");\n        setDeleteMessage(\"Eroare la ștergerea contului: \" + errorText);\n      }\n    } catch (error) {\n      setDeleteMessageType(\"error\");\n      setDeleteMessage(\"Eroare tehnică: \" + error.message);\n    }\n  };\n  const accountTypes = [...new Set(accounts.map(acc => acc.accountType))];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left logo-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"TrustPay Logo\",\n          className: \"header-logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"logo-text\",\n          children: \"Trust Pay - Siguran\\u021Ba banilor t\\u0103i!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"username\",\n          children: [\"Salut, \", user.userName, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goToProfile,\n          children: \"Vezi Profilul\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chrome-tabs-container\",\n      children: accountTypes.map(type => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentTab(type),\n        className: `chrome-tab ${currentTab === type ? \"chrome-tab-active\" : \"\"}`,\n        children: type\n      }, type, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: accounts.filter(acc => acc.accountType === currentTab).map(acc => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account-tab\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"account-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"account-title\",\n            children: acc.accountType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"balance-label\",\n            children: \"Balan\\u021B\\u0103:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"account-balance\",\n            children: [formatNumber(acc.balance), \" \", acc.currency]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"account-actions-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"account-actions-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-button transfer-button\",\n              onClick: () => {\n                setFromAccountId(acc.accountId);\n                setShowTransferForm(true);\n                setTransferType(\"funds\");\n              },\n              children: \"Mutare fonduri\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 19\n            }, this), acc.accountType === \"Personal\" && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-button transfer-button\",\n              onClick: () => {\n                setFromAccountId(acc.accountId);\n                setShowTransferForm(true);\n                setTransferType(\"user\");\n              },\n              children: \"Transfer c\\u0103tre alt utilizator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 21\n            }, this), acc.accountType !== \"Cont Curent\" && acc.accountType !== \"Personal\" && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-button delete-button delete-button-red\",\n              onClick: () => handleDeleteAccount(acc),\n              children: \"\\u0218terge cont\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"account-actions-right\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-button history-button\",\n              onClick: () => {\n                navigate(\"/istoric-tranzactii\", {\n                  state: {\n                    account: acc\n                  },\n                  replace: false\n                });\n              },\n              children: \"Istoric Tranzac\\u021Bii\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 15\n        }, this)]\n      }, acc.accountId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this), showTransferForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transfer-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"transfer-modal-title\",\n        children: transferType === \"funds\" ? \"Transfer între conturi\" : \"Transfer către alt utilizator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }, this), transferType === \"funds\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Din cont:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: fromAccountId,\n            disabled: true,\n            children: accounts.filter(acc => acc.accountId === fromAccountId).map(acc => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: acc.accountId,\n              children: [acc.accountType, \" (\", acc.balance, \" \", acc.currency, \")\"]\n            }, acc.accountId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"\\xCEn cont:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: toAccountId,\n            onChange: e => setToAccountId(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Selecteaz\\u0103 contul destina\\u021Bie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 19\n            }, this), accounts.filter(acc => acc.accountId !== fromAccountId).map(acc => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: acc.accountId,\n              children: [acc.accountType, \" (\", acc.balance, \" \", acc.currency, \")\"]\n            }, acc.accountId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 23\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Sum\\u0103:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"form-control\",\n            value: transferAmount,\n            onChange: e => setTransferAmount(e.target.value),\n            min: \"0.01\",\n            step: \"0.01\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Moned\\u0103:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: transferCurrency,\n            onChange: e => setTransferCurrency(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"RON\",\n              children: \"RON\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"EUR\",\n              children: \"EUR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"USD\",\n              children: \"USD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-button\",\n            onClick: () => setShowTransferForm(false),\n            children: \"Anulare\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-button\",\n            onClick: transferFunds,\n            children: \"Transfer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"De la utilizator:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: fromUserName,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"C\\u0103tre utilizator:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: toUserName,\n            onChange: e => setToUserName(e.target.value),\n            placeholder: \"Nume utilizator destina\\u021Bie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Sum\\u0103:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"form-control\",\n            value: amount,\n            onChange: e => setAmount(e.target.value),\n            min: \"0.01\",\n            step: \"0.01\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Moned\\u0103:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: currency,\n            onChange: e => setCurrency(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"RON\",\n              children: \"RON\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"EUR\",\n              children: \"EUR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"USD\",\n              children: \"USD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-button\",\n            onClick: () => setShowTransferForm(false),\n            children: \"Anulare\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-button\",\n            onClick: transferBetweenUsers,\n            children: \"Transfer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-box ${messageType === \"success\" ? \"success-message\" : messageType === \"error\" ? \"error-message\" : \"info-message\"}`,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 9\n    }, this), showDeleteConfirm && accountToDelete && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"delete-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"delete-modal-title\",\n        children: \"Confirmare \\u0219tergere cont\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"delete-modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Sigur dore\\u0219ti s\\u0103 \\u0219tergi contul \", accountToDelete.accountType, \" (\", accountToDelete.currency, \")?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 13\n        }, this), deleteMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-box ${deleteMessageType}-message`,\n          children: deleteMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel-button\",\n          onClick: () => setShowDeleteConfirm(false),\n          children: \"Anuleaz\\u0103\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-confirm-button\",\n          onClick: confirmDeleteAccount,\n          children: \"\\u0218terge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 9\n    }, this), showNotification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification success-notification\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"notification-icon\",\n          children: \"\\u2713\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 13\n        }, this), notificationMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 287,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"+LziVtxVKZQJ/eF3yticee8Wx44=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","logo","useNavigate","Profile","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","user","onLogout","_s","accounts","setAccounts","currentTab","setCurrentTab","showTransferForm","setShowTransferForm","fromAccountId","setFromAccountId","toAccountId","setToAccountId","transferAmount","setTransferAmount","transferCurrency","setTransferCurrency","message","setMessage","messageType","setMessageType","transferType","setTransferType","toUserName","setToUserName","amount","setAmount","currency","setCurrency","fromUserName","userName","showNotification","setShowNotification","notificationMessage","setNotificationMessage","showDeleteConfirm","setShowDeleteConfirm","accountToDelete","setAccountToDelete","deleteMessage","setDeleteMessage","deleteMessageType","setDeleteMessageType","navigate","goToProfile","fetchAccounts","response","fetch","userId","data","json","Array","isArray","length","accountType","error","console","showConfirmationNotification","setTimeout","transferFunds","parsedAmount","parseFloat","fromAccount","find","acc","accountId","balance","method","headers","body","JSON","stringify","transactionType","ok","errorData","transferBetweenUsers","trim","FromUserName","ToUserName","Amount","Currency","TransactionType","formatNumber","number","undefined","isNaN","num","Number","isInteger","toString","toFixed","handleDeleteAccount","account","confirmDeleteAccount","errorText","text","accountTypes","Set","map","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","filter","state","replace","value","disabled","onChange","e","target","min","step","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Andrada/Documents/semestru 2/proiect repository2/TrustPay_Project/TrustPay_corect/TrustPay-front_end/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Dashboard.css';\nimport logo from './logo1.png';\nimport { useNavigate } from 'react-router-dom';\nimport Profile from './Profile';\n\nfunction Dashboard({ user, onLogout }) {\n  const [accounts, setAccounts] = useState([]);\n  const [currentTab, setCurrentTab] = useState(null);\n  const [showTransferForm, setShowTransferForm] = useState(false);\n  const [fromAccountId, setFromAccountId] = useState(null);\n  const [toAccountId, setToAccountId] = useState(\"\");\n  const [transferAmount, setTransferAmount] = useState(\"\");\n  const [transferCurrency, setTransferCurrency] = useState(\"RON\");\n  const [message, setMessage] = useState(\"\");\n  const [messageType, setMessageType] = useState(\"\");\n  const [transferType, setTransferType] = useState(null);\n  const [toUserName, setToUserName] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [currency, setCurrency] = useState(\"RON\");\n  const [fromUserName] = useState(user.userName);\n  const [showNotification, setShowNotification] = useState(false);\n  const [notificationMessage, setNotificationMessage] = useState(\"\");\n  // Add state for the delete confirmation modal\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n  const [accountToDelete, setAccountToDelete] = useState(null);\n  const [deleteMessage, setDeleteMessage] = useState(\"\");\n  const [deleteMessageType, setDeleteMessageType] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  const goToProfile = () => {\n    navigate('/profile');\n  };\n\n  const fetchAccounts = async () => {\n    try {\n      const response = await fetch(\n        `https://localhost:7157/api/Accounts/user/${user.userId}`\n      );\n      const data = await response.json();\n      if (Array.isArray(data) && data.length > 0) {\n        setAccounts(data);\n        setCurrentTab(data[0].accountType);\n      } else {\n        setAccounts([]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching accounts:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchAccounts();\n  }, [user.userId]);\n\n  const showConfirmationNotification = (message) => {\n    setNotificationMessage(message);\n    setShowNotification(true);\n    setTimeout(() => setShowNotification(false), 5000);\n  };\n\n  const transferFunds = async () => {\n    const parsedAmount = parseFloat(transferAmount);\n    if (!parsedAmount || parsedAmount <= 0) {\n      setMessageType(\"error\");\n      setMessage(\"Suma introdusă nu este validă.\");\n      return;\n    }\n\n    if (!toAccountId || toAccountId === \"\") {\n      setMessageType(\"error\");\n      setMessage(\"Te rugăm să selectezi un cont destinație.\");\n      return;\n    }\n\n    if (fromAccountId === toAccountId) {\n      setMessageType(\"error\");\n      setMessage(\"Nu poți transfera către același cont.\");\n      return;\n    }\n\n    // Verificare fonduri insuficiente\n    const fromAccount = accounts.find(acc => acc.accountId === fromAccountId);\n    if (fromAccount && parsedAmount > fromAccount.balance) {\n      setMessageType(\"error\");\n      setMessage(\"Fonduri insuficiente pentru această tranzacție.\");\n      setTimeout(() => {\n        setMessage(\"\");\n        setMessageType(\"\");\n      }, 5000);\n      return;\n    }\n\n    try {\n      const response = await fetch(\n        \"https://localhost:7157/api/Transactions/transfer\",\n        {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            fromAccountId,\n            toAccountId,\n            amount: parsedAmount,\n            currency: transferCurrency,\n            transactionType: \"Transfer\",\n            fromUserName,\n            toUserName,\n          }),\n        }\n      );\n\n      if (response.ok) {\n        setMessageType(\"success\");\n        setMessage(\"Transfer realizat cu succes!\");\n        showConfirmationNotification(\"Transfer realizat cu succes!\");\n        await fetchAccounts();\n        setShowTransferForm(false);\n        setTransferAmount(\"\");\n        setTransferCurrency(\"RON\");\n      } else {\n        const errorData = await response.json();\n        setMessageType(\"error\");\n        setMessage(\n          \"Eroare la transfer: \" + (errorData.message || \"necunoscută\")\n        );\n      }\n    } catch (error) {\n      setMessageType(\"error\");\n      setMessage(\"Eroare: \" + error.message);\n    }\n\n    setTimeout(() => {\n      setMessage(\"\");\n      setMessageType(\"\");\n    }, 5000);\n  };\n\n  const transferBetweenUsers = async () => {\n    const parsedAmount = parseFloat(amount);\n    if (!parsedAmount || parsedAmount <= 0) {\n      setMessageType(\"error\");\n      setMessage(\"Suma introdusă nu este validă.\");\n      return;\n    }\n\n    if (!toUserName || toUserName.trim() === \"\") {\n      setMessageType(\"error\");\n      setMessage(\"Te rugăm să introduci numele utilizatorului destinație.\");\n      return;\n    }\n\n    if (fromUserName === toUserName) {\n      setMessageType(\"error\");\n      setMessage(\"Nu poți transfera către același utilizator.\");\n      return;\n    }\n\n    // Verificare fonduri insuficiente pentru transferul către alt utilizator\n    const fromAccount = accounts.find(acc => acc.accountId === fromAccountId);\n    if (fromAccount && parsedAmount > fromAccount.balance) {\n      setMessageType(\"error\");\n      setMessage(\"Fonduri insuficiente pentru această tranzacție.\");\n      setTimeout(() => {\n        setMessage(\"\");\n        setMessageType(\"\");\n      }, 5000);\n      return;\n    }\n\n    try {\n      const response = await fetch(\n        \"https://localhost:7157/api/Transactions/transfer-between-users\",\n        {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            FromUserName: fromUserName,\n            ToUserName: toUserName,\n            Amount: parsedAmount,\n            Currency: currency,\n            TransactionType: \"Transfer\",\n          }),\n        }\n      );\n\n      if (response.ok) {\n        setMessageType(\"success\");\n        setMessage(\"Transfer realizat cu succes!\");\n        showConfirmationNotification(\n          \"Transfer către utilizator realizat cu succes!\"\n        );\n        await fetchAccounts();\n        setShowTransferForm(false);\n        setAmount(\"\");\n        setCurrency(\"RON\");\n        setToUserName(\"\");\n      } else {\n        const errorData = await response.json();\n        setMessageType(\"error\");\n        setMessage(\n          \"Eroare la transfer: \" + (errorData.message || \"necunoscută\")\n        );\n      }\n    } catch (error) {\n      setMessageType(\"error\");\n      setMessage(\"Eroare: \" + error.message);\n    }\n\n    setTimeout(() => {\n      setMessage(\"\");\n      setMessageType(\"\");\n    }, 5000);\n  };\n\n  // Updated formatNumber function for Dashboard.js\n  const formatNumber = (number) => {\n    // Handle undefined, null, or non-numeric values\n    if (number === undefined || number === null || isNaN(number)) {\n      return \"0\";\n    }\n\n    // Convert to number if it's a string\n    const num = typeof number === \"string\" ? parseFloat(number) : number;\n\n    // Check if it's an integer\n    return Number.isInteger(num) ? num.toString() : num.toFixed(2);\n  };\n\n  // Updated to use the custom confirmation dialog\n  const handleDeleteAccount = (account) => {\n    setAccountToDelete(account);\n    setShowDeleteConfirm(true);\n    setDeleteMessage(\"\");\n    setDeleteMessageType(\"\");\n  };\n\n  // Function to confirm account deletion - updated to allow deletion of accounts with 0 balance\n  const confirmDeleteAccount = async () => {\n    if (!accountToDelete) {\n      console.error(\"No account selected for deletion\");\n      return;\n    }\n\n    // Only check if balance is greater than 0 (allow deletion if balance is exactly 0)\n    if (accountToDelete.balance > 0) {\n      setDeleteMessageType(\"error\");\n      setDeleteMessage(\n        `Nu poți șterge acest cont deoarece are un sold de ${accountToDelete.balance} ${accountToDelete.currency}.\\n` +\n          `Te rugăm să transferi banii în alt cont înainte de a șterge acest cont.`\n      );\n      return;\n    }\n\n    try {\n      const response = await fetch(\n        `https://localhost:7157/api/Accounts/${accountToDelete.accountId}`,\n        {\n          method: \"DELETE\",\n        }\n      );\n\n      if (response.ok) {\n        setDeleteMessageType(\"success\");\n        setDeleteMessage(\"Contul a fost șters cu succes.\");\n        showConfirmationNotification(\"Contul a fost șters cu succes!\");\n        \n        // Close the modal immediately and refresh accounts\n        setShowDeleteConfirm(false);\n        setAccountToDelete(null);\n        await fetchAccounts();\n        \n      } else {\n        const errorText = await response.text();\n        setDeleteMessageType(\"error\");\n        setDeleteMessage(\"Eroare la ștergerea contului: \" + errorText);\n      }\n    } catch (error) {\n      setDeleteMessageType(\"error\");\n      setDeleteMessage(\"Eroare tehnică: \" + error.message);\n    }\n  };\n\n  const accountTypes = [...new Set(accounts.map((acc) => acc.accountType))];\n\n  return (\n    <div className=\"app-container\">\n      <header className=\"header\">\n        <div className=\"header-left logo-container\">\n          <img src={logo} alt=\"TrustPay Logo\" className=\"header-logo\" />\n          <span className=\"logo-text\">Trust Pay - Siguranța banilor tăi!</span>\n        </div>\n        <div className=\"header-right\">\n          <span className=\"username\">Salut, {user.userName}!</span>\n          <button onClick={goToProfile}>Vezi Profilul</button>\n          <button onClick={onLogout}>Logout</button>\n        </div>\n      </header>\n\n      <div className=\"chrome-tabs-container\">\n        {accountTypes.map((type) => (\n          <button\n            key={type}\n            onClick={() => setCurrentTab(type)}\n            className={`chrome-tab ${\n              currentTab === type ? \"chrome-tab-active\" : \"\"\n            }`}\n          >\n            {type}\n          </button>\n        ))}\n      </div>\n\n      <div className=\"tab-content\">\n        {accounts\n          .filter((acc) => acc.accountType === currentTab)\n          .map((acc) => (\n            <div key={acc.accountId} className=\"account-tab\">\n              <div className=\"account-info\">\n                <h3 className=\"account-title\">{acc.accountType}</h3>\n                <div className=\"balance-label\">Balanță:</div>\n                <p className=\"account-balance\">\n                  {formatNumber(acc.balance)} {acc.currency}\n                </p>\n              </div>\n\n              <div className=\"account-actions-container\">\n                <div className=\"account-actions-left\">\n                  <button\n                    className=\"action-button transfer-button\"\n                    onClick={() => {\n                      setFromAccountId(acc.accountId);\n                      setShowTransferForm(true);\n                      setTransferType(\"funds\");\n                    }}\n                  >\n                    Mutare fonduri\n                  </button>\n                  \n                  {/* Transfer către alt utilizator - doar pentru contul Personal */}\n                  {acc.accountType === \"Personal\" && (\n                    <button\n                      className=\"action-button transfer-button\"\n                      onClick={() => {\n                        setFromAccountId(acc.accountId);\n                        setShowTransferForm(true);\n                        setTransferType(\"user\");\n                      }}\n                    >\n                      Transfer către alt utilizator\n                    </button>\n                  )}\n\n                  {acc.accountType !== \"Cont Curent\" && acc.accountType !== \"Personal\" && (\n                    <button\n                      className=\"action-button delete-button delete-button-red\"\n                      onClick={() => handleDeleteAccount(acc)}\n                    >\n                      Șterge cont\n                    </button>\n                  )}\n                </div>\n\n                <div className=\"account-actions-right\">\n                  <button\n                    className=\"action-button history-button\"\n                    onClick={() => {\n                      navigate(\"/istoric-tranzactii\", {\n                        state: { account: acc },\n                        replace: false,\n                      });\n                    }}\n                  >\n                    Istoric Tranzacții\n                  </button>\n                </div>\n              </div>\n            </div>\n          ))}\n      </div>\n\n      {showTransferForm && (\n        <div className=\"transfer-modal\">\n          <h3 className=\"transfer-modal-title\">\n            {transferType === \"funds\"\n              ? \"Transfer între conturi\"\n              : \"Transfer către alt utilizator\"}\n          </h3>\n\n          {transferType === \"funds\" ? (\n            <>\n              <div className=\"form-group\">\n                <label className=\"form-label\">Din cont:</label>\n                <select\n                  className=\"form-control\"\n                  value={fromAccountId}\n                  disabled={true}\n                >\n                  {accounts\n                    .filter((acc) => acc.accountId === fromAccountId)\n                    .map((acc) => (\n                      <option key={acc.accountId} value={acc.accountId}>\n                        {acc.accountType} ({acc.balance} {acc.currency})\n                      </option>\n                    ))}\n                </select>\n              </div>\n\n              <div className=\"form-group\">\n                <label className=\"form-label\">În cont:</label>\n                <select\n                  className=\"form-control\"\n                  value={toAccountId}\n                  onChange={(e) => setToAccountId(e.target.value)}\n                >\n                  <option value=\"\" disabled>Selectează contul destinație</option>\n                  {accounts\n                    .filter((acc) => acc.accountId !== fromAccountId)\n                    .map((acc) => (\n                      <option key={acc.accountId} value={acc.accountId}>\n                        {acc.accountType} ({acc.balance} {acc.currency})\n                      </option>\n                    ))}\n                </select>\n              </div>\n\n              <div className=\"form-group\">\n                <label className=\"form-label\">Sumă:</label>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  value={transferAmount}\n                  onChange={(e) => setTransferAmount(e.target.value)}\n                  min=\"0.01\"\n                  step=\"0.01\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label className=\"form-label\">Monedă:</label>\n                <select\n                  className=\"form-control\"\n                  value={transferCurrency}\n                  onChange={(e) => setTransferCurrency(e.target.value)}\n                >\n                  <option value=\"RON\">RON</option>\n                  <option value=\"EUR\">EUR</option>\n                  <option value=\"USD\">USD</option>\n                </select>\n              </div>\n\n              <div className=\"modal-actions\">\n                <button\n                  className=\"cancel-button\"\n                  onClick={() => setShowTransferForm(false)}\n                >\n                  Anulare\n                </button>\n                <button className=\"submit-button\" onClick={transferFunds}>\n                  Transfer\n                </button>\n              </div>\n            </>\n          ) : (\n            <>\n              <div className=\"form-group\">\n                <label className=\"form-label\">De la utilizator:</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={fromUserName}\n                  disabled={true}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label className=\"form-label\">Către utilizator:</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={toUserName}\n                  onChange={(e) => setToUserName(e.target.value)}\n                  placeholder=\"Nume utilizator destinație\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label className=\"form-label\">Sumă:</label>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  value={amount}\n                  onChange={(e) => setAmount(e.target.value)}\n                  min=\"0.01\"\n                  step=\"0.01\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label className=\"form-label\">Monedă:</label>\n                <select\n                  className=\"form-control\"\n                  value={currency}\n                  onChange={(e) => setCurrency(e.target.value)}\n                >\n                  <option value=\"RON\">RON</option>\n                  <option value=\"EUR\">EUR</option>\n                  <option value=\"USD\">USD</option>\n                </select>\n              </div>\n\n              <div className=\"modal-actions\">\n                <button\n                  className=\"cancel-button\"\n                  onClick={() => setShowTransferForm(false)}\n                >\n                  Anulare\n                </button>\n                <button\n                  className=\"submit-button\"\n                  onClick={transferBetweenUsers}\n                >\n                  Transfer\n                </button>\n              </div>\n            </>\n          )}\n\n          {message && (\n            <div\n              className={`message-box ${\n                messageType === \"success\"\n                  ? \"success-message\"\n                  : messageType === \"error\"\n                  ? \"error-message\"\n                  : \"info-message\"\n              }`}\n            >\n              {message}\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Modal de confirmare pentru ștergerea contului */}\n      {showDeleteConfirm && accountToDelete && (\n        <div className=\"delete-modal\">\n          <h3 className=\"delete-modal-title\">Confirmare ștergere cont</h3>\n\n          <div className=\"delete-modal-content\">\n            <p>\n              Sigur dorești să ștergi contul {accountToDelete.accountType} (\n              {accountToDelete.currency})?\n            </p>\n\n            {deleteMessage && (\n              <div className={`message-box ${deleteMessageType}-message`}>\n                {deleteMessage}\n              </div>\n            )}\n          </div>\n\n          <div className=\"modal-actions\">\n            <button\n              className=\"cancel-button\"\n              onClick={() => setShowDeleteConfirm(false)}\n            >\n              Anulează\n            </button>\n            <button\n              className=\"delete-confirm-button\"\n              onClick={confirmDeleteAccount}\n            >\n              Șterge\n            </button>\n          </div>\n        </div>\n      )}\n\n      {showNotification && (\n        <div className=\"notification success-notification\">\n          <div className=\"notification-content\">\n            <span className=\"notification-icon\">✓</span>\n            {notificationMessage}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}