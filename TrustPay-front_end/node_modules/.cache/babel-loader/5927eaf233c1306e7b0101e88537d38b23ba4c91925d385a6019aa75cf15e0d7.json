{"ast":null,"code":"var _jsxFileName = \"D:\\\\II\\\\Proiect\\\\proiect repository2\\\\TrustPay_Project\\\\TrustPay_corect\\\\TrustPay-front_end\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\"; // Adaugă useEffect aici\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport Dashboard from \"./Dashboard\";\nimport TransactionHistoryPage from \"./TransactionHistoryPage\";\nimport Profile from \"./Profile\";\nimport LoginForm from \"./LoginForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n\n  // NOU: Încarcă user-ul din localStorage la inițializarea aplicației\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      try {\n        setUser(JSON.parse(storedUser));\n      } catch (e) {\n        console.error(\"Failed to parse user from localStorage\", e);\n        localStorage.removeItem('user'); // Curăță localStorage dacă e corupt\n      }\n    }\n  }, []); // Rulează o singură dată la montare\n\n  const handleLogin = userData => {\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData)); // Salvează user-ul în localStorage\n  };\n  const handleLogout = () => {\n    setUser(null);\n    localStorage.removeItem('user'); // Șterge user-ul din localStorage\n  };\n\n  // NOU: Funcție pentru a actualiza starea utilizatorului după editarea profilului\n  const handleUserUpdate = updatedUserData => {\n    setUser(updatedUserData); // Actualizează starea în App.js\n    localStorage.setItem('user', JSON.stringify(updatedUserData)); // Actualizează și în localStorage\n    console.log(\"User updated globally:\", updatedUserData);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: user ? /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 20\n        }, this) : /*#__PURE__*/_jsxDEV(LoginForm, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: user ? /*#__PURE__*/_jsxDEV(Dashboard, {\n          user: user,\n          onLogout: handleLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/istoric-tranzactii\",\n        element: user ? /*#__PURE__*/_jsxDEV(TransactionHistoryPage, {\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/profile\",\n        element: user ?\n        /*#__PURE__*/\n        // NOU: Trimite funcția handleUserUpdate către componenta Profile\n        _jsxDEV(Profile, {\n          user: user,\n          onUserUpdate: handleUserUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: user ? \"/\" : \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","Dashboard","TransactionHistoryPage","Profile","LoginForm","jsxDEV","_jsxDEV","App","_s","user","setUser","storedUser","localStorage","getItem","JSON","parse","e","console","error","removeItem","handleLogin","userData","setItem","stringify","handleLogout","handleUserUpdate","updatedUserData","log","children","path","element","to","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","onLogout","onUserUpdate","_c","$RefreshReg$"],"sources":["D:/II/Proiect/proiect repository2/TrustPay_Project/TrustPay_corect/TrustPay-front_end/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\"; // Adaugă useEffect aici\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  Navigate,\r\n} from \"react-router-dom\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport TransactionHistoryPage from \"./TransactionHistoryPage\";\r\nimport Profile from \"./Profile\";\r\nimport LoginForm from \"./LoginForm\";\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null);\r\n\r\n  // NOU: Încarcă user-ul din localStorage la inițializarea aplicației\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedUser) {\r\n      try {\r\n        setUser(JSON.parse(storedUser));\r\n      } catch (e) {\r\n        console.error(\"Failed to parse user from localStorage\", e);\r\n        localStorage.removeItem('user'); // Curăță localStorage dacă e corupt\r\n      }\r\n    }\r\n  }, []); // Rulează o singură dată la montare\r\n\r\n  const handleLogin = (userData) => {\r\n    setUser(userData);\r\n    localStorage.setItem('user', JSON.stringify(userData)); // Salvează user-ul în localStorage\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('user'); // Șterge user-ul din localStorage\r\n  };\r\n\r\n  // NOU: Funcție pentru a actualiza starea utilizatorului după editarea profilului\r\n  const handleUserUpdate = (updatedUserData) => {\r\n    setUser(updatedUserData); // Actualizează starea în App.js\r\n    localStorage.setItem('user', JSON.stringify(updatedUserData)); // Actualizează și în localStorage\r\n    console.log(\"User updated globally:\", updatedUserData);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route\r\n          path=\"/login\"\r\n          element={\r\n            user ? <Navigate to=\"/\" /> : <LoginForm onLogin={handleLogin} />\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/\"\r\n          element={\r\n            user ? (\r\n              <Dashboard user={user} onLogout={handleLogout} />\r\n            ) : (\r\n              <Navigate to=\"/login\" />\r\n            )\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/istoric-tranzactii\"\r\n          element={\r\n            user ? (\r\n              <TransactionHistoryPage user={user} />\r\n            ) : (\r\n              <Navigate to=\"/login\" />\r\n            )\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/profile\"\r\n          element={\r\n            user ? (\r\n              // NOU: Trimite funcția handleUserUpdate către componenta Profile\r\n              <Profile user={user} onUserUpdate={handleUserUpdate} />\r\n            ) : (\r\n              <Navigate to=\"/login\" />\r\n            )\r\n          }\r\n        />\r\n        <Route path=\"*\" element={<Navigate to={user ? \"/\" : \"/login\"} />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}