{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrada\\\\Documents\\\\semestru 2\\\\proiect frontend\\\\TrustPay-front_end\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard({\n  user\n}) {\n  _s();\n  const [accounts, setAccounts] = useState([]);\n  const [currentTab, setCurrentTab] = useState('');\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    if (user !== null && user !== void 0 && user.userId) {\n      fetch(`https://localhost:7157/api/Accounts/by-user/${user.userId}`).then(res => res.json()).then(data => {\n        setAccounts(data);\n        if (data.length > 0) setCurrentTab(data[0].accountType); // Setează primul cont ca activ\n      }).catch(error => console.error(\"Eroare la încărcarea conturilor:\", error));\n    }\n  }, [user]);\n  const addFunds = accountId => {\n    const amount = parseFloat(prompt(\"Introduceți suma de adăugat:\"));\n    if (amount && amount > 0) {\n      const updatedAccounts = accounts.map(acc => acc.accountId === accountId ? {\n        ...acc,\n        balance: acc.balance + amount\n      } : acc);\n      setAccounts(updatedAccounts);\n      setTransactions([...transactions, {\n        accountId,\n        type: 'Depunere',\n        amount\n      }]);\n    }\n  };\n  const viewTransactions = accountId => {\n    const accountTx = transactions.filter(t => t.accountId === accountId);\n    alert(\"Tranzacții:\\n\" + accountTx.map(t => `${t.type} - ${t.amount} RON`).join('\\n'));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TrustPay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"username\",\n          children: [\"Bun venit, \", user === null || user === void 0 ? void 0 : user.userName, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.location.href = '/',\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: accounts.map(account => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: currentTab === account.accountType ? 'active' : '',\n        onClick: () => setCurrentTab(account.accountType),\n        children: account.accountType\n      }, account.accountId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: accounts.filter(acc => acc.accountType === currentTab).map(account => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account-tab\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: account.accountType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Balan\\u021B\\u0103: \", account.balance, \" \", account.currency]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addFunds(account.accountId),\n          children: \"Adaug\\u0103 Bani\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => viewTransactions(account.accountId),\n          children: \"Istoric Tranzac\\u021Bii\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)]\n      }, account.accountId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"0Ps9pv9nVo4Pbsi6944l0+8Z/hA=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Dashboard","user","_s","accounts","setAccounts","currentTab","setCurrentTab","transactions","setTransactions","userId","fetch","then","res","json","data","length","accountType","catch","error","console","addFunds","accountId","amount","parseFloat","prompt","updatedAccounts","map","acc","balance","type","viewTransactions","accountTx","filter","t","alert","join","className","children","fileName","_jsxFileName","lineNumber","columnNumber","userName","onClick","window","location","href","account","currency","_c","$RefreshReg$"],"sources":["C:/Users/Andrada/Documents/semestru 2/proiect frontend/TrustPay-front_end/src/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\n\r\nfunction Dashboard({ user }) {\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [currentTab, setCurrentTab] = useState('');\r\n  const [transactions, setTransactions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (user?.userId) {\r\n      fetch(`https://localhost:7157/api/Accounts/by-user/${user.userId}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          setAccounts(data);\r\n          if (data.length > 0) setCurrentTab(data[0].accountType); // Setează primul cont ca activ\r\n        })\r\n        .catch(error => console.error(\"Eroare la încărcarea conturilor:\", error));\r\n    }\r\n  }, [user]);\r\n\r\n  const addFunds = (accountId) => {\r\n    const amount = parseFloat(prompt(\"Introduceți suma de adăugat:\"));\r\n    if (amount && amount > 0) {\r\n      const updatedAccounts = accounts.map(acc =>\r\n        acc.accountId === accountId\r\n          ? { ...acc, balance: acc.balance + amount }\r\n          : acc\r\n      );\r\n      setAccounts(updatedAccounts);\r\n      setTransactions([...transactions, { accountId, type: 'Depunere', amount }]);\r\n    }\r\n  };\r\n\r\n  const viewTransactions = (accountId) => {\r\n    const accountTx = transactions.filter(t => t.accountId === accountId);\r\n    alert(\"Tranzacții:\\n\" + accountTx.map(t => `${t.type} - ${t.amount} RON`).join('\\n'));\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <header className=\"header\">\r\n        <h1>TrustPay</h1>\r\n        <div className=\"header-right\">\r\n          <span className=\"username\">Bun venit, {user?.userName}!</span>\r\n          <button onClick={() => window.location.href = '/'}>Logout</button>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"tabs\">\r\n        {accounts.map(account => (\r\n          <button\r\n            key={account.accountId}\r\n            className={currentTab === account.accountType ? 'active' : ''}\r\n            onClick={() => setCurrentTab(account.accountType)}\r\n          >\r\n            {account.accountType}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"tab-content\">\r\n        {accounts\r\n          .filter(acc => acc.accountType === currentTab)\r\n          .map(account => (\r\n            <div key={account.accountId} className=\"account-tab\">\r\n              <h3>{account.accountType}</h3>\r\n              <p>Balanță: {account.balance} {account.currency}</p>\r\n              <button onClick={() => addFunds(account.accountId)}>Adaugă Bani</button>\r\n              <button onClick={() => viewTransactions(account.accountId)}>Istoric Tranzacții</button>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}