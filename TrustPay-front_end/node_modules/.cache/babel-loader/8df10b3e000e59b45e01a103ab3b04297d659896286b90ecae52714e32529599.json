{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrada\\\\Documents\\\\semestru 2\\\\proiect frontend\\\\TrustPay-front_end\\\\src\\\\LoginForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './App.css'; // Asigură-te că ai stiluri aplicate aici\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function loginUser(userName, email, password) {\n  try {\n    const response = await fetch('https://localhost:7157/api/Users/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userName,\n        email,\n        password\n      })\n    });\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(errorText || 'Eroare la autentificare');\n    }\n    const data = await response.json();\n    console.log('Login successful:', data);\n    return data;\n  } catch (err) {\n    console.error('Login failed:', err.message);\n    throw err;\n  }\n}\nfunction LoginForm({\n  onLogin\n}) {\n  _s();\n  const [userName, setUserName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState(null);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const data = await loginUser(userName, email, password);\n      setMessage(data.message || 'Autentificare reușită!');\n      onLogin(userName); // Trimite numele utilizatorului logat în App.jsx\n      navigate('/dashboard');\n    } catch (error) {\n      setMessage(`Eroare: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TrustPay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Autentificare cont\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: userName,\n        onChange: e => setUserName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Parol\\u0103\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"login-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginForm, \"sCXejjYZ9Tv5h3S80bJLkgkD1l0=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","loginUser","userName","email","password","response","fetch","method","headers","body","JSON","stringify","ok","errorText","text","Error","data","json","console","log","err","error","message","LoginForm","onLogin","_s","setUserName","setEmail","setPassword","setMessage","navigate","handleSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Andrada/Documents/semestru 2/proiect frontend/TrustPay-front_end/src/LoginForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './App.css'; // Asigură-te că ai stiluri aplicate aici\r\n\r\nasync function loginUser(userName, email, password) {\r\n  try {\r\n    const response = await fetch('https://localhost:7157/api/Users/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ userName, email, password }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      throw new Error(errorText || 'Eroare la autentificare');\r\n    }\r\n\r\n    const data = await response.json();\r\n    console.log('Login successful:', data);\r\n    return data;\r\n  } catch (err) {\r\n    console.error('Login failed:', err.message);\r\n    throw err;\r\n  }\r\n}\r\n\r\nfunction LoginForm({ onLogin }) {\r\n  const [userName, setUserName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const data = await loginUser(userName, email, password);\r\n      setMessage(data.message || 'Autentificare reușită!');\r\n      onLogin(userName); // Trimite numele utilizatorului logat în App.jsx\r\n      navigate('/dashboard');\r\n    } catch (error) {\r\n      setMessage(`Eroare: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h1>TrustPay</h1>\r\n      <h2>Autentificare cont</h2>\r\n      <form onSubmit={handleSubmit} className=\"login-form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          value={userName}\r\n          onChange={(e) => setUserName(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Parolă\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      {message && <p className=\"login-message\">{message}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}