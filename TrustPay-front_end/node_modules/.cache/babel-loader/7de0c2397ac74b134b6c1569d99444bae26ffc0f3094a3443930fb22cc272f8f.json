{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrada\\\\Documents\\\\semestru 2\\\\proiect frontend\\\\TrustPay-front_end\\\\src\\\\LoginForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard({\n  user\n}) {\n  _s();\n  const [accounts, setAccounts] = useState([]);\n  const [transactions, setTransactions] = useState([]);\n  const [currentTab, setCurrentTab] = useState(null);\n  useEffect(() => {\n    if (!(user !== null && user !== void 0 && user.userId)) return;\n\n    // Apelează backend-ul pentru a obține conturile utilizatorului\n    const fetchAccounts = async () => {\n      try {\n        const response = await fetch(`https://localhost:7157/api/Accounts/by-user/${user.userId}`);\n        if (!response.ok) {\n          throw new Error('Eroare la preluarea conturilor');\n        }\n        const data = await response.json();\n        setAccounts(data);\n        if (data.length > 0) setCurrentTab(data[0].accountType.toLowerCase()); // selectează primul tab\n      } catch (err) {\n        console.error(err.message);\n      }\n    };\n    fetchAccounts();\n  }, [user]);\n  const addFunds = accountId => {\n    const amount = parseFloat(prompt(\"Introduceți suma de adăugat:\"));\n    if (amount && amount > 0) {\n      setAccounts(prev => prev.map(acc => acc.accountId === accountId ? {\n        ...acc,\n        balance: acc.balance + amount\n      } : acc));\n      setTransactions([...transactions, {\n        type: 'Depunere',\n        amount\n      }]);\n    }\n  };\n  const viewTransactions = () => {\n    alert(\"Istoricul tranzacțiilor: \" + transactions.map(t => `${t.type} - ${t.amount} RON`).join(', '));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TrustPay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"username\",\n          children: [\"Bun venit, \", user === null || user === void 0 ? void 0 : user.userName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => alert('Logout action'),\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: accounts.map(account => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentTab(account.accountType.toLowerCase()),\n        className: currentTab === account.accountType.toLowerCase() ? 'active' : '',\n        children: account.accountType\n      }, account.accountId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: accounts.filter(acc => acc.accountType.toLowerCase() === currentTab).map(account => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-pane\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: account.accountType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Balan\\u021B\\u0103: \", account.balance, \" \", account.currency]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addFunds(account.accountId),\n          children: \"Adaug\\u0103 Bani\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: viewTransactions,\n          children: \"Istoric Tranzac\\u021Bii\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this)]\n      }, account.accountId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"m4H13mvr/LzU1fim+Ocj9lpaNZg=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Dashboard","user","_s","accounts","setAccounts","transactions","setTransactions","currentTab","setCurrentTab","userId","fetchAccounts","response","fetch","ok","Error","data","json","length","accountType","toLowerCase","err","console","error","message","addFunds","accountId","amount","parseFloat","prompt","prev","map","acc","balance","type","viewTransactions","alert","t","join","className","children","fileName","_jsxFileName","lineNumber","columnNumber","userName","onClick","account","filter","currency","_c","$RefreshReg$"],"sources":["C:/Users/Andrada/Documents/semestru 2/proiect frontend/TrustPay-front_end/src/LoginForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction Dashboard({ user }) {\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [currentTab, setCurrentTab] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!user?.userId) return;\r\n\r\n    // Apelează backend-ul pentru a obține conturile utilizatorului\r\n    const fetchAccounts = async () => {\r\n      try {\r\n        const response = await fetch(`https://localhost:7157/api/Accounts/by-user/${user.userId}`);\r\n        if (!response.ok) {\r\n          throw new Error('Eroare la preluarea conturilor');\r\n        }\r\n        const data = await response.json();\r\n        setAccounts(data);\r\n        if (data.length > 0) setCurrentTab(data[0].accountType.toLowerCase()); // selectează primul tab\r\n      } catch (err) {\r\n        console.error(err.message);\r\n      }\r\n    };\r\n\r\n    fetchAccounts();\r\n  }, [user]);\r\n\r\n  const addFunds = (accountId) => {\r\n    const amount = parseFloat(prompt(\"Introduceți suma de adăugat:\"));\r\n    if (amount && amount > 0) {\r\n      setAccounts(prev =>\r\n        prev.map(acc =>\r\n          acc.accountId === accountId\r\n            ? { ...acc, balance: acc.balance + amount }\r\n            : acc\r\n        )\r\n      );\r\n      setTransactions([...transactions, { type: 'Depunere', amount }]);\r\n    }\r\n  };\r\n\r\n  const viewTransactions = () => {\r\n    alert(\"Istoricul tranzacțiilor: \" + transactions.map(t => `${t.type} - ${t.amount} RON`).join(', '));\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <header className=\"header\">\r\n        <h1>TrustPay</h1>\r\n        <div className=\"header-right\">\r\n          <span className=\"username\">Bun venit, {user?.userName}</span>\r\n          <button onClick={() => alert('Logout action')}>Logout</button>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"tabs\">\r\n        {accounts.map(account => (\r\n          <button\r\n            key={account.accountId}\r\n            onClick={() => setCurrentTab(account.accountType.toLowerCase())}\r\n            className={currentTab === account.accountType.toLowerCase() ? 'active' : ''}\r\n          >\r\n            {account.accountType}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"tab-content\">\r\n        {accounts\r\n          .filter(acc => acc.accountType.toLowerCase() === currentTab)\r\n          .map(account => (\r\n            <div key={account.accountId} className=\"tab-pane\">\r\n              <h3>{account.accountType}</h3>\r\n              <p>Balanță: {account.balance} {account.currency}</p>\r\n              <button onClick={() => addFunds(account.accountId)}>Adaugă Bani</button>\r\n              <button onClick={viewTransactions}>Istoric Tranzacții</button>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}