{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrada\\\\Documents\\\\semestru 2\\\\proiect frontend\\\\TrustPay-front_end\\\\src\\\\LoginForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// Funcția de login\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function loginUser(userName, email, password) {\n  try {\n    const response = await fetch('https://localhost:7157/api/Users/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userName,\n        email,\n        password\n      }) // Trimiți UserName, Email și Password\n    });\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(errorText);\n    }\n    const data = await response.json();\n    console.log('Login successful:', data);\n    return data;\n  } catch (err) {\n    console.error('Login failed:', err.message);\n    throw err;\n  }\n}\nfunction LoginForm() {\n  _s();\n  const [userName, setUserName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Starea de logare\n\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n  };\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Apelăm funcția loginUser cu UserName, Email și Password\n      const data = await loginUser(userName, email, password);\n      setMessage(data.message || 'Login successful!');\n      console.log('User:', data);\n\n      // Exemplu: poți salva userId-ul sau redirecționa\n      // localStorage.setItem('userId', data.userId);\n      // navigate('/dashboard');\n    } catch (error) {\n      setMessage(`Login failed: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TrustPay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Enter your account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginForm, \"Aj75g9+RBk37wF3ejjPahhcDCdE=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","loginUser","userName","email","password","response","fetch","method","headers","body","JSON","stringify","ok","errorText","text","Error","data","json","console","log","err","error","message","LoginForm","_s","setUserName","setEmail","setPassword","setMessage","isLoggedIn","setIsLoggedIn","handleLogin","handleLogout","handleSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Andrada/Documents/semestru 2/proiect frontend/TrustPay-front_end/src/LoginForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n// Funcția de login\r\nasync function loginUser(userName, email, password) {\r\n  try {\r\n    const response = await fetch('https://localhost:7157/api/Users/login', {  \r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ userName, email, password })  // Trimiți UserName, Email și Password\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      throw new Error(errorText);\r\n    }\r\n\r\n    const data = await response.json();\r\n    console.log('Login successful:', data);\r\n    return data;\r\n\r\n  } catch (err) {\r\n    console.error('Login failed:', err.message);\r\n    throw err;\r\n  }\r\n}\r\n\r\n\r\nfunction LoginForm() {\r\n  const [userName, setUserName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Starea de logare\r\n\r\n  const handleLogin = () => {\r\n    setIsLoggedIn(true);\r\n  };\r\n  \r\n  const handleLogout = () => {\r\n    setIsLoggedIn(false);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // Apelăm funcția loginUser cu UserName, Email și Password\r\n      const data = await loginUser(userName, email, password);\r\n      setMessage(data.message || 'Login successful!');\r\n      console.log('User:', data);\r\n\r\n      // Exemplu: poți salva userId-ul sau redirecționa\r\n      // localStorage.setItem('userId', data.userId);\r\n      // navigate('/dashboard');\r\n\r\n    } catch (error) {\r\n      setMessage(`Login failed: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h1>TrustPay</h1>\r\n      <h2>Enter your account</h2>\r\n      <input type=\"text\" placeholder=\"Username\" />\r\n      <input type=\"text\" placeholder=\"Email\" />\r\n      <input type=\"password\" placeholder=\"Password\" />\r\n      <button onClick={handleLogin}>Login</button>\r\n    </div>\r\n  );}\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}