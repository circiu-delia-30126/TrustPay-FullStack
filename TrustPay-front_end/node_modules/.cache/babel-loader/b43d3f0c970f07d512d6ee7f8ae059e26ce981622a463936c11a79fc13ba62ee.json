{"ast":null,"code":"var _jsxFileName = \"D:\\\\II\\\\Proiect\\\\proiect repository2\\\\TrustPay_Project\\\\TrustPay_corect\\\\TrustPay-front_end\\\\src\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Profile.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Profile({\n  user,\n  onUserUpdate\n}) {\n  _s();\n  const [profileData, setProfileData] = useState(null);\n  const [accounts, setAccounts] = useState([]);\n  const [error, setError] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editForm, setEditForm] = useState({\n    userName: '',\n    email: '',\n    telefon: '',\n    adresa: ''\n  });\n  const [validationErrors, setValidationErrors] = useState({});\n  const navigate = useNavigate();\n\n  // Funcție pentru a prelua datele profilului de la backend\n  const fetchProfileData = async userName => {\n    if (!userName) {\n      console.warn(\"Attempted to fetch profile with empty username.\");\n      setError('Numele de utilizator nu este disponibil. Te rugăm să te reloghezi.');\n      return;\n    }\n    try {\n      console.log(`Fetching profile for user: ${userName}`);\n      const res = await axios.get(`https://localhost:7157/api/Users/user/by-name/${userName}`);\n      console.log(\"Profile data received:\", res.data);\n      setProfileData(res.data);\n      setEditForm({\n        userName: res.data.userName,\n        email: res.data.email || '',\n        telefon: res.data.telefon || '',\n        adresa: res.data.adresa || ''\n      });\n      setError(null); // Clear any previous errors\n    } catch (err) {\n      var _err$response, _err$response2;\n      console.error('Error fetching profile:', (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status, (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data, err.message);\n      setError('Nu s-au putut încărca datele profilului. Asigură-te că ești logat sau că numele de utilizator este corect.');\n      setProfileData(null); // Clear profile data on error\n    }\n  };\n\n  // NOU: Utilizează un useEffect pentru a prelua profilul când user-ul se modifică\n  useEffect(() => {\n    console.log(\"Profile component - useEffect for user change. Current user:\", user);\n    if (user !== null && user !== void 0 && user.userName) {\n      fetchProfileData(user.userName);\n    } else {\n      setProfileData(null); // Clear profile data if user is null or missing username\n      setAccounts([]); // Clear accounts as well\n      setError('Niciun utilizator autentificat. Te rugăm să te loghezi.');\n    }\n  }, [user]); // Rulează ori de câte ori obiectul 'user' se modifică\n\n  // Fetch conturi - rămâne neschimbat, dar asigură-te că depinde de user.userId\n  useEffect(() => {\n    if (user !== null && user !== void 0 && user.userId) {\n      console.log(`Fetching accounts for userId: ${user.userId}`);\n      axios.get(`https://localhost:7157/api/Accounts/user/${user.userId}`).then(res => {\n        console.log(\"Accounts data received:\", res.data);\n        setAccounts(res.data);\n      }).catch(err => {\n        var _err$response3, _err$response4;\n        console.error('Error fetching accounts:', (_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.status, (_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : _err$response4.data, err.message);\n        // Nu setăm eroare globală, deoarece e legată doar de conturi\n      });\n    } else {\n      setAccounts([]); // Clear accounts if no userId\n    }\n  }, [user]);\n  const validateForm = () => {\n    const errors = {};\n    if (!editForm.email.trim()) {\n      errors.email = 'Emailul este obligatoriu.';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(editForm.email)) {\n      errors.email = 'Emailul nu este valid.';\n    }\n    if (!editForm.telefon.trim()) {\n      errors.telefon = 'Numărul de telefon este obligatoriu.';\n    } else if (!/^\\+?[0-9]{7,15}$/.test(editForm.telefon)) {\n      errors.telefon = 'Numărul de telefon nu este valid. Exemplu: +407xxxxxxxx';\n    }\n    if (!editForm.adresa.trim()) {\n      errors.adresa = 'Adresa este obligatorie.';\n    }\n    if (!editForm.userName.trim()) {\n      errors.userName = 'Numele de utilizator este obligatoriu.';\n    } else if (editForm.userName.length < 3) {\n      // Exemplu de validare lungime\n      errors.userName = 'Numele de utilizator trebuie să aibă minim 3 caractere.';\n    }\n    setValidationErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n  const handleSave = async () => {\n    if (!validateForm()) {\n      return;\n    }\n    try {\n      console.log(`Attempting to save user with ID: ${user.userId} and data:`, editForm);\n      await axios.put(`https://localhost:7157/api/Users/${user.userId}`, {\n        userName: editForm.userName,\n        email: editForm.email,\n        telefon: editForm.telefon,\n        adresa: editForm.adresa\n      });\n      console.log(\"User update successful on backend.\");\n      const updatedUser = {\n        ...user,\n        userName: editForm.userName,\n        email: editForm.email,\n        telefon: editForm.telefon,\n        adresa: editForm.adresa\n      };\n      if (onUserUpdate) {\n        console.log(\"Calling onUserUpdate with:\", updatedUser);\n        onUserUpdate(updatedUser); // Actualizează starea globală în App.js și localStorage\n      }\n\n      // Reîncărcă datele profilului folosind noul nume de utilizator\n      // Acest apel este crucial pentru a asigura că profileData este sincronizat\n      // în cazul în care user.userName s-a schimbat\n      await fetchProfileData(updatedUser.userName);\n      setIsEditing(false);\n      alert('Profilul a fost salvat cu succes!');\n    } catch (err) {\n      var _err$response5;\n      if (err.response && err.response.data && typeof err.response.data === 'object') {\n        setValidationErrors(err.response.data.errors || {});\n        alert('Eroare la salvarea profilului. Verifică câmpurile.');\n      } else if (err.response && err.response.data) {\n        alert('Eroare la salvarea profilului: ' + (err.response.data.message || JSON.stringify(err.response.data)));\n      } else {\n        alert('Eroare la salvarea profilului.');\n      }\n      console.error('PUT Error details:', ((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : _err$response5.data) || err.message);\n    }\n  };\n\n  // Renderizarea condiționată\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-container error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 12\n    }, this); // Adaugă o clasă pentru stilizare\n  }\n  if (!profileData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-container loading-message\",\n      children: \"Se \\xEEncarc\\u0103 profilul...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 12\n    }, this); // Adaugă o clasă pentru stilizare\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"profile-header\",\n      children: \"Profilul Utilizatorului\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), !isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Utilizator:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 44\n          }, this), \" \", profileData.userName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 44\n          }, this), \" \", profileData.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Telefon:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 44\n          }, this), \" \", profileData.telefon]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Adres\\u0103:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 44\n          }, this), \" \", profileData.adresa]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"CNP:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 44\n          }, this), \" \", profileData.cnp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"IBAN:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 44\n          }, this), \" \", profileData.iban]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Moneda cont principal:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 44\n          }, this), \" \", profileData.currency]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"profile-subtitle\",\n        children: \"Toate conturile utilizatorului:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accounts-list\",\n        children: accounts.map(acc => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"account-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Tip:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 20\n            }, this), \" \", acc.accountType]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Moned\\u0103:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 20\n            }, this), \" \", acc.currency]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Balan\\u021B\\u0103:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 20\n            }, this), \" \", acc.balance, \" \", acc.currency]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }, this)]\n        }, acc.accountId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group-vertical\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"profile-button\",\n          onClick: () => navigate('/'),\n          children: \"\\xCEnapoi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"profile-button\",\n          onClick: () => setIsEditing(true),\n          children: \"Editare profil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Utilizator:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"profile-input\",\n            value: editForm.userName,\n            onChange: e => setEditForm({\n              ...editForm,\n              userName: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this), validationErrors.userName && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"validation-error\",\n            children: validationErrors.userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"profile-input\",\n            value: editForm.email,\n            onChange: e => setEditForm({\n              ...editForm,\n              email: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), validationErrors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"validation-error\",\n            children: validationErrors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Telefon:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"profile-input\",\n            value: editForm.telefon,\n            onChange: e => setEditForm({\n              ...editForm,\n              telefon: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), validationErrors.telefon && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"validation-error\",\n            children: validationErrors.telefon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Adres\\u0103:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"profile-input\",\n            value: editForm.adresa,\n            onChange: e => setEditForm({\n              ...editForm,\n              adresa: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), validationErrors.adresa && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"validation-error\",\n            children: validationErrors.adresa\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"CNP:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"profile-input\",\n            value: profileData.cnp,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"IBAN:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"profile-input\",\n            value: profileData.iban,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group-vertical\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"profile-button\",\n          onClick: handleSave,\n          children: \"Salveaz\\u0103\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"profile-button\",\n          onClick: () => {\n            setIsEditing(false);\n            setValidationErrors({});\n            // La renunțare, reîncarcă datele inițiale ale profilului din 'user' prop\n            if (user !== null && user !== void 0 && user.userName) {\n              fetchProfileData(user.userName);\n            }\n          },\n          children: \"Renun\\u021B\\u0103\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n_s(Profile, \"zWwsGq/jxzjQdN1+HpkXGeOvtGo=\", false, function () {\n  return [useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","user","onUserUpdate","_s","profileData","setProfileData","accounts","setAccounts","error","setError","isEditing","setIsEditing","editForm","setEditForm","userName","email","telefon","adresa","validationErrors","setValidationErrors","navigate","fetchProfileData","console","warn","log","res","get","data","err","_err$response","_err$response2","response","status","message","userId","then","catch","_err$response3","_err$response4","validateForm","errors","trim","test","length","Object","keys","handleSave","put","updatedUser","alert","_err$response5","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","cnp","iban","currency","map","acc","accountType","balance","accountId","onClick","type","value","onChange","e","target","required","disabled","_c","$RefreshReg$"],"sources":["D:/II/Proiect/proiect repository2/TrustPay_Project/TrustPay_corect/TrustPay-front_end/src/Profile.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Profile.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Profile({ user, onUserUpdate }) {\r\n  const [profileData, setProfileData] = useState(null);\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editForm, setEditForm] = useState({\r\n    userName: '',\r\n    email: '',\r\n    telefon: '',\r\n    adresa: ''\r\n  });\r\n  const [validationErrors, setValidationErrors] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  // Funcție pentru a prelua datele profilului de la backend\r\n  const fetchProfileData = async (userName) => {\r\n    if (!userName) {\r\n      console.warn(\"Attempted to fetch profile with empty username.\");\r\n      setError('Numele de utilizator nu este disponibil. Te rugăm să te reloghezi.');\r\n      return;\r\n    }\r\n    try {\r\n      console.log(`Fetching profile for user: ${userName}`);\r\n      const res = await axios.get(`https://localhost:7157/api/Users/user/by-name/${userName}`);\r\n      console.log(\"Profile data received:\", res.data);\r\n      setProfileData(res.data);\r\n      setEditForm({\r\n        userName: res.data.userName,\r\n        email: res.data.email || '',\r\n        telefon: res.data.telefon || '',\r\n        adresa: res.data.adresa || ''\r\n      });\r\n      setError(null); // Clear any previous errors\r\n    } catch (err) {\r\n      console.error('Error fetching profile:', err.response?.status, err.response?.data, err.message);\r\n      setError('Nu s-au putut încărca datele profilului. Asigură-te că ești logat sau că numele de utilizator este corect.');\r\n      setProfileData(null); // Clear profile data on error\r\n    }\r\n  };\r\n\r\n  // NOU: Utilizează un useEffect pentru a prelua profilul când user-ul se modifică\r\n  useEffect(() => {\r\n    console.log(\"Profile component - useEffect for user change. Current user:\", user);\r\n    if (user?.userName) {\r\n      fetchProfileData(user.userName);\r\n    } else {\r\n      setProfileData(null); // Clear profile data if user is null or missing username\r\n      setAccounts([]); // Clear accounts as well\r\n      setError('Niciun utilizator autentificat. Te rugăm să te loghezi.');\r\n    }\r\n  }, [user]); // Rulează ori de câte ori obiectul 'user' se modifică\r\n\r\n  // Fetch conturi - rămâne neschimbat, dar asigură-te că depinde de user.userId\r\n  useEffect(() => {\r\n    if (user?.userId) {\r\n      console.log(`Fetching accounts for userId: ${user.userId}`);\r\n      axios\r\n        .get(`https://localhost:7157/api/Accounts/user/${user.userId}`)\r\n        .then(res => {\r\n          console.log(\"Accounts data received:\", res.data);\r\n          setAccounts(res.data);\r\n        })\r\n        .catch(err => {\r\n          console.error('Error fetching accounts:', err.response?.status, err.response?.data, err.message);\r\n          // Nu setăm eroare globală, deoarece e legată doar de conturi\r\n        });\r\n    } else {\r\n      setAccounts([]); // Clear accounts if no userId\r\n    }\r\n  }, [user]);\r\n\r\n  const validateForm = () => {\r\n    const errors = {};\r\n    if (!editForm.email.trim()) {\r\n      errors.email = 'Emailul este obligatoriu.';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(editForm.email)) {\r\n      errors.email = 'Emailul nu este valid.';\r\n    }\r\n    if (!editForm.telefon.trim()) {\r\n      errors.telefon = 'Numărul de telefon este obligatoriu.';\r\n    } else if (!/^\\+?[0-9]{7,15}$/.test(editForm.telefon)) {\r\n      errors.telefon = 'Numărul de telefon nu este valid. Exemplu: +407xxxxxxxx';\r\n    }\r\n    if (!editForm.adresa.trim()) {\r\n      errors.adresa = 'Adresa este obligatorie.';\r\n    }\r\n    if (!editForm.userName.trim()) {\r\n      errors.userName = 'Numele de utilizator este obligatoriu.';\r\n    } else if (editForm.userName.length < 3) { // Exemplu de validare lungime\r\n        errors.userName = 'Numele de utilizator trebuie să aibă minim 3 caractere.';\r\n    }\r\n    setValidationErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log(`Attempting to save user with ID: ${user.userId} and data:`, editForm);\r\n      await axios.put(`https://localhost:7157/api/Users/${user.userId}`, {\r\n        userName: editForm.userName,\r\n        email: editForm.email,\r\n        telefon: editForm.telefon,\r\n        adresa: editForm.adresa\r\n      });\r\n\r\n      console.log(\"User update successful on backend.\");\r\n\r\n      const updatedUser = {\r\n        ...user,\r\n        userName: editForm.userName,\r\n        email: editForm.email,\r\n        telefon: editForm.telefon,\r\n        adresa: editForm.adresa\r\n      };\r\n\r\n      if (onUserUpdate) {\r\n        console.log(\"Calling onUserUpdate with:\", updatedUser);\r\n        onUserUpdate(updatedUser); // Actualizează starea globală în App.js și localStorage\r\n      }\r\n\r\n      // Reîncărcă datele profilului folosind noul nume de utilizator\r\n      // Acest apel este crucial pentru a asigura că profileData este sincronizat\r\n      // în cazul în care user.userName s-a schimbat\r\n      await fetchProfileData(updatedUser.userName);\r\n\r\n      setIsEditing(false);\r\n      alert('Profilul a fost salvat cu succes!');\r\n    } catch (err) {\r\n      if (err.response && err.response.data && typeof err.response.data === 'object') {\r\n        setValidationErrors(err.response.data.errors || {});\r\n        alert('Eroare la salvarea profilului. Verifică câmpurile.');\r\n      } else if (err.response && err.response.data) {\r\n        alert('Eroare la salvarea profilului: ' + (err.response.data.message || JSON.stringify(err.response.data)));\r\n      } else {\r\n        alert('Eroare la salvarea profilului.');\r\n      }\r\n      console.error('PUT Error details:', err.response?.data || err.message);\r\n    }\r\n  };\r\n\r\n  // Renderizarea condiționată\r\n  if (error) {\r\n    return <div className=\"profile-container error-message\">{error}</div>; // Adaugă o clasă pentru stilizare\r\n  }\r\n\r\n  if (!profileData) {\r\n    return <div className=\"profile-container loading-message\">Se încarcă profilul...</div>; // Adaugă o clasă pentru stilizare\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <h2 className=\"profile-header\">Profilul Utilizatorului</h2>\r\n\r\n      {!isEditing ? (\r\n        <>\r\n          <div className=\"profile-info\">\r\n            <div className=\"profile-field\"><strong>Utilizator:</strong> {profileData.userName}</div>\r\n            <div className=\"profile-field\"><strong>Email:</strong> {profileData.email}</div>\r\n            <div className=\"profile-field\"><strong>Telefon:</strong> {profileData.telefon}</div>\r\n            <div className=\"profile-field\"><strong>Adresă:</strong> {profileData.adresa}</div>\r\n            <div className=\"profile-field\"><strong>CNP:</strong> {profileData.cnp}</div>\r\n            <div className=\"profile-field\"><strong>IBAN:</strong> {profileData.iban}</div>\r\n            <div className=\"profile-field\"><strong>Moneda cont principal:</strong> {profileData.currency}</div>\r\n          </div>\r\n\r\n          <h3 className=\"profile-subtitle\">Toate conturile utilizatorului:</h3>\r\n          <div className=\"accounts-list\">\r\n            {accounts.map((acc) => (\r\n              <div key={acc.accountId} className=\"account-item\">\r\n                <p><strong>Tip:</strong> {acc.accountType}</p>\r\n                <p><strong>Monedă:</strong> {acc.currency}</p>\r\n                <p><strong>Balanță:</strong> {acc.balance} {acc.currency}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"button-group-vertical\">\r\n            <button className=\"profile-button\" onClick={() => navigate('/')}>\r\n              Înapoi\r\n            </button>\r\n            <button className=\"profile-button\" onClick={() => setIsEditing(true)}>\r\n              Editare profil\r\n            </button>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className=\"profile-info\">\r\n            <div className=\"profile-field\">\r\n              <strong>Utilizator:</strong>\r\n              <input\r\n                type=\"text\"\r\n                className=\"profile-input\"\r\n                value={editForm.userName}\r\n                onChange={e => setEditForm({ ...editForm, userName: e.target.value })}\r\n                required\r\n              />\r\n              {validationErrors.userName && <span className=\"validation-error\">{validationErrors.userName}</span>}\r\n            </div>\r\n\r\n            <div className=\"profile-field\">\r\n              <strong>Email:</strong>\r\n              <input\r\n                type=\"email\"\r\n                className=\"profile-input\"\r\n                value={editForm.email}\r\n                onChange={e => setEditForm({ ...editForm, email: e.target.value })}\r\n                required\r\n              />\r\n              {validationErrors.email && <span className=\"validation-error\">{validationErrors.email}</span>}\r\n            </div>\r\n\r\n            <div className=\"profile-field\">\r\n              <strong>Telefon:</strong>\r\n              <input\r\n                type=\"text\"\r\n                className=\"profile-input\"\r\n                value={editForm.telefon}\r\n                onChange={e => setEditForm({ ...editForm, telefon: e.target.value })}\r\n                required\r\n              />\r\n              {validationErrors.telefon && <span className=\"validation-error\">{validationErrors.telefon}</span>}\r\n            </div>\r\n\r\n            <div className=\"profile-field\">\r\n              <strong>Adresă:</strong>\r\n              <input\r\n                type=\"text\"\r\n                className=\"profile-input\"\r\n                value={editForm.adresa}\r\n                onChange={e => setEditForm({ ...editForm, adresa: e.target.value })}\r\n                required\r\n              />\r\n              {validationErrors.adresa && <span className=\"validation-error\">{validationErrors.adresa}</span>}\r\n            </div>\r\n\r\n            <div className=\"profile-field\">\r\n              <strong>CNP:</strong>\r\n              <input\r\n                type=\"text\"\r\n                className=\"profile-input\"\r\n                value={profileData.cnp}\r\n                disabled\r\n              />\r\n            </div>\r\n\r\n            <div className=\"profile-field\">\r\n              <strong>IBAN:</strong>\r\n              <input\r\n                type=\"text\"\r\n                className=\"profile-input\"\r\n                value={profileData.iban}\r\n                disabled\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"button-group-vertical\">\r\n            <button className=\"profile-button\" onClick={handleSave}>Salvează</button>\r\n            <button className=\"profile-button\" onClick={() => {\r\n                setIsEditing(false);\r\n                setValidationErrors({});\r\n                // La renunțare, reîncarcă datele inițiale ale profilului din 'user' prop\r\n                if (user?.userName) {\r\n                    fetchProfileData(user.userName);\r\n                }\r\n            }}>Renunță</button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}