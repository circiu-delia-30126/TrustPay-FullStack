{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrada\\\\Documents\\\\semestru 2\\\\proiect frontend\\\\TrustPay-front_end\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard({\n  user,\n  onLogout\n}) {\n  _s();\n  const [accounts, setAccounts] = useState([]);\n  const [transactions, setTransactions] = useState({});\n  const [currentTab, setCurrentTab] = useState(null);\n  useEffect(() => {\n    async function fetchAccounts() {\n      try {\n        const response = await fetch(`https://localhost:7157/api/Users/${user.userId}/accounts`);\n        const data = await response.json();\n        setAccounts(data);\n\n        // Setează implicit primul tab\n        if (data.length > 0) {\n          setCurrentTab(data[0].accountType);\n        }\n      } catch (error) {\n        console.error('Error fetching accounts:', error);\n      }\n    }\n    fetchAccounts();\n  }, [user.userId]);\n  const addFunds = accountId => {\n    const amount = parseFloat(prompt('Introduceți suma de adăugat:'));\n    if (!amount || amount <= 0) return;\n    setAccounts(prev => prev.map(acc => acc.accountId === accountId ? {\n      ...acc,\n      balance: acc.balance + amount\n    } : acc));\n    setTransactions(prev => ({\n      ...prev,\n      [accountId]: [...(prev[accountId] || []), {\n        type: 'Depunere',\n        amount\n      }]\n    }));\n  };\n  const viewTransactions = accountId => {\n    const trans = transactions[accountId] || [];\n    if (trans.length === 0) {\n      alert(\"Nicio tranzacție înregistrată.\");\n      return;\n    }\n    alert(\"Istoricul tranzacțiilor:\\n\" + trans.map(t => `${t.type} - ${t.amount} RON`).join('\\n'));\n  };\n  const accountTypes = [...new Set(accounts.map(acc => acc.accountType))];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TrustPay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"username\",\n          children: [\"Salut, \", user.userName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: accountTypes.map(type => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentTab(type),\n        className: currentTab === type ? 'active' : '',\n        children: type\n      }, type, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: accounts.filter(acc => acc.accountType === currentTab).map(acc => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account-tab\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: acc.accountType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Balan\\u021B\\u0103: \", acc.balance, \" \", acc.currency]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addFunds(acc.accountId),\n          children: \"Adaug\\u0103 Bani\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => viewTransactions(acc.accountId),\n          children: \"Istoric Tranzac\\u021Bii\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this)]\n      }, acc.accountId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"l4zNRDBpjwmYENXwERHiLNCTpKk=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Dashboard","user","onLogout","_s","accounts","setAccounts","transactions","setTransactions","currentTab","setCurrentTab","fetchAccounts","response","fetch","userId","data","json","length","accountType","error","console","addFunds","accountId","amount","parseFloat","prompt","prev","map","acc","balance","type","viewTransactions","trans","alert","t","join","accountTypes","Set","className","children","fileName","_jsxFileName","lineNumber","columnNumber","userName","onClick","filter","currency","_c","$RefreshReg$"],"sources":["C:/Users/Andrada/Documents/semestru 2/proiect frontend/TrustPay-front_end/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\n\r\n\r\nfunction Dashboard({ user, onLogout }) {\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [transactions, setTransactions] = useState({});\r\n  const [currentTab, setCurrentTab] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchAccounts() {\r\n      try {\r\n        const response = await fetch(`https://localhost:7157/api/Users/${user.userId}/accounts`);\r\n        const data = await response.json();\r\n        setAccounts(data);\r\n\r\n        // Setează implicit primul tab\r\n        if (data.length > 0) {\r\n          setCurrentTab(data[0].accountType);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching accounts:', error);\r\n      }\r\n    }\r\n\r\n    fetchAccounts();\r\n  }, [user.userId]);\r\n\r\n  const addFunds = (accountId) => {\r\n    const amount = parseFloat(prompt('Introduceți suma de adăugat:'));\r\n    if (!amount || amount <= 0) return;\r\n\r\n    setAccounts((prev) =>\r\n      prev.map((acc) =>\r\n        acc.accountId === accountId\r\n          ? { ...acc, balance: acc.balance + amount }\r\n          : acc\r\n      )\r\n    );\r\n\r\n    setTransactions((prev) => ({\r\n      ...prev,\r\n      [accountId]: [...(prev[accountId] || []), { type: 'Depunere', amount }],\r\n    }));\r\n  };\r\n\r\n  const viewTransactions = (accountId) => {\r\n    const trans = transactions[accountId] || [];\r\n    if (trans.length === 0) {\r\n      alert(\"Nicio tranzacție înregistrată.\");\r\n      return;\r\n    }\r\n    alert(\r\n      \"Istoricul tranzacțiilor:\\n\" +\r\n        trans.map((t) => `${t.type} - ${t.amount} RON`).join('\\n')\r\n    );\r\n  };\r\n\r\n  const accountTypes = [...new Set(accounts.map((acc) => acc.accountType))];\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <header className=\"header\">\r\n        <h1>TrustPay</h1>\r\n        <div className=\"header-right\">\r\n          <span className=\"username\">Salut, {user.userName}</span>\r\n          <button onClick={onLogout}>Logout</button>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"tabs\">\r\n        {accountTypes.map((type) => (\r\n          <button\r\n            key={type}\r\n            onClick={() => setCurrentTab(type)}\r\n            className={currentTab === type ? 'active' : ''}\r\n          >\r\n            {type}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"tab-content\">\r\n        {accounts\r\n          .filter((acc) => acc.accountType === currentTab)\r\n          .map((acc) => (\r\n            <div key={acc.accountId} className=\"account-tab\">\r\n              <h3>{acc.accountType}</h3>\r\n              <p>Balanță: {acc.balance} {acc.currency}</p>\r\n              <button onClick={() => addFunds(acc.accountId)}>Adaugă Bani</button>\r\n              <button onClick={() => viewTransactions(acc.accountId)}>Istoric Tranzacții</button>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}