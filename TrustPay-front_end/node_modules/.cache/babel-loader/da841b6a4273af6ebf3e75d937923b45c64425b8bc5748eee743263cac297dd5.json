{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrada\\\\Documents\\\\semestru 2\\\\proiect repository2\\\\TrustPay_Project\\\\TrustPay_corect\\\\TrustPay-front_end\\\\src\\\\LoginForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './App.css';\nimport logo from './logo1.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function loginUser(userName, email, password) {\n  try {\n    const response = await fetch('https://localhost:7157/api/Users/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userName,\n        email,\n        password\n      })\n    });\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(errorText);\n    }\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    throw err;\n  }\n}\nfunction LoginForm({\n  onLogin\n}) {\n  _s();\n  const [userName, setUserName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState(null);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!userName || !email || !password) {\n      setMessage(\"Toate câmpurile sunt obligatorii.\");\n      return;\n    }\n    try {\n      const data = await loginUser(userName, email, password);\n      if (data.message === \"Autentificare\") {\n        setMessage(data.message);\n        onLogin({\n          userId: data.userId,\n          userName: data.userName\n        });\n        navigate('/dashboard');\n      } else {\n        setMessage(\"Autentificarea a eșuat. Vă rugăm să verificați datele de conectare.\");\n      }\n    } catch (error) {\n      setMessage(\"Autentificarea a eșuat. Vă rugăm să verificați datele de conectare.\");\n    }\n  };\n\n  // Handler pentru tasta Enter pe orice input\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSubmit(e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-white-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"TrustPay Logo\",\n          className: \"login-logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Intr\\u0103 \\xEEn cont:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          value: userName,\n          onChange: e => setUserName(e.target.value),\n          onKeyPress: handleKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          onKeyPress: handleKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          onKeyPress: handleKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Autentificare\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginForm, \"sCXejjYZ9Tv5h3S80bJLkgkD1l0=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useNavigate","logo","jsxDEV","_jsxDEV","loginUser","userName","email","password","response","fetch","method","headers","body","JSON","stringify","ok","errorText","text","Error","data","json","err","LoginForm","onLogin","_s","setUserName","setEmail","setPassword","message","setMessage","navigate","handleSubmit","e","preventDefault","userId","error","handleKeyPress","key","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","onKeyPress","_c","$RefreshReg$"],"sources":["C:/Users/Andrada/Documents/semestru 2/proiect repository2/TrustPay_Project/TrustPay_corect/TrustPay-front_end/src/LoginForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './App.css';\nimport logo from './logo1.png';\n\nasync function loginUser(userName, email, password) {\n  try {\n    const response = await fetch('https://localhost:7157/api/Users/login', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ userName, email, password }),\n    });\n        \n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(errorText);\n    }\n        \n    const data = await response.json();\n    return data;\n  } catch (err) {\n    throw err;\n  }\n}\n\nfunction LoginForm({ onLogin }) {\n  const [userName, setUserName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState(null);\n  const navigate = useNavigate();\n    \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!userName || !email || !password) {\n      setMessage(\"Toate câmpurile sunt obligatorii.\");\n      return;\n    }\n    try {\n      const data = await loginUser(userName, email, password);\n      if (data.message === \"Autentificare\") {\n        setMessage(data.message);\n        onLogin({ userId: data.userId, userName: data.userName });\n        navigate('/dashboard');\n      } else {\n        setMessage(\"Autentificarea a eșuat. Vă rugăm să verificați datele de conectare.\");\n      }\n    } catch (error) {\n      setMessage(\"Autentificarea a eșuat. Vă rugăm să verificați datele de conectare.\");\n    }\n  };\n\n  // Handler pentru tasta Enter pe orice input\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      handleSubmit(e);\n    }\n  };\n    \n  return (\n    <div className=\"login-container\">\n      <div className=\"login-white-box\">\n        <div className=\"logo-container\">\n          <img src={logo} alt=\"TrustPay Logo\" className=\"login-logo\" />\n        </div>\n        <h2>Intră în cont:</h2>\n        <form onSubmit={handleSubmit} className=\"login-form\">\n          <input\n            type=\"text\"\n            placeholder=\"Username\"\n            value={userName}\n            onChange={(e) => setUserName(e.target.value)}\n            onKeyPress={handleKeyPress}\n          />\n          <input\n            type=\"email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            onKeyPress={handleKeyPress}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            onKeyPress={handleKeyPress}\n          />\n          <button type=\"submit\">Autentificare</button>\n        </form>\n        {message && <p className=\"login-message\">{message}</p>}\n      </div>\n    </div>\n  );\n}\n\nexport default LoginForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}