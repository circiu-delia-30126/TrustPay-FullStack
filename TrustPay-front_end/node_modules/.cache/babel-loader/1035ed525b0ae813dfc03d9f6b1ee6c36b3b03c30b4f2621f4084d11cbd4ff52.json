{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrada\\\\Documents\\\\semestru 2\\\\proiect repository2\\\\TrustPay_Project\\\\TrustPay_corect\\\\TrustPay-front_end\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Dashboard.css';\nimport logo from './logo1.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard({\n  user,\n  onLogout\n}) {\n  _s();\n  const [accounts, setAccounts] = useState([]);\n  const [transactions, setTransactions] = useState({});\n  const [currentTab, setCurrentTab] = useState(null);\n  const [showTransferForm, setShowTransferForm] = useState(false);\n  const [fromAccountId, setFromAccountId] = useState(null);\n  const [toAccountId, setToAccountId] = useState('');\n  const [transferAmount, setTransferAmount] = useState('');\n  const [transferCurrency, setTransferCurrency] = useState('RON');\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n  const [transferType, setTransferType] = useState(null);\n  const [toUserName, setToUserName] = useState('');\n  const [amount, setAmount] = useState('');\n  const [currency, setCurrency] = useState('RON');\n  const [fromUserName, setFromUserName] = useState(user.userName);\n  // Nou state pentru notificarea de confirmare a transferului\n  const [showNotification, setShowNotification] = useState(false);\n  const [notificationMessage, setNotificationMessage] = useState('');\n  // Nou state pentru a controla afișarea istoricului de tranzacții\n  const [showTransactionHistory, setShowTransactionHistory] = useState({});\n  const [loadingTransactions, setLoadingTransactions] = useState({});\n  const fetchAccounts = async () => {\n    try {\n      const response = await fetch(`https://localhost:7157/api/Accounts/user/${user.userId}`);\n      const data = await response.json();\n      if (Array.isArray(data) && data.length > 0) {\n        setAccounts(data);\n        setCurrentTab(data[0].accountType);\n      } else {\n        setAccounts([]);\n      }\n    } catch (error) {\n      console.error('Error fetching accounts:', error);\n    }\n  };\n  useEffect(() => {\n    fetchAccounts();\n  }, [user.userId]);\n\n  // Funcție pentru afișarea notificării de confirmare\n  const showConfirmationNotification = message => {\n    setNotificationMessage(message);\n    setShowNotification(true);\n    setTimeout(() => {\n      setShowNotification(false);\n    }, 5000);\n  };\n  const transferFunds = async () => {\n    const parsedAmount = parseFloat(transferAmount);\n    if (!parsedAmount || parsedAmount <= 0) {\n      setMessageType('error');\n      setMessage(\"Suma introdusă nu este validă.\");\n      return;\n    }\n    if (fromAccountId === toAccountId) {\n      setMessageType('error');\n      setMessage(\"Nu poți transfera către același cont.\");\n      return;\n    }\n    try {\n      const response = await fetch('https://localhost:7157/api/Transactions/transfer', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          fromAccountId,\n          toAccountId,\n          amount: parsedAmount,\n          currency: transferCurrency,\n          transactionType: \"Transfer\",\n          fromUserName,\n          toUserName\n        })\n      });\n      if (response.ok) {\n        setMessageType('success');\n        setMessage(\"Transfer realizat cu succes!\");\n        // Afișăm notificarea de confirmare\n        showConfirmationNotification(\"Transfer realizat cu succes!\");\n        await fetchAccounts();\n        setShowTransferForm(false);\n        setTransferAmount('');\n        setTransferCurrency('RON');\n\n        // Actualizăm tranzacțiile pentru contul sursă după un transfer reușit\n        if (showTransactionHistory[fromAccountId]) {\n          fetchTransactions(fromAccountId);\n        }\n      } else {\n        const errorData = await response.json();\n        setMessageType('error');\n        setMessage(\"Eroare la transfer: \" + (errorData.message || \"necunoscută\"));\n      }\n    } catch (error) {\n      setMessageType('error');\n      setMessage(\"Eroare: \" + error.message);\n    }\n    setTimeout(() => {\n      setMessage('');\n      setMessageType('');\n    }, 5000);\n  };\n  const transferBetweenUsers = async () => {\n    const parsedAmount = parseFloat(amount);\n    if (!parsedAmount || parsedAmount <= 0) {\n      setMessageType('error');\n      setMessage(\"Suma introdusă nu este validă.\");\n      return;\n    }\n    if (fromUserName === toUserName) {\n      setMessageType('error');\n      setMessage(\"Nu poți transfera către același utilizator.\");\n      return;\n    }\n    try {\n      const response = await fetch('https://localhost:7157/api/Transactions/transfer-between-users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          FromUserName: fromUserName,\n          ToUserName: toUserName,\n          Amount: parsedAmount,\n          Currency: currency,\n          TransactionType: \"Transfer\"\n        })\n      });\n      if (response.ok) {\n        setMessageType('success');\n        setMessage(\"Transfer realizat cu succes!\");\n        // Afișăm notificarea de confirmare\n        showConfirmationNotification(\"Transfer către utilizator realizat cu succes!\");\n        await fetchAccounts();\n        setShowTransferForm(false);\n        setAmount('');\n        setCurrency('RON');\n        setToUserName('');\n\n        // Actualizăm tranzacțiile pentru toate conturile după un transfer între utilizatori\n        accounts.forEach(acc => {\n          if (showTransactionHistory[acc.accountId]) {\n            fetchTransactions(acc.accountId);\n          }\n        });\n      } else {\n        const errorData = await response.json();\n        setMessageType('error');\n        setMessage(\"Eroare la transfer: \" + (errorData.message || \"necunoscută\"));\n      }\n    } catch (error) {\n      setMessageType('error');\n      setMessage(\"Eroare: \" + error.message);\n    }\n    setTimeout(() => {\n      setMessage('');\n      setMessageType('');\n    }, 5000);\n  };\n\n  // MODIFICARE: Schimbat URL-ul pentru a se potrivi cu backend-ul\n  const fetchTransactions = async accountId => {\n    try {\n      setLoadingTransactions(prev => ({\n        ...prev,\n        [accountId]: true\n      }));\n\n      // Modificat URL-ul API-ului pentru a corespunde cu backend-ul\n      const response = await fetch(`https://localhost:7157/api/Transactions/history/${accountId}`);\n      if (!response.ok) {\n        throw new Error(\"Nu s-au putut prelua tranzacțiile.\");\n      }\n      const data = await response.json();\n      setTransactions(prev => ({\n        ...prev,\n        [accountId]: data\n      }));\n    } catch (error) {\n      console.error(\"Eroare la preluarea tranzacțiilor:\", error);\n      setMessageType(\"error\");\n      setMessage(\"Eroare la preluarea tranzacțiilor!\");\n      setTimeout(() => {\n        setMessage(\"\");\n        setMessageType(\"\");\n      }, 4000);\n    } finally {\n      setLoadingTransactions(prev => ({\n        ...prev,\n        [accountId]: false\n      }));\n    }\n  };\n  const toggleTransactionHistory = async accountId => {\n    const currentValue = showTransactionHistory[accountId] || false;\n    setShowTransactionHistory(prev => ({\n      ...prev,\n      [accountId]: !currentValue\n    }));\n    if (!currentValue && !transactions[accountId]) {\n      await fetchTransactions(accountId);\n    }\n  };\n\n  // Funcție utilitară pentru formatarea numerelor fără zecimale inutile\n  const formatNumber = number => {\n    return Number.isInteger(number) ? number : number.toFixed(2);\n  };\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleString('ro-RO', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    });\n  };\n  const accountTypes = [...new Set(accounts.map(acc => acc.accountType))];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left logo-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"TrustPay Logo\",\n          className: \"header-logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"logo-text\",\n          children: \"Trust Pay - Siguran\\u021Ba banilor t\\u0103i!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"username\",\n          children: [\"Salut, \", user.userName, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chrome-tabs-container\",\n      children: accountTypes.map(type => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentTab(type),\n        className: `chrome-tab ${currentTab === type ? 'chrome-tab-active' : ''}`,\n        children: type\n      }, type, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: accounts.filter(acc => acc.accountType === currentTab).map(acc => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account-tab\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"account-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"account-title\",\n            children: acc.accountType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"balance-label\",\n            children: \"Balan\\u021B\\u0103:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"account-balance\",\n            children: [Number.isInteger(acc.balance) ? acc.balance : acc.balance.toFixed(2), \" \", acc.currency]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"account-actions-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"account-actions-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-button transfer-button\",\n              onClick: () => {\n                setFromAccountId(acc.accountId);\n                setShowTransferForm(true);\n                setTransferType('funds');\n              },\n              children: \"Mutare fonduri\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-button transfer-button\",\n              onClick: () => {\n                setFromAccountId(acc.accountId);\n                setShowTransferForm(true);\n                setTransferType('user');\n              },\n              children: \"Transfer c\\u0103tre alt utilizator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"account-actions-right\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `action-button history-button ${showTransactionHistory[acc.accountId] ? 'history-button-active' : ''}`,\n              onClick: () => toggleTransactionHistory(acc.accountId),\n              children: \"Istoric Tranzac\\u021Bii\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 15\n        }, this), showTransactionHistory[acc.accountId] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transaction-history-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"transaction-history-title\",\n            children: \"Istoric Tranzac\\u021Bii\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 19\n          }, this), loadingTransactions[acc.accountId] ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-transactions\",\n            children: \"\\xCEnc\\u0103rcare tranzac\\u021Bii...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 21\n          }, this) : transactions[acc.accountId] && transactions[acc.accountId].length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"transaction-list\",\n            children: transactions[acc.accountId].map((transaction, index) => {\n              // Formatarea sumei din mesaj pentru a elimina zecimalele de 0\n              let message = transaction.message;\n              // Căutăm numere urmate de spațiu și valută\n              const regex = /(\\d+(\\.\\d+)?)\\s+(RON|EUR|USD)/g;\n              message = message.replace(regex, (match, number, decimal, currency) => {\n                const formattedNumber = formatNumber(parseFloat(number));\n                return `${formattedNumber} ${currency}`;\n              });\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"transaction-item\",\n                children: message\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 27\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-transactions\",\n            children: \"Nu exist\\u0103 tranzac\\u021Bii pentru acest cont.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 17\n        }, this)]\n      }, acc.accountId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), showTransferForm && transferType === 'funds' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transfer-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"transfer-modal-title\",\n        children: \"Mutare fonduri\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: [\"C\\u0103tre cont:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: toAccountId,\n            onChange: e => setToAccountId(e.target.value),\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecteaz\\u0103\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 17\n            }, this), accounts.filter(acc => acc.accountId !== fromAccountId).map(acc => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: acc.accountId,\n              children: [acc.accountType, \" (\", acc.currency, \")\"]\n            }, acc.accountId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: [\"Suma:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: transferAmount,\n            onChange: e => setTransferAmount(e.target.value),\n            placeholder: \"Introdu suma\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: [\"Valuta:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: transferCurrency,\n            onChange: e => setTransferCurrency(e.target.value),\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"RON\",\n              children: \"RON\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"EUR\",\n              children: \"EUR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"USD\",\n              children: \"USD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel-button\",\n          onClick: () => setShowTransferForm(false),\n          children: \"Anuleaz\\u0103\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-button\",\n          onClick: transferFunds,\n          children: \"Transfer\\u0103\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 11\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-box ${messageType}-message`,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 9\n    }, this), showTransferForm && transferType === 'user' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transfer-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"transfer-modal-title\",\n        children: \"Transfer c\\u0103tre alt utilizator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: [\"C\\u0103tre utilizator:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: toUserName,\n            onChange: e => setToUserName(e.target.value),\n            placeholder: \"Introdu numele utilizatorului\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: [\"Suma:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: amount,\n            onChange: e => setAmount(e.target.value),\n            placeholder: \"Introdu suma\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: [\"Valuta:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: currency,\n            onChange: e => setCurrency(e.target.value),\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"RON\",\n              children: \"RON\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"EUR\",\n              children: \"EUR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"USD\",\n              children: \"USD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel-button\",\n          onClick: () => setShowTransferForm(false),\n          children: \"Anuleaz\\u0103\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-button\",\n          onClick: transferBetweenUsers,\n          children: \"Transfer\\u0103\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 11\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-box ${messageType}-message`,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 9\n    }, this), showNotification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification success-notification\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"notification-icon\",\n          children: \"\\u2713\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: notificationMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"CtZT8jt7PJjBjoGLJ9v+vljZ6QU=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","logo","jsxDEV","_jsxDEV","Dashboard","user","onLogout","_s","accounts","setAccounts","transactions","setTransactions","currentTab","setCurrentTab","showTransferForm","setShowTransferForm","fromAccountId","setFromAccountId","toAccountId","setToAccountId","transferAmount","setTransferAmount","transferCurrency","setTransferCurrency","message","setMessage","messageType","setMessageType","transferType","setTransferType","toUserName","setToUserName","amount","setAmount","currency","setCurrency","fromUserName","setFromUserName","userName","showNotification","setShowNotification","notificationMessage","setNotificationMessage","showTransactionHistory","setShowTransactionHistory","loadingTransactions","setLoadingTransactions","fetchAccounts","response","fetch","userId","data","json","Array","isArray","length","accountType","error","console","showConfirmationNotification","setTimeout","transferFunds","parsedAmount","parseFloat","method","headers","body","JSON","stringify","transactionType","ok","fetchTransactions","errorData","transferBetweenUsers","FromUserName","ToUserName","Amount","Currency","TransactionType","forEach","acc","accountId","prev","Error","toggleTransactionHistory","currentValue","formatNumber","number","Number","isInteger","toFixed","formatDate","dateString","date","Date","toLocaleString","day","month","year","hour","minute","second","accountTypes","Set","map","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","filter","balance","transaction","index","regex","replace","match","decimal","formattedNumber","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Andrada/Documents/semestru 2/proiect repository2/TrustPay_Project/TrustPay_corect/TrustPay-front_end/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Dashboard.css';\nimport logo from './logo1.png';\n\nfunction Dashboard({ user, onLogout }) {\n  const [accounts, setAccounts] = useState([]);\n  const [transactions, setTransactions] = useState({});\n  const [currentTab, setCurrentTab] = useState(null);\n  const [showTransferForm, setShowTransferForm] = useState(false);\n  const [fromAccountId, setFromAccountId] = useState(null);\n  const [toAccountId, setToAccountId] = useState('');\n  const [transferAmount, setTransferAmount] = useState('');\n  const [transferCurrency, setTransferCurrency] = useState('RON');\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n  const [transferType, setTransferType] = useState(null);\n  const [toUserName, setToUserName] = useState('');\n  const [amount, setAmount] = useState('');\n  const [currency, setCurrency] = useState('RON');\n  const [fromUserName, setFromUserName] = useState(user.userName);\n  // Nou state pentru notificarea de confirmare a transferului\n  const [showNotification, setShowNotification] = useState(false);\n  const [notificationMessage, setNotificationMessage] = useState('');\n  // Nou state pentru a controla afișarea istoricului de tranzacții\n  const [showTransactionHistory, setShowTransactionHistory] = useState({});\n  const [loadingTransactions, setLoadingTransactions] = useState({});\n\n  const fetchAccounts = async () => {\n    try {\n      const response = await fetch(`https://localhost:7157/api/Accounts/user/${user.userId}`);\n      const data = await response.json();\n      if (Array.isArray(data) && data.length > 0) {\n        setAccounts(data);\n        setCurrentTab(data[0].accountType);\n      } else {\n        setAccounts([]);\n      }\n    } catch (error) {\n      console.error('Error fetching accounts:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchAccounts();\n  }, [user.userId]);\n\n  // Funcție pentru afișarea notificării de confirmare\n  const showConfirmationNotification = (message) => {\n    setNotificationMessage(message);\n    setShowNotification(true);\n    setTimeout(() => {\n      setShowNotification(false);\n    }, 5000);\n  };\n\n  const transferFunds = async () => {\n    const parsedAmount = parseFloat(transferAmount);\n    if (!parsedAmount || parsedAmount <= 0) {\n      setMessageType('error');\n      setMessage(\"Suma introdusă nu este validă.\");\n      return;\n    }\n\n    if (fromAccountId === toAccountId) {\n      setMessageType('error');\n      setMessage(\"Nu poți transfera către același cont.\");\n      return;\n    }\n\n    try {\n      const response = await fetch('https://localhost:7157/api/Transactions/transfer', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          fromAccountId,\n          toAccountId,\n          amount: parsedAmount,\n          currency: transferCurrency,\n          transactionType: \"Transfer\",\n          fromUserName,   \n          toUserName\n        }),\n      });\n\n      if (response.ok) {\n        setMessageType('success');\n        setMessage(\"Transfer realizat cu succes!\");\n        // Afișăm notificarea de confirmare\n        showConfirmationNotification(\"Transfer realizat cu succes!\");\n        await fetchAccounts();\n        setShowTransferForm(false);\n        setTransferAmount('');\n        setTransferCurrency('RON');\n        \n        // Actualizăm tranzacțiile pentru contul sursă după un transfer reușit\n        if (showTransactionHistory[fromAccountId]) {\n          fetchTransactions(fromAccountId);\n        }\n      } else {\n        const errorData = await response.json();\n        setMessageType('error');\n        setMessage(\"Eroare la transfer: \" + (errorData.message || \"necunoscută\"));\n      }\n    } catch (error) {\n      setMessageType('error');\n      setMessage(\"Eroare: \" + error.message);\n    }\n\n    setTimeout(() => {\n      setMessage('');\n      setMessageType('');\n    }, 5000);\n  };\n\n  const transferBetweenUsers = async () => {\n    const parsedAmount = parseFloat(amount);\n    if (!parsedAmount || parsedAmount <= 0) {\n      setMessageType('error');\n      setMessage(\"Suma introdusă nu este validă.\");\n      return;\n    }\n\n    if (fromUserName === toUserName) {\n      setMessageType('error');\n      setMessage(\"Nu poți transfera către același utilizator.\");\n      return;\n    }\n\n    try {\n      const response = await fetch('https://localhost:7157/api/Transactions/transfer-between-users', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          FromUserName: fromUserName,\n          ToUserName: toUserName,\n          Amount: parsedAmount,\n          Currency: currency,\n          TransactionType: \"Transfer\"\n        }),\n      });\n\n      if (response.ok) {\n        setMessageType('success');\n        setMessage(\"Transfer realizat cu succes!\");\n        // Afișăm notificarea de confirmare\n        showConfirmationNotification(\"Transfer către utilizator realizat cu succes!\");\n        await fetchAccounts();\n        setShowTransferForm(false);\n        setAmount('');\n        setCurrency('RON');\n        setToUserName('');\n        \n        // Actualizăm tranzacțiile pentru toate conturile după un transfer între utilizatori\n        accounts.forEach(acc => {\n          if (showTransactionHistory[acc.accountId]) {\n            fetchTransactions(acc.accountId);\n          }\n        });\n      } else {\n        const errorData = await response.json();\n        setMessageType('error');\n        setMessage(\"Eroare la transfer: \" + (errorData.message || \"necunoscută\"));\n      }\n    } catch (error) {\n      setMessageType('error');\n      setMessage(\"Eroare: \" + error.message);\n    }\n\n    setTimeout(() => {\n      setMessage('');\n      setMessageType('');\n    }, 5000);\n  };\n\n  // MODIFICARE: Schimbat URL-ul pentru a se potrivi cu backend-ul\n  const fetchTransactions = async (accountId) => {\n    try {\n      setLoadingTransactions(prev => ({ ...prev, [accountId]: true }));\n      \n      // Modificat URL-ul API-ului pentru a corespunde cu backend-ul\n      const response = await fetch(`https://localhost:7157/api/Transactions/history/${accountId}`);\n      if (!response.ok) {\n        throw new Error(\"Nu s-au putut prelua tranzacțiile.\");\n      }\n\n      const data = await response.json();\n      setTransactions(prev => ({ ...prev, [accountId]: data }));\n    } catch (error) {\n      console.error(\"Eroare la preluarea tranzacțiilor:\", error);\n      setMessageType(\"error\");\n      setMessage(\"Eroare la preluarea tranzacțiilor!\");\n      setTimeout(() => {\n        setMessage(\"\");\n        setMessageType(\"\");\n      }, 4000);\n    } finally {\n      setLoadingTransactions(prev => ({ ...prev, [accountId]: false }));\n    }\n  };\n\n  const toggleTransactionHistory = async (accountId) => {\n    const currentValue = showTransactionHistory[accountId] || false;\n    setShowTransactionHistory(prev => ({ ...prev, [accountId]: !currentValue }));\n    \n    if (!currentValue && !transactions[accountId]) {\n      await fetchTransactions(accountId);\n    }\n  };\n\n  // Funcție utilitară pentru formatarea numerelor fără zecimale inutile\n  const formatNumber = (number) => {\n    return Number.isInteger(number) ? number : number.toFixed(2);\n  };\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleString('ro-RO', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    });\n  };\n\n  const accountTypes = [...new Set(accounts.map((acc) => acc.accountType))];\n  \n  return (\n    <div className=\"app-container\">\n      <header className=\"header\">\n        <div className=\"header-left logo-container\">\n          <img src={logo} alt=\"TrustPay Logo\" className=\"header-logo\" />\n          <span className=\"logo-text\">Trust Pay - Siguranța banilor tăi!</span>\n        </div>\n        <div className=\"header-right\">\n          <span className=\"username\">Salut, {user.userName}!</span>\n          <button onClick={onLogout}>Logout</button>\n        </div>\n      </header>\n\n      <div className=\"chrome-tabs-container\">\n        {accountTypes.map((type) => (\n          <button\n            key={type}\n            onClick={() => setCurrentTab(type)}\n            className={`chrome-tab ${currentTab === type ? 'chrome-tab-active' : ''}`}\n          >\n            {type}\n          </button>\n        ))}\n      </div>\n\n      <div className=\"tab-content\">\n        {accounts\n          .filter((acc) => acc.accountType === currentTab)\n          .map((acc) => (\n            <div key={acc.accountId} className=\"account-tab\">\n              <div className=\"account-info\">\n                <h3 className=\"account-title\">{acc.accountType}</h3>\n                <div className=\"balance-label\">Balanță:</div>\n                <p className=\"account-balance\">{Number.isInteger(acc.balance) ? acc.balance : acc.balance.toFixed(2)} {acc.currency}</p>\n              </div>\n              <div className=\"account-actions-container\">\n                <div className=\"account-actions-left\">\n                  <button \n                    className=\"action-button transfer-button\"\n                    onClick={() => {\n                      setFromAccountId(acc.accountId);\n                      setShowTransferForm(true);\n                      setTransferType('funds');\n                    }}\n                  >\n                    Mutare fonduri\n                  </button>\n                  <button \n                    className=\"action-button transfer-button\"\n                    onClick={() => {\n                      setFromAccountId(acc.accountId);\n                      setShowTransferForm(true);\n                      setTransferType('user');\n                    }}\n                  >\n                    Transfer către alt utilizator\n                  </button>\n                </div>\n                <div className=\"account-actions-right\">\n                  <button \n                    className={`action-button history-button ${showTransactionHistory[acc.accountId] ? 'history-button-active' : ''}`}\n                    onClick={() => toggleTransactionHistory(acc.accountId)}\n                  >\n                    Istoric Tranzacții\n                  </button>\n                </div>\n              </div>\n              \n              {/* Secțiunea de istoric tranzacții */}\n              {showTransactionHistory[acc.accountId] && (\n                <div className=\"transaction-history-container\">\n                  <h4 className=\"transaction-history-title\">Istoric Tranzacții</h4>\n                  \n                  {loadingTransactions[acc.accountId] ? (\n                    <div className=\"loading-transactions\">\n                      Încărcare tranzacții...\n                    </div>\n                  ) : transactions[acc.accountId] && transactions[acc.accountId].length > 0 ? (\n                    <ul className=\"transaction-list\">\n                      {/* MODIFICARE: Actualizat modul de afișare pentru a se potrivi cu răspunsul Backend-ului */}\n                      {transactions[acc.accountId].map((transaction, index) => {\n                        // Formatarea sumei din mesaj pentru a elimina zecimalele de 0\n                        let message = transaction.message;\n                        // Căutăm numere urmate de spațiu și valută\n                        const regex = /(\\d+(\\.\\d+)?)\\s+(RON|EUR|USD)/g;\n                        message = message.replace(regex, (match, number, decimal, currency) => {\n                          const formattedNumber = formatNumber(parseFloat(number));\n                          return `${formattedNumber} ${currency}`;\n                        });\n                        \n                        return (\n                          <li key={index} className=\"transaction-item\">\n                            {message}\n                          </li>\n                        );\n                      })}\n                    </ul>\n                  ) : (\n                    <div className=\"no-transactions\">\n                      Nu există tranzacții pentru acest cont.\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          ))}\n      </div>\n\n      {showTransferForm && transferType === 'funds' && (\n        <div className=\"transfer-modal\">\n          <h3 className=\"transfer-modal-title\">Mutare fonduri</h3>\n          \n          <div className=\"form-group\">\n            <label className=\"form-label\">\n              Către cont:\n              <select\n                value={toAccountId}\n                onChange={(e) => setToAccountId(e.target.value)}\n                className=\"form-control\"\n              >\n                <option value=\"\">Selectează</option>\n                {accounts\n                  .filter((acc) => acc.accountId !== fromAccountId)\n                  .map((acc) => (\n                    <option key={acc.accountId} value={acc.accountId}>\n                      {acc.accountType} ({acc.currency})\n                    </option>\n                  ))}\n              </select>\n            </label>\n          </div>\n          \n          <div className=\"form-group\">\n            <label className=\"form-label\">\n              Suma:\n              <input\n                type=\"number\"\n                value={transferAmount}\n                onChange={(e) => setTransferAmount(e.target.value)}\n                placeholder=\"Introdu suma\"\n                className=\"form-control\"\n              />\n            </label>\n          </div>\n          \n          <div className=\"form-group\">\n            <label className=\"form-label\">\n              Valuta:\n              <select\n                value={transferCurrency}\n                onChange={(e) => setTransferCurrency(e.target.value)}\n                className=\"form-control\"\n              >\n                <option value=\"RON\">RON</option>\n                <option value=\"EUR\">EUR</option>\n                <option value=\"USD\">USD</option>\n              </select>\n            </label>\n          </div>\n          \n          <div className=\"modal-actions\">\n            <button \n              className=\"cancel-button\"\n              onClick={() => setShowTransferForm(false)}\n            >\n              Anulează\n            </button>\n            <button \n              className=\"submit-button\"\n              onClick={transferFunds}\n            >\n              Transferă\n            </button>\n          </div>\n\n          {message && (\n            <div className={`message-box ${messageType}-message`}>\n              {message}\n            </div>\n          )}\n        </div>\n      )}\n\n      {showTransferForm && transferType === 'user' && (\n        <div className=\"transfer-modal\">\n          <h3 className=\"transfer-modal-title\">Transfer către alt utilizator</h3>\n          \n          <div className=\"form-group\">\n            <label className=\"form-label\">\n              Către utilizator:\n              <input\n                type=\"text\"\n                value={toUserName}\n                onChange={(e) => setToUserName(e.target.value)}\n                placeholder=\"Introdu numele utilizatorului\"\n                className=\"form-control\"\n              />\n            </label>\n          </div>\n          \n          <div className=\"form-group\">\n            <label className=\"form-label\">\n              Suma:\n              <input\n                type=\"number\"\n                value={amount}\n                onChange={(e) => setAmount(e.target.value)}\n                placeholder=\"Introdu suma\"\n                className=\"form-control\"\n              />\n            </label>\n          </div>\n          \n          <div className=\"form-group\">\n            <label className=\"form-label\">\n              Valuta:\n              <select\n                value={currency}\n                onChange={(e) => setCurrency(e.target.value)}\n                className=\"form-control\"\n              >\n                <option value=\"RON\">RON</option>\n                <option value=\"EUR\">EUR</option>\n                <option value=\"USD\">USD</option>\n              </select>\n            </label>\n          </div>\n          \n          <div className=\"modal-actions\">\n            <button \n              className=\"cancel-button\"\n              onClick={() => setShowTransferForm(false)}\n            >\n              Anulează\n            </button>\n            <button \n              className=\"submit-button\"\n              onClick={transferBetweenUsers}\n            >\n              Transferă\n            </button>\n          </div>\n\n          {message && (\n            <div className={`message-box ${messageType}-message`}>\n              {message}\n            </div>\n          )}\n        </div>\n      )}\n      \n      {/* Notificare de confirmare pentru transfer */}\n      {showNotification && (\n        <div className=\"notification success-notification\">\n          <div className=\"notification-content\">\n            <span className=\"notification-icon\">✓</span>\n            <span>{notificationMessage}</span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}