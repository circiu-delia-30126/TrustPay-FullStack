{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrada\\\\Documents\\\\semestru 2\\\\proiect frontend\\\\TrustPay-front_end\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard({\n  user,\n  onLogout\n}) {\n  _s();\n  const [accounts, setAccounts] = useState([]);\n  const [transactions, setTransactions] = useState({});\n  const [currentTab, setCurrentTab] = useState(null);\n  const [depositAmount, setDepositAmount] = useState('');\n  const [depositCurrency, setDepositCurrency] = useState('');\n  const [selectedAccount, setSelectedAccount] = useState(null);\n  useEffect(() => {\n    async function fetchAccounts() {\n      try {\n        const response = await fetch(`https://localhost:7157/api/Users/${user.userId}/accounts`);\n        const data = await response.json();\n        setAccounts(data);\n\n        // Setează implicit primul tab\n        if (data.length > 0) {\n          setCurrentTab(data[0].accountType);\n          setSelectedAccount(data[0].accountId); // Selectăm primul cont pentru depunere\n        }\n      } catch (error) {\n        console.error('Error fetching accounts:', error);\n      }\n    }\n    fetchAccounts();\n  }, [user.userId]);\n  const handleDeposit = async () => {\n    if (!depositAmount || !depositCurrency || !selectedAccount) {\n      alert('Vă rugăm să completați toate câmpurile.');\n      return;\n    }\n    const amount = parseFloat(depositAmount);\n    if (amount <= 0) {\n      alert('Suma trebuie să fie mai mare de 0.');\n      return;\n    }\n\n    // Actualizăm contul cu suma depusă\n    const updatedAccounts = accounts.map(acc => {\n      if (acc.accountId === selectedAccount) {\n        return {\n          ...acc,\n          balance: acc.balance + amount\n        };\n      }\n      return acc;\n    });\n    setAccounts(updatedAccounts); // Actualizăm UI-ul\n\n    // Salvăm tranzacția\n    setTransactions(prev => ({\n      ...prev,\n      [selectedAccount]: [...(prev[selectedAccount] || []), {\n        type: 'Depunere',\n        amount,\n        currency: depositCurrency\n      }]\n    }));\n\n    // Resetăm câmpurile după depunere\n    setDepositAmount('');\n    setDepositCurrency('');\n  };\n  const accountTypes = [...new Set(accounts.map(acc => acc.accountType))];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TrustPay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"username\",\n          children: [\"Salut, \", user.userName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: accountTypes.map(type => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentTab(type),\n        className: currentTab === type ? 'active' : '',\n        children: type\n      }, type, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: accounts.filter(acc => acc.accountType === currentTab).map(acc => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account-tab\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: acc.accountType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Balan\\u021B\\u0103: \", acc.balance, \" \", acc.currency]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => viewTransactions(acc.accountId),\n          children: \"Istoric Tranzac\\u021Bii\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this)]\n      }, acc.accountId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deposit-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ad\\u0103uga\\u021Bi bani \\xEEn contul selectat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          children: \"Suma:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"amount\",\n          value: depositAmount,\n          onChange: e => setDepositAmount(e.target.value),\n          placeholder: \"Introduce\\u021Bi suma\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"currency\",\n          children: \"Valuta:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"currency\",\n          value: depositCurrency,\n          onChange: e => setDepositCurrency(e.target.value),\n          placeholder: \"RON, EUR, etc.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeposit,\n        children: \"Adaug\\u0103 bani\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"Nyzwm0BZ0I7PIXdKvCe78EBEcvo=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Dashboard","user","onLogout","_s","accounts","setAccounts","transactions","setTransactions","currentTab","setCurrentTab","depositAmount","setDepositAmount","depositCurrency","setDepositCurrency","selectedAccount","setSelectedAccount","fetchAccounts","response","fetch","userId","data","json","length","accountType","accountId","error","console","handleDeposit","alert","amount","parseFloat","updatedAccounts","map","acc","balance","prev","type","currency","accountTypes","Set","className","children","fileName","_jsxFileName","lineNumber","columnNumber","userName","onClick","filter","viewTransactions","htmlFor","id","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Andrada/Documents/semestru 2/proiect frontend/TrustPay-front_end/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\n\r\nfunction Dashboard({ user, onLogout }) {\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [transactions, setTransactions] = useState({});\r\n  const [currentTab, setCurrentTab] = useState(null);\r\n  const [depositAmount, setDepositAmount] = useState('');\r\n  const [depositCurrency, setDepositCurrency] = useState('');\r\n  const [selectedAccount, setSelectedAccount] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchAccounts() {\r\n      try {\r\n        const response = await fetch(`https://localhost:7157/api/Users/${user.userId}/accounts`);\r\n        const data = await response.json();\r\n        setAccounts(data);\r\n\r\n        // Setează implicit primul tab\r\n        if (data.length > 0) {\r\n          setCurrentTab(data[0].accountType);\r\n          setSelectedAccount(data[0].accountId); // Selectăm primul cont pentru depunere\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching accounts:', error);\r\n      }\r\n    }\r\n\r\n    fetchAccounts();\r\n  }, [user.userId]);\r\n\r\n  const handleDeposit = async () => {\r\n    if (!depositAmount || !depositCurrency || !selectedAccount) {\r\n      alert('Vă rugăm să completați toate câmpurile.');\r\n      return;\r\n    }\r\n\r\n    const amount = parseFloat(depositAmount);\r\n    if (amount <= 0) {\r\n      alert('Suma trebuie să fie mai mare de 0.');\r\n      return;\r\n    }\r\n\r\n    // Actualizăm contul cu suma depusă\r\n    const updatedAccounts = accounts.map((acc) => {\r\n      if (acc.accountId === selectedAccount) {\r\n        return { ...acc, balance: acc.balance + amount };\r\n      }\r\n      return acc;\r\n    });\r\n\r\n    setAccounts(updatedAccounts); // Actualizăm UI-ul\r\n\r\n    // Salvăm tranzacția\r\n    setTransactions((prev) => ({\r\n      ...prev,\r\n      [selectedAccount]: [\r\n        ...(prev[selectedAccount] || []),\r\n        { type: 'Depunere', amount, currency: depositCurrency },\r\n      ],\r\n    }));\r\n\r\n    // Resetăm câmpurile după depunere\r\n    setDepositAmount('');\r\n    setDepositCurrency('');\r\n  };\r\n\r\n  const accountTypes = [...new Set(accounts.map((acc) => acc.accountType))];\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <header className=\"header\">\r\n        <h1>TrustPay</h1>\r\n        <div className=\"header-right\">\r\n          <span className=\"username\">Salut, {user.userName}</span>\r\n          <button onClick={onLogout}>Logout</button>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"tabs\">\r\n        {accountTypes.map((type) => (\r\n          <button\r\n            key={type}\r\n            onClick={() => setCurrentTab(type)}\r\n            className={currentTab === type ? 'active' : ''}\r\n          >\r\n            {type}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"tab-content\">\r\n        {accounts\r\n          .filter((acc) => acc.accountType === currentTab)\r\n          .map((acc) => (\r\n            <div key={acc.accountId} className=\"account-tab\">\r\n              <h3>{acc.accountType}</h3>\r\n              <p>Balanță: {acc.balance} {acc.currency}</p>\r\n              <button onClick={() => viewTransactions(acc.accountId)}>Istoric Tranzacții</button>\r\n            </div>\r\n          ))}\r\n      </div>\r\n\r\n      {/* Formularul pentru depunere */}\r\n      <div className=\"deposit-container\">\r\n        <h3>Adăugați bani în contul selectat</h3>\r\n        <div>\r\n          <label htmlFor=\"amount\">Suma:</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"amount\"\r\n            value={depositAmount}\r\n            onChange={(e) => setDepositAmount(e.target.value)}\r\n            placeholder=\"Introduceți suma\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"currency\">Valuta:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"currency\"\r\n            value={depositCurrency}\r\n            onChange={(e) => setDepositCurrency(e.target.value)}\r\n            placeholder=\"RON, EUR, etc.\"\r\n          />\r\n        </div>\r\n        <button onClick={handleDeposit}>Adaugă bani</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}