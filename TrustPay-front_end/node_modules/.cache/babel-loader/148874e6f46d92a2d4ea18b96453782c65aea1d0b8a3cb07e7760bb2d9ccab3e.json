{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrada\\\\Documents\\\\semestru 2\\\\proiect repository2\\\\TrustPay_Project\\\\TrustPay_corect\\\\TrustPay-front_end\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Dashboard.css';\nimport logo from './logo1.png';\nimport { useNavigate } from 'react-router-dom';\nimport Profile from './Profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard({\n  user,\n  onLogout\n}) {\n  _s();\n  const [accounts, setAccounts] = useState([]);\n  const [transactions, setTransactions] = useState({});\n  const [currentTab, setCurrentTab] = useState(null);\n  const [showTransferForm, setShowTransferForm] = useState(false);\n  const [fromAccountId, setFromAccountId] = useState(null);\n  const [toAccountId, setToAccountId] = useState('');\n  const [transferAmount, setTransferAmount] = useState('');\n  const [transferCurrency, setTransferCurrency] = useState('RON');\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n  const [transferType, setTransferType] = useState(null);\n  const [toUserName, setToUserName] = useState('');\n  const [amount, setAmount] = useState('');\n  const [currency, setCurrency] = useState('RON');\n  const [fromUserName, setFromUserName] = useState(user.userName);\n  // Nou state pentru notificarea de confirmare a transferului\n  const [showNotification, setShowNotification] = useState(false);\n  const [notificationMessage, setNotificationMessage] = useState('');\n  const [showTransactionHistory, setShowTransactionHistory] = useState({});\n  const [loadingTransactions, setLoadingTransactions] = useState({});\n  const navigate = useNavigate();\n  const goToProfile = () => {\n    navigate('/profile');\n  };\n  const fetchAccounts = async () => {\n    try {\n      const response = await fetch(`https://localhost:7157/api/Accounts/user/${user.userId}`);\n      const data = await response.json();\n      if (Array.isArray(data) && data.length > 0) {\n        setAccounts(data);\n        setCurrentTab(data[0].accountType);\n      } else {\n        setAccounts([]);\n      }\n    } catch (error) {\n      console.error('Error fetching accounts:', error);\n    }\n  };\n  useEffect(() => {\n    fetchAccounts();\n  }, [user.userId]);\n\n  // Funcție pentru afișarea notificării de confirmare\n  const showConfirmationNotification = message => {\n    setNotificationMessage(message);\n    setShowNotification(true);\n    setTimeout(() => {\n      setShowNotification(false);\n    }, 5000);\n  };\n  const transferFunds = async () => {\n    const parsedAmount = parseFloat(transferAmount);\n    if (!parsedAmount || parsedAmount <= 0) {\n      setMessageType('error');\n      setMessage(\"Suma introdusă nu este validă.\");\n      return;\n    }\n    if (fromAccountId === toAccountId) {\n      setMessageType('error');\n      setMessage(\"Nu poți transfera către același cont.\");\n      return;\n    }\n    try {\n      const response = await fetch('https://localhost:7157/api/Transactions/transfer', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          fromAccountId,\n          toAccountId,\n          amount: parsedAmount,\n          currency: transferCurrency,\n          transactionType: \"Transfer\",\n          fromUserName,\n          toUserName\n        })\n      });\n      if (response.ok) {\n        setMessageType('success');\n        setMessage(\"Transfer realizat cu succes!\");\n        // Afișăm notificarea de confirmare\n        showConfirmationNotification(\"Transfer realizat cu succes!\");\n        await fetchAccounts();\n        setShowTransferForm(false);\n        setTransferAmount('');\n        setTransferCurrency('RON');\n\n        // Actualizăm tranzacțiile pentru contul sursă după un transfer reușit\n        if (showTransactionHistory[fromAccountId]) {\n          fetchTransactions(fromAccountId);\n        }\n      } else {\n        const errorData = await response.json();\n        setMessageType('error');\n        setMessage(\"Eroare la transfer: \" + (errorData.message || \"necunoscută\"));\n      }\n    } catch (error) {\n      setMessageType('error');\n      setMessage(\"Eroare: \" + error.message);\n    }\n    setTimeout(() => {\n      setMessage('');\n      setMessageType('');\n    }, 5000);\n  };\n  const transferBetweenUsers = async () => {\n    const parsedAmount = parseFloat(amount);\n    if (!parsedAmount || parsedAmount <= 0) {\n      setMessageType('error');\n      setMessage(\"Suma introdusă nu este validă.\");\n      return;\n    }\n    if (fromUserName === toUserName) {\n      setMessageType('error');\n      setMessage(\"Nu poți transfera către același utilizator.\");\n      return;\n    }\n    try {\n      const response = await fetch('https://localhost:7157/api/Transactions/transfer-between-users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          FromUserName: fromUserName,\n          ToUserName: toUserName,\n          Amount: parsedAmount,\n          Currency: currency,\n          TransactionType: \"Transfer\"\n        })\n      });\n      if (response.ok) {\n        setMessageType('success');\n        setMessage(\"Transfer realizat cu succes!\");\n        // Afișăm notificarea de confirmare\n        showConfirmationNotification(\"Transfer către utilizator realizat cu succes!\");\n        await fetchAccounts();\n        setShowTransferForm(false);\n        setAmount('');\n        setCurrency('RON');\n        setToUserName('');\n\n        // Actualizăm tranzacțiile pentru toate conturile după un transfer între utilizatori\n        accounts.forEach(acc => {\n          if (showTransactionHistory[acc.accountId]) {\n            fetchTransactions(acc.accountId);\n          }\n        });\n      } else {\n        const errorData = await response.json();\n        setMessageType('error');\n        setMessage(\"Eroare la transfer: \" + (errorData.message || \"necunoscută\"));\n      }\n    } catch (error) {\n      setMessageType('error');\n      setMessage(\"Eroare: \" + error.message);\n    }\n    setTimeout(() => {\n      setMessage('');\n      setMessageType('');\n    }, 5000);\n  };\n\n  // MODIFICARE: Schimbat URL-ul pentru a se potrivi cu backend-ul\n  const fetchTransactions = async accountId => {\n    try {\n      setLoadingTransactions(prev => ({\n        ...prev,\n        [accountId]: true\n      }));\n\n      // Modificat URL-ul API-ului pentru a corespunde cu backend-ul\n      const response = await fetch(`https://localhost:7157/api/Transactions/history/${accountId}`);\n      if (!response.ok) {\n        throw new Error(\"Nu s-au putut prelua tranzacțiile.\");\n      }\n      const data = await response.json();\n      setTransactions(prev => ({\n        ...prev,\n        [accountId]: data\n      }));\n    } catch (error) {\n      console.error(\"Eroare la preluarea tranzacțiilor:\", error);\n      setMessageType(\"error\");\n      setMessage(\"Eroare la preluarea tranzacțiilor!\");\n      setTimeout(() => {\n        setMessage(\"\");\n        setMessageType(\"\");\n      }, 4000);\n    } finally {\n      setLoadingTransactions(prev => ({\n        ...prev,\n        [accountId]: false\n      }));\n    }\n  };\n  const toggleTransactionHistory = async accountId => {\n    const currentValue = showTransactionHistory[accountId] || false;\n    setShowTransactionHistory(prev => ({\n      ...prev,\n      [accountId]: !currentValue\n    }));\n    if (!currentValue && !transactions[accountId]) {\n      await fetchTransactions(accountId);\n    }\n  };\n\n  // Funcție utilitară pentru formatarea numerelor fără zecimale inutile\n  const formatNumber = number => {\n    return Number.isInteger(number) ? number : number.toFixed(2);\n  };\n  const handleDeleteAccount = async (account, userAccounts, fetchAccounts) => {\n    const confirmDelete = window.confirm(`Sigur dorești să ștergi contul ${account.accountType} (${account.currency})?`);\n    if (!confirmDelete) return;\n    if (account.balance > 0) {\n      alert(`Nu poți șterge acest cont deoarece are un sold de ${account.balance} ${account.currency}.\\n` + `Te rugăm să selectezi contul în care vrei să transferi banii înainte de a șterge acest cont.`);\n      // Aici poți extinde cu logica de selectare transfer, dacă vrei.\n      return;\n    }\n    try {\n      const response = await fetch(`https://localhost:7157/api/Accounts/${account.accountId}`, {\n        method: \"DELETE\"\n      });\n      if (response.ok) {\n        alert(\"Contul a fost șters cu succes.\");\n        if (fetchAccounts) fetchAccounts(); // Reîncarcă lista conturilor\n      } else {\n        const errorText = await response.text();\n        alert(\"Eroare la ștergerea contului: \" + errorText);\n      }\n    } catch (error) {\n      console.error(\"Eroare:\", error);\n      alert(\"Eroare tehnică: \" + error.message);\n    }\n  };\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleString('ro-RO', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    });\n  };\n  const accountTypes = [...new Set(accounts.map(acc => acc.accountType))];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left logo-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"TrustPay Logo\",\n          className: \"header-logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"logo-text\",\n          children: \"Trust Pay - Siguran\\u021Ba banilor t\\u0103i!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"username\",\n          children: [\"Salut, \", user.userName, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goToProfile,\n          children: \"Vezi Profilul\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chrome-tabs-container\",\n      children: accountTypes.map(type => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentTab(type),\n        className: `chrome-tab ${currentTab === type ? 'chrome-tab-active' : ''}`,\n        children: type\n      }, type, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: accounts.filter(acc => acc.accountType === currentTab).map(acc => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account-tab\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"account-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"account-title\",\n            children: acc.accountType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"balance-label\",\n            children: \"Balan\\u021B\\u0103:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"account-balance\",\n            children: [Number.isInteger(acc.balance) ? acc.balance : acc.balance.toFixed(2), \" \", acc.currency]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"account-actions-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"account-actions-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-button transfer-button\",\n              onClick: () => {\n                setFromAccountId(acc.accountId);\n                setShowTransferForm(true);\n                setTransferType('funds');\n              },\n              children: \"Mutare fonduri\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-button transfer-button\",\n              onClick: () => {\n                setFromAccountId(acc.accountId);\n                setShowTransferForm(true);\n                setTransferType('user');\n              },\n              children: \"Transfer c\\u0103tre alt utilizator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"account-actions-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `action-button history-button ${showTransactionHistory[acc.accountId] ? 'history-button-active' : ''}`,\n              onClick: () => toggleTransactionHistory(acc.accountId),\n              children: \"Istoric Tranzac\\u021Bii\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 13\n            }, this), acc.accountType !== \"Personal\" && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-button delete-button\",\n              style: {\n                backgroundColor: \"crimson\",\n                color: \"white\",\n                marginLeft: \"10px\",\n                border: \"none\",\n                borderRadius: \"6px\",\n                padding: \"6px 12px\",\n                cursor: \"pointer\"\n              },\n              onClick: () => handleDeleteAccount(acc, accounts, fetchAccounts),\n              children: \"\\u0218terge cont\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 9\n        }, this), showTransactionHistory[acc.accountId] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transaction-history-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"transaction-history-title\",\n            children: \"Istoric Tranzac\\u021Bii\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 19\n          }, this), loadingTransactions[acc.accountId] ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-transactions\",\n            children: \"\\xCEnc\\u0103rcare tranzac\\u021Bii...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 21\n          }, this) : transactions[acc.accountId] && transactions[acc.accountId].length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"transaction-list\",\n            children: transactions[acc.accountId].map((transaction, index) => {\n              // Formatarea sumei din mesaj pentru a elimina zecimalele de 0\n              let message = transaction.message;\n              // Căutăm numere urmate de spațiu și valută\n              const regex = /(\\d+(\\.\\d+)?)\\s+(RON|EUR|USD)/g;\n              message = message.replace(regex, (match, number, decimal, currency) => {\n                const formattedNumber = formatNumber(parseFloat(number));\n                return `${formattedNumber} ${currency}`;\n              });\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"transaction-item\",\n                children: message\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 27\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-transactions\",\n            children: \"Nu exist\\u0103 tranzac\\u021Bii pentru acest cont.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 17\n        }, this)]\n      }, acc.accountId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 5\n    }, this), showTransferForm && transferType === 'funds' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transfer-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"transfer-modal-title\",\n        children: \"Mutare fonduri\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: [\"C\\u0103tre cont:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: toAccountId,\n            onChange: e => setToAccountId(e.target.value),\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecteaz\\u0103\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 17\n            }, this), accounts.filter(acc => acc.accountId !== fromAccountId).map(acc => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: acc.accountId,\n              children: [acc.accountType, \" (\", acc.currency, \")\"]\n            }, acc.accountId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: [\"Suma:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: transferAmount,\n            onChange: e => setTransferAmount(e.target.value),\n            placeholder: \"Introdu suma\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: [\"Valuta:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: transferCurrency,\n            onChange: e => setTransferCurrency(e.target.value),\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"RON\",\n              children: \"RON\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"EUR\",\n              children: \"EUR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"USD\",\n              children: \"USD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel-button\",\n          onClick: () => setShowTransferForm(false),\n          children: \"Anuleaz\\u0103\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-button\",\n          onClick: transferFunds,\n          children: \"Transfer\\u0103\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 11\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-box ${messageType}-message`,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 9\n    }, this), showTransferForm && transferType === 'user' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transfer-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"transfer-modal-title\",\n        children: \"Transfer c\\u0103tre alt utilizator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: [\"C\\u0103tre utilizator:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: toUserName,\n            onChange: e => setToUserName(e.target.value),\n            placeholder: \"Introdu numele utilizatorului\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: [\"Suma:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: amount,\n            onChange: e => setAmount(e.target.value),\n            placeholder: \"Introdu suma\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: [\"Valuta:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: currency,\n            onChange: e => setCurrency(e.target.value),\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"RON\",\n              children: \"RON\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"EUR\",\n              children: \"EUR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"USD\",\n              children: \"USD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel-button\",\n          onClick: () => setShowTransferForm(false),\n          children: \"Anuleaz\\u0103\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-button\",\n          onClick: transferBetweenUsers,\n          children: \"Transfer\\u0103\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 11\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-box ${messageType}-message`,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 9\n    }, this), showNotification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification success-notification\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"notification-icon\",\n          children: \"\\u2713\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: notificationMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"ndIR/aMnQJEPZVSTGkxxuMnA7ow=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","logo","useNavigate","Profile","jsxDEV","_jsxDEV","Dashboard","user","onLogout","_s","accounts","setAccounts","transactions","setTransactions","currentTab","setCurrentTab","showTransferForm","setShowTransferForm","fromAccountId","setFromAccountId","toAccountId","setToAccountId","transferAmount","setTransferAmount","transferCurrency","setTransferCurrency","message","setMessage","messageType","setMessageType","transferType","setTransferType","toUserName","setToUserName","amount","setAmount","currency","setCurrency","fromUserName","setFromUserName","userName","showNotification","setShowNotification","notificationMessage","setNotificationMessage","showTransactionHistory","setShowTransactionHistory","loadingTransactions","setLoadingTransactions","navigate","goToProfile","fetchAccounts","response","fetch","userId","data","json","Array","isArray","length","accountType","error","console","showConfirmationNotification","setTimeout","transferFunds","parsedAmount","parseFloat","method","headers","body","JSON","stringify","transactionType","ok","fetchTransactions","errorData","transferBetweenUsers","FromUserName","ToUserName","Amount","Currency","TransactionType","forEach","acc","accountId","prev","Error","toggleTransactionHistory","currentValue","formatNumber","number","Number","isInteger","toFixed","handleDeleteAccount","account","userAccounts","confirmDelete","window","confirm","balance","alert","errorText","text","formatDate","dateString","date","Date","toLocaleString","day","month","year","hour","minute","second","accountTypes","Set","map","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","filter","style","backgroundColor","color","marginLeft","border","borderRadius","padding","cursor","transaction","index","regex","replace","match","decimal","formattedNumber","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Andrada/Documents/semestru 2/proiect repository2/TrustPay_Project/TrustPay_corect/TrustPay-front_end/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Dashboard.css';\nimport logo from './logo1.png';\nimport { useNavigate } from 'react-router-dom';\nimport Profile from './Profile';\n\nfunction Dashboard({ user, onLogout }) {\n  const [accounts, setAccounts] = useState([]);\n  const [transactions, setTransactions] = useState({});\n  const [currentTab, setCurrentTab] = useState(null);\n  const [showTransferForm, setShowTransferForm] = useState(false);\n  const [fromAccountId, setFromAccountId] = useState(null);\n  const [toAccountId, setToAccountId] = useState('');\n  const [transferAmount, setTransferAmount] = useState('');\n  const [transferCurrency, setTransferCurrency] = useState('RON');\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n  const [transferType, setTransferType] = useState(null);\n  const [toUserName, setToUserName] = useState('');\n  const [amount, setAmount] = useState('');\n  const [currency, setCurrency] = useState('RON');\n  const [fromUserName, setFromUserName] = useState(user.userName);\n  // Nou state pentru notificarea de confirmare a transferului\n  const [showNotification, setShowNotification] = useState(false);\n  const [notificationMessage, setNotificationMessage] = useState('');\n  const [showTransactionHistory, setShowTransactionHistory] = useState({});\n  const [loadingTransactions, setLoadingTransactions] = useState({});\n const navigate = useNavigate(); \n\nconst goToProfile = () => {\n  navigate('/profile'); \n};\n\n  const fetchAccounts = async () => {\n    try {\n      const response = await fetch(`https://localhost:7157/api/Accounts/user/${user.userId}`);\n      const data = await response.json();\n      if (Array.isArray(data) && data.length > 0) {\n        setAccounts(data);\n        setCurrentTab(data[0].accountType);\n      } else {\n        setAccounts([]);\n      }\n    } catch (error) {\n      console.error('Error fetching accounts:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchAccounts();\n  }, [user.userId]);\n\n  // Funcție pentru afișarea notificării de confirmare\n  const showConfirmationNotification = (message) => {\n    setNotificationMessage(message);\n    setShowNotification(true);\n    setTimeout(() => {\n      setShowNotification(false);\n    }, 5000);\n  };\n\n  const transferFunds = async () => {\n    const parsedAmount = parseFloat(transferAmount);\n    if (!parsedAmount || parsedAmount <= 0) {\n      setMessageType('error');\n      setMessage(\"Suma introdusă nu este validă.\");\n      return;\n    }\n\n    if (fromAccountId === toAccountId) {\n      setMessageType('error');\n      setMessage(\"Nu poți transfera către același cont.\");\n      return;\n    }\n\n    try {\n      const response = await fetch('https://localhost:7157/api/Transactions/transfer', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          fromAccountId,\n          toAccountId,\n          amount: parsedAmount,\n          currency: transferCurrency,\n          transactionType: \"Transfer\",\n          fromUserName,   \n          toUserName\n        }),\n      });\n\n      if (response.ok) {\n        setMessageType('success');\n        setMessage(\"Transfer realizat cu succes!\");\n        // Afișăm notificarea de confirmare\n        showConfirmationNotification(\"Transfer realizat cu succes!\");\n        await fetchAccounts();\n        setShowTransferForm(false);\n        setTransferAmount('');\n        setTransferCurrency('RON');\n        \n        // Actualizăm tranzacțiile pentru contul sursă după un transfer reușit\n        if (showTransactionHistory[fromAccountId]) {\n          fetchTransactions(fromAccountId);\n        }\n      } else {\n        const errorData = await response.json();\n        setMessageType('error');\n        setMessage(\"Eroare la transfer: \" + (errorData.message || \"necunoscută\"));\n      }\n    } catch (error) {\n      setMessageType('error');\n      setMessage(\"Eroare: \" + error.message);\n    }\n\n    setTimeout(() => {\n      setMessage('');\n      setMessageType('');\n    }, 5000);\n  };\n\n  const transferBetweenUsers = async () => {\n    const parsedAmount = parseFloat(amount);\n    if (!parsedAmount || parsedAmount <= 0) {\n      setMessageType('error');\n      setMessage(\"Suma introdusă nu este validă.\");\n      return;\n    }\n\n    if (fromUserName === toUserName) {\n      setMessageType('error');\n      setMessage(\"Nu poți transfera către același utilizator.\");\n      return;\n    }\n\n    try {\n      const response = await fetch('https://localhost:7157/api/Transactions/transfer-between-users', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          FromUserName: fromUserName,\n          ToUserName: toUserName,\n          Amount: parsedAmount,\n          Currency: currency,\n          TransactionType: \"Transfer\"\n        }),\n      });\n\n      if (response.ok) {\n        setMessageType('success');\n        setMessage(\"Transfer realizat cu succes!\");\n        // Afișăm notificarea de confirmare\n        showConfirmationNotification(\"Transfer către utilizator realizat cu succes!\");\n        await fetchAccounts();\n        setShowTransferForm(false);\n        setAmount('');\n        setCurrency('RON');\n        setToUserName('');\n        \n        // Actualizăm tranzacțiile pentru toate conturile după un transfer între utilizatori\n        accounts.forEach(acc => {\n          if (showTransactionHistory[acc.accountId]) {\n            fetchTransactions(acc.accountId);\n          }\n        });\n      } else {\n        const errorData = await response.json();\n        setMessageType('error');\n        setMessage(\"Eroare la transfer: \" + (errorData.message || \"necunoscută\"));\n      }\n    } catch (error) {\n      setMessageType('error');\n      setMessage(\"Eroare: \" + error.message);\n    }\n\n    setTimeout(() => {\n      setMessage('');\n      setMessageType('');\n    }, 5000);\n  };\n\n  // MODIFICARE: Schimbat URL-ul pentru a se potrivi cu backend-ul\n  const fetchTransactions = async (accountId) => {\n    try {\n      setLoadingTransactions(prev => ({ ...prev, [accountId]: true }));\n      \n      // Modificat URL-ul API-ului pentru a corespunde cu backend-ul\n      const response = await fetch(`https://localhost:7157/api/Transactions/history/${accountId}`);\n      if (!response.ok) {\n        throw new Error(\"Nu s-au putut prelua tranzacțiile.\");\n      }\n\n      const data = await response.json();\n      setTransactions(prev => ({ ...prev, [accountId]: data }));\n    } catch (error) {\n      console.error(\"Eroare la preluarea tranzacțiilor:\", error);\n      setMessageType(\"error\");\n      setMessage(\"Eroare la preluarea tranzacțiilor!\");\n      setTimeout(() => {\n        setMessage(\"\");\n        setMessageType(\"\");\n      }, 4000);\n    } finally {\n      setLoadingTransactions(prev => ({ ...prev, [accountId]: false }));\n    }\n  };\n\n  const toggleTransactionHistory = async (accountId) => {\n    const currentValue = showTransactionHistory[accountId] || false;\n    setShowTransactionHistory(prev => ({ ...prev, [accountId]: !currentValue }));\n    \n    if (!currentValue && !transactions[accountId]) {\n      await fetchTransactions(accountId);\n    }\n  };\n\n  // Funcție utilitară pentru formatarea numerelor fără zecimale inutile\n  const formatNumber = (number) => {\n    return Number.isInteger(number) ? number : number.toFixed(2);\n  };\n\n  const handleDeleteAccount = async (account, userAccounts, fetchAccounts) => {\n  const confirmDelete = window.confirm(`Sigur dorești să ștergi contul ${account.accountType} (${account.currency})?`);\n\n  if (!confirmDelete) return;\n\n  if (account.balance > 0) {\n    alert(\n      `Nu poți șterge acest cont deoarece are un sold de ${account.balance} ${account.currency}.\\n` +\n      `Te rugăm să selectezi contul în care vrei să transferi banii înainte de a șterge acest cont.`\n    );\n    // Aici poți extinde cu logica de selectare transfer, dacă vrei.\n    return;\n  }\n\n  try {\n    const response = await fetch(`https://localhost:7157/api/Accounts/${account.accountId}`, {\n      method: \"DELETE\",\n    });\n\n    if (response.ok) {\n      alert(\"Contul a fost șters cu succes.\");\n      if (fetchAccounts) fetchAccounts(); // Reîncarcă lista conturilor\n    } else {\n      const errorText = await response.text();\n      alert(\"Eroare la ștergerea contului: \" + errorText);\n    }\n  } catch (error) {\n    console.error(\"Eroare:\", error);\n    alert(\"Eroare tehnică: \" + error.message);\n  }\n};\n\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleString('ro-RO', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    });\n  };\n\n  const accountTypes = [...new Set(accounts.map((acc) => acc.accountType))];\n  \n  return (\n    <div className=\"app-container\">\n      <header className=\"header\">\n        <div className=\"header-left logo-container\">\n          <img src={logo} alt=\"TrustPay Logo\" className=\"header-logo\" />\n          <span className=\"logo-text\">Trust Pay - Siguranța banilor tăi!</span>\n        </div>\n        <div className=\"header-right\">\n          <span className=\"username\">Salut, {user.userName}!</span>\n          <button onClick={onLogout}>Logout</button>\n           <button onClick={goToProfile}>Vezi Profilul</button> \n        </div>\n         <div>\n     \n    </div>\n      </header>\n\n      <div className=\"chrome-tabs-container\">\n        {accountTypes.map((type) => (\n          <button\n            key={type}\n            onClick={() => setCurrentTab(type)}\n            className={`chrome-tab ${currentTab === type ? 'chrome-tab-active' : ''}`}\n          >\n            {type}\n          </button>\n        ))}\n      </div>\n\n    <div className=\"tab-content\">\n  {accounts\n    .filter((acc) => acc.accountType === currentTab)\n    .map((acc) => (\n      <div key={acc.accountId} className=\"account-tab\">\n        <div className=\"account-info\">\n          <h3 className=\"account-title\">{acc.accountType}</h3>\n          <div className=\"balance-label\">Balanță:</div>\n          <p className=\"account-balance\">\n            {Number.isInteger(acc.balance) ? acc.balance : acc.balance.toFixed(2)} {acc.currency}\n          </p>\n        </div>\n        <div className=\"account-actions-container\">\n          <div className=\"account-actions-left\">\n            <button \n              className=\"action-button transfer-button\"\n              onClick={() => {\n                setFromAccountId(acc.accountId);\n                setShowTransferForm(true);\n                setTransferType('funds');\n              }}\n            >\n              Mutare fonduri\n            </button>\n            <button \n              className=\"action-button transfer-button\"\n              onClick={() => {\n                setFromAccountId(acc.accountId);\n                setShowTransferForm(true);\n                setTransferType('user');\n              }}\n            >\n              Transfer către alt utilizator\n            </button>\n          </div>\n          <div className=\"account-actions-right\">\n            <button \n              className={`action-button history-button ${showTransactionHistory[acc.accountId] ? 'history-button-active' : ''}`}\n              onClick={() => toggleTransactionHistory(acc.accountId)}\n            >\n              Istoric Tranzacții\n            </button>\n            {/* Butonul de ștergere doar dacă tipul contului nu e Personal */}\n            {acc.accountType !== \"Personal\" && (\n              <button\n                className=\"action-button delete-button\"\n                style={{\n                  backgroundColor: \"crimson\",\n                  color: \"white\",\n                  marginLeft: \"10px\",\n                  border: \"none\",\n                  borderRadius: \"6px\",\n                  padding: \"6px 12px\",\n                  cursor: \"pointer\"\n                }}\n                onClick={() => handleDeleteAccount(acc, accounts, fetchAccounts)}\n              >\n                Șterge cont\n              </button>\n            )}\n          </div>\n        </div>\n     \n\n\n              \n              {/* Secțiunea de istoric tranzacții */}\n              {showTransactionHistory[acc.accountId] && (\n                <div className=\"transaction-history-container\">\n                  <h4 className=\"transaction-history-title\">Istoric Tranzacții</h4>\n                  \n                  {loadingTransactions[acc.accountId] ? (\n                    <div className=\"loading-transactions\">\n                      Încărcare tranzacții...\n                    </div>\n                  ) : transactions[acc.accountId] && transactions[acc.accountId].length > 0 ? (\n                    <ul className=\"transaction-list\">\n                      {/* MODIFICARE: Actualizat modul de afișare pentru a se potrivi cu răspunsul Backend-ului */}\n                      {transactions[acc.accountId].map((transaction, index) => {\n                        // Formatarea sumei din mesaj pentru a elimina zecimalele de 0\n                        let message = transaction.message;\n                        // Căutăm numere urmate de spațiu și valută\n                        const regex = /(\\d+(\\.\\d+)?)\\s+(RON|EUR|USD)/g;\n                        message = message.replace(regex, (match, number, decimal, currency) => {\n                          const formattedNumber = formatNumber(parseFloat(number));\n                          return `${formattedNumber} ${currency}`;\n                        });\n                        \n                        return (\n                          <li key={index} className=\"transaction-item\">\n                            {message}\n                          </li>\n                        );\n                      })}\n                    </ul>\n                  ) : (\n                    <div className=\"no-transactions\">\n                      Nu există tranzacții pentru acest cont.\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          ))}\n      </div>\n\n      {showTransferForm && transferType === 'funds' && (\n        <div className=\"transfer-modal\">\n          <h3 className=\"transfer-modal-title\">Mutare fonduri</h3>\n          \n          <div className=\"form-group\">\n            <label className=\"form-label\">\n              Către cont:\n              <select\n                value={toAccountId}\n                onChange={(e) => setToAccountId(e.target.value)}\n                className=\"form-control\"\n              >\n                <option value=\"\">Selectează</option>\n                {accounts\n                  .filter((acc) => acc.accountId !== fromAccountId)\n                  .map((acc) => (\n                    <option key={acc.accountId} value={acc.accountId}>\n                      {acc.accountType} ({acc.currency})\n                    </option>\n                  ))}\n              </select>\n            </label>\n          </div>\n          \n          <div className=\"form-group\">\n            <label className=\"form-label\">\n              Suma:\n              <input\n                type=\"number\"\n                value={transferAmount}\n                onChange={(e) => setTransferAmount(e.target.value)}\n                placeholder=\"Introdu suma\"\n                className=\"form-control\"\n              />\n            </label>\n          </div>\n          \n          <div className=\"form-group\">\n            <label className=\"form-label\">\n              Valuta:\n              <select\n                value={transferCurrency}\n                onChange={(e) => setTransferCurrency(e.target.value)}\n                className=\"form-control\"\n              >\n                <option value=\"RON\">RON</option>\n                <option value=\"EUR\">EUR</option>\n                <option value=\"USD\">USD</option>\n              </select>\n            </label>\n          </div>\n          \n          <div className=\"modal-actions\">\n            <button \n              className=\"cancel-button\"\n              onClick={() => setShowTransferForm(false)}\n            >\n              Anulează\n            </button>\n            <button \n              className=\"submit-button\"\n              onClick={transferFunds}\n            >\n              Transferă\n            </button>\n          </div>\n\n          {message && (\n            <div className={`message-box ${messageType}-message`}>\n              {message}\n            </div>\n          )}\n        </div>\n      )}\n\n      {showTransferForm && transferType === 'user' && (\n        <div className=\"transfer-modal\">\n          <h3 className=\"transfer-modal-title\">Transfer către alt utilizator</h3>\n          \n          <div className=\"form-group\">\n            <label className=\"form-label\">\n              Către utilizator:\n              <input\n                type=\"text\"\n                value={toUserName}\n                onChange={(e) => setToUserName(e.target.value)}\n                placeholder=\"Introdu numele utilizatorului\"\n                className=\"form-control\"\n              />\n            </label>\n          </div>\n          \n          <div className=\"form-group\">\n            <label className=\"form-label\">\n              Suma:\n              <input\n                type=\"number\"\n                value={amount}\n                onChange={(e) => setAmount(e.target.value)}\n                placeholder=\"Introdu suma\"\n                className=\"form-control\"\n              />\n            </label>\n          </div>\n          \n          <div className=\"form-group\">\n            <label className=\"form-label\">\n              Valuta:\n              <select\n                value={currency}\n                onChange={(e) => setCurrency(e.target.value)}\n                className=\"form-control\"\n              >\n                <option value=\"RON\">RON</option>\n                <option value=\"EUR\">EUR</option>\n                <option value=\"USD\">USD</option>\n              </select>\n            </label>\n          </div>\n          \n          <div className=\"modal-actions\">\n            <button \n              className=\"cancel-button\"\n              onClick={() => setShowTransferForm(false)}\n            >\n              Anulează\n            </button>\n            <button \n              className=\"submit-button\"\n              onClick={transferBetweenUsers}\n            >\n              Transferă\n            </button>\n          </div>\n\n          {message && (\n            <div className={`message-box ${messageType}-message`}>\n              {message}\n            </div>\n          )}\n          \n        </div>\n        \n      )}\n      \n      {/* Notificare de confirmare pentru transfer */}\n      {showNotification && (\n        <div className=\"notification success-notification\">\n          <div className=\"notification-content\">\n            <span className=\"notification-icon\">✓</span>\n            <span>{notificationMessage}</span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}